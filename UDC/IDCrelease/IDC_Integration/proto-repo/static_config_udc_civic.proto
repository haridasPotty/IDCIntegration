// ###########################################
// Unified Data Collector- CIVIC Static Config
// Version 1.0
// ###########################################

// Google Protocol Buffers Version 3.
syntax = "proto3";

option java_multiple_files = true;

// Package name.
package static_config_udc_civic;

message StaticConfig
{
	DefaultToolSettings default_toolbox_settings = 1;
	repeated EndPointParameters end_point_parameters = 2;  //Optional
	int32 max_inactive_time_for_time_bound_jobs = 3 ;
	int32 max_inactive_distance_for_geo_bound_jobs = 4;            ///if part of config might need seperate definition for each geo box type (rectangle,circle,corridor)
	repeated DataSourceConfig data_source_configs = 5;                       //in case the data source needs to have  some parameters configurable
	
}

message EndPointParameters
{
	enum End_Point
	{
		 /// GET_CONFIG = 0;
		JOB_STATUS = 0;
		GEO_HASH = 1;
		SEND_UPLINK_PERSONAL = 2;
		SEND_UPLINK_CROWD = 3;  /// may be refine further later depending upon how many different URLS we define for uploads ( personal , crowd , large etc)
	}
	
	End_Point end_point = 1;           
	string url = 2;   // Optional Field  
	uint32 initial_timeout = 3;      // required
	double timeout_factor = 4;      // required
	uint32 max_timeout_interval = 5; // required
	int32 max_no_of_retries = 6;       // required
	 
}


message DefaultToolSettings
{
	repeated CompressionTool compression_tool =1;
	repeated EncryptionTool encryption_tool =2;
	repeated GeoHashTool geo_hash_tool =3;
}

message CompressionTool
{
	enum Type
	{
		GZIP = 0 ;
	}
	Type type  =1;
	string dpj_id =2;
}
	

message EncryptionTool
{
	enum Type
	{
		AES = 0 ;
		RSA = 1;
	}
	Type type  =1;
	string dpj_id =2;
}
	
message GeoHashTool
{
	enum Type
	{
		LEVEL1 = 0 ;
		LEVEL2 = 1;
	}
	Type type  =1;
	string dpj_id =2;
}

message DataSourceConfig          // individual messages will be added for different kinds of source available on ECU's
{
	CollectdConfig collectd_config = 1;
}

message CollectdConfig
{
	string collectd_sockfile = 1;  // collectd sock file path
}
	
	
	
