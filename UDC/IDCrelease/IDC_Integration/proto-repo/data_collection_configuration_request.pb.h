// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_collection_configuration_request.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_data_5fcollection_5fconfiguration_5frequest_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_data_5fcollection_5fconfiguration_5frequest_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "signal_source_definition.pb.h"
#include "logical_expression.pb.h"
#include "data_types.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_data_5fcollection_5fconfiguration_5frequest_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[46]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto;
namespace data_collection_configuration_request {
class AbsoluteTimeOffset;
class AbsoluteTimeOffsetDefaultTypeInternal;
extern AbsoluteTimeOffsetDefaultTypeInternal _AbsoluteTimeOffset_default_instance_;
class CollectAfterTriggerEvent;
class CollectAfterTriggerEventDefaultTypeInternal;
extern CollectAfterTriggerEventDefaultTypeInternal _CollectAfterTriggerEvent_default_instance_;
class CollectionAction;
class CollectionActionDefaultTypeInternal;
extern CollectionActionDefaultTypeInternal _CollectionAction_default_instance_;
class CollectionExtents;
class CollectionExtentsDefaultTypeInternal;
extern CollectionExtentsDefaultTypeInternal _CollectionExtents_default_instance_;
class CollectionTask;
class CollectionTaskDefaultTypeInternal;
extern CollectionTaskDefaultTypeInternal _CollectionTask_default_instance_;
class CompositeLocation;
class CompositeLocationDefaultTypeInternal;
extern CompositeLocationDefaultTypeInternal _CompositeLocation_default_instance_;
class CompositeTimeRange;
class CompositeTimeRangeDefaultTypeInternal;
extern CompositeTimeRangeDefaultTypeInternal _CompositeTimeRange_default_instance_;
class DataCollectionJob;
class DataCollectionJobDefaultTypeInternal;
extern DataCollectionJobDefaultTypeInternal _DataCollectionJob_default_instance_;
class DataCollectionJob_JobConfig;
class DataCollectionJob_JobConfigDefaultTypeInternal;
extern DataCollectionJob_JobConfigDefaultTypeInternal _DataCollectionJob_JobConfig_default_instance_;
class DataPackageTimeToLive;
class DataPackageTimeToLiveDefaultTypeInternal;
extern DataPackageTimeToLiveDefaultTypeInternal _DataPackageTimeToLive_default_instance_;
class DataRecordingGap;
class DataRecordingGapDefaultTypeInternal;
extern DataRecordingGapDefaultTypeInternal _DataRecordingGap_default_instance_;
class Datapoint;
class DatapointDefaultTypeInternal;
extern DatapointDefaultTypeInternal _Datapoint_default_instance_;
class DatapointsConfiguration;
class DatapointsConfigurationDefaultTypeInternal;
extern DatapointsConfigurationDefaultTypeInternal _DatapointsConfiguration_default_instance_;
class DistanceDeltaTriggerEvent;
class DistanceDeltaTriggerEventDefaultTypeInternal;
extern DistanceDeltaTriggerEventDefaultTypeInternal _DistanceDeltaTriggerEvent_default_instance_;
class EndPointUncertainty;
class EndPointUncertaintyDefaultTypeInternal;
extern EndPointUncertaintyDefaultTypeInternal _EndPointUncertainty_default_instance_;
class GeoAction;
class GeoActionDefaultTypeInternal;
extern GeoActionDefaultTypeInternal _GeoAction_default_instance_;
class GeoCircle;
class GeoCircleDefaultTypeInternal;
extern GeoCircleDefaultTypeInternal _GeoCircle_default_instance_;
class GeoCorridor;
class GeoCorridorDefaultTypeInternal;
extern GeoCorridorDefaultTypeInternal _GeoCorridor_default_instance_;
class GeoLocation;
class GeoLocationDefaultTypeInternal;
extern GeoLocationDefaultTypeInternal _GeoLocation_default_instance_;
class GeoPolygon;
class GeoPolygonDefaultTypeInternal;
extern GeoPolygonDefaultTypeInternal _GeoPolygon_default_instance_;
class GeoRectangle;
class GeoRectangleDefaultTypeInternal;
extern GeoRectangleDefaultTypeInternal _GeoRectangle_default_instance_;
class GeoRegionTriggerEvent;
class GeoRegionTriggerEventDefaultTypeInternal;
extern GeoRegionTriggerEventDefaultTypeInternal _GeoRegionTriggerEvent_default_instance_;
class JobTerminationConditions;
class JobTerminationConditionsDefaultTypeInternal;
extern JobTerminationConditionsDefaultTypeInternal _JobTerminationConditions_default_instance_;
class JobValidityRestrictions;
class JobValidityRestrictionsDefaultTypeInternal;
extern JobValidityRestrictionsDefaultTypeInternal _JobValidityRestrictions_default_instance_;
class KeyValuePair;
class KeyValuePairDefaultTypeInternal;
extern KeyValuePairDefaultTypeInternal _KeyValuePair_default_instance_;
class ListOfSNA;
class ListOfSNADefaultTypeInternal;
extern ListOfSNADefaultTypeInternal _ListOfSNA_default_instance_;
class MapRestriction;
class MapRestrictionDefaultTypeInternal;
extern MapRestrictionDefaultTypeInternal _MapRestriction_default_instance_;
class MapRestriction_FunctionalRoadClassRange;
class MapRestriction_FunctionalRoadClassRangeDefaultTypeInternal;
extern MapRestriction_FunctionalRoadClassRangeDefaultTypeInternal _MapRestriction_FunctionalRoadClassRange_default_instance_;
class MapRestriction_RoadAttribute;
class MapRestriction_RoadAttributeDefaultTypeInternal;
extern MapRestriction_RoadAttributeDefaultTypeInternal _MapRestriction_RoadAttribute_default_instance_;
class Processing_Toolbox_Definition;
class Processing_Toolbox_DefinitionDefaultTypeInternal;
extern Processing_Toolbox_DefinitionDefaultTypeInternal _Processing_Toolbox_Definition_default_instance_;
class RawValueFilter;
class RawValueFilterDefaultTypeInternal;
extern RawValueFilterDefaultTypeInternal _RawValueFilter_default_instance_;
class RvidEffectivePeriod;
class RvidEffectivePeriodDefaultTypeInternal;
extern RvidEffectivePeriodDefaultTypeInternal _RvidEffectivePeriod_default_instance_;
class SignalChangeTriggerEvent;
class SignalChangeTriggerEventDefaultTypeInternal;
extern SignalChangeTriggerEventDefaultTypeInternal _SignalChangeTriggerEvent_default_instance_;
class SignalCollectionCount;
class SignalCollectionCountDefaultTypeInternal;
extern SignalCollectionCountDefaultTypeInternal _SignalCollectionCount_default_instance_;
class SignalTransitionTriggerEvent;
class SignalTransitionTriggerEventDefaultTypeInternal;
extern SignalTransitionTriggerEventDefaultTypeInternal _SignalTransitionTriggerEvent_default_instance_;
class StartUpDelay;
class StartUpDelayDefaultTypeInternal;
extern StartUpDelayDefaultTypeInternal _StartUpDelay_default_instance_;
class SystemStates;
class SystemStatesDefaultTypeInternal;
extern SystemStatesDefaultTypeInternal _SystemStates_default_instance_;
class TimeDeltaTriggerEvent;
class TimeDeltaTriggerEventDefaultTypeInternal;
extern TimeDeltaTriggerEventDefaultTypeInternal _TimeDeltaTriggerEvent_default_instance_;
class TimestampInterval;
class TimestampIntervalDefaultTypeInternal;
extern TimestampIntervalDefaultTypeInternal _TimestampInterval_default_instance_;
class ToolInputParameter;
class ToolInputParameterDefaultTypeInternal;
extern ToolInputParameterDefaultTypeInternal _ToolInputParameter_default_instance_;
class Trigger;
class TriggerDefaultTypeInternal;
extern TriggerDefaultTypeInternal _Trigger_default_instance_;
class TriggerAnnotationID;
class TriggerAnnotationIDDefaultTypeInternal;
extern TriggerAnnotationIDDefaultTypeInternal _TriggerAnnotationID_default_instance_;
class Uint32Range;
class Uint32RangeDefaultTypeInternal;
extern Uint32RangeDefaultTypeInternal _Uint32Range_default_instance_;
class ValueInterval;
class ValueIntervalDefaultTypeInternal;
extern ValueIntervalDefaultTypeInternal _ValueInterval_default_instance_;
class ValueRange;
class ValueRangeDefaultTypeInternal;
extern ValueRangeDefaultTypeInternal _ValueRange_default_instance_;
class Version;
class VersionDefaultTypeInternal;
extern VersionDefaultTypeInternal _Version_default_instance_;
}  // namespace data_collection_configuration_request
PROTOBUF_NAMESPACE_OPEN
template<> ::data_collection_configuration_request::AbsoluteTimeOffset* Arena::CreateMaybeMessage<::data_collection_configuration_request::AbsoluteTimeOffset>(Arena*);
template<> ::data_collection_configuration_request::CollectAfterTriggerEvent* Arena::CreateMaybeMessage<::data_collection_configuration_request::CollectAfterTriggerEvent>(Arena*);
template<> ::data_collection_configuration_request::CollectionAction* Arena::CreateMaybeMessage<::data_collection_configuration_request::CollectionAction>(Arena*);
template<> ::data_collection_configuration_request::CollectionExtents* Arena::CreateMaybeMessage<::data_collection_configuration_request::CollectionExtents>(Arena*);
template<> ::data_collection_configuration_request::CollectionTask* Arena::CreateMaybeMessage<::data_collection_configuration_request::CollectionTask>(Arena*);
template<> ::data_collection_configuration_request::CompositeLocation* Arena::CreateMaybeMessage<::data_collection_configuration_request::CompositeLocation>(Arena*);
template<> ::data_collection_configuration_request::CompositeTimeRange* Arena::CreateMaybeMessage<::data_collection_configuration_request::CompositeTimeRange>(Arena*);
template<> ::data_collection_configuration_request::DataCollectionJob* Arena::CreateMaybeMessage<::data_collection_configuration_request::DataCollectionJob>(Arena*);
template<> ::data_collection_configuration_request::DataCollectionJob_JobConfig* Arena::CreateMaybeMessage<::data_collection_configuration_request::DataCollectionJob_JobConfig>(Arena*);
template<> ::data_collection_configuration_request::DataPackageTimeToLive* Arena::CreateMaybeMessage<::data_collection_configuration_request::DataPackageTimeToLive>(Arena*);
template<> ::data_collection_configuration_request::DataRecordingGap* Arena::CreateMaybeMessage<::data_collection_configuration_request::DataRecordingGap>(Arena*);
template<> ::data_collection_configuration_request::Datapoint* Arena::CreateMaybeMessage<::data_collection_configuration_request::Datapoint>(Arena*);
template<> ::data_collection_configuration_request::DatapointsConfiguration* Arena::CreateMaybeMessage<::data_collection_configuration_request::DatapointsConfiguration>(Arena*);
template<> ::data_collection_configuration_request::DistanceDeltaTriggerEvent* Arena::CreateMaybeMessage<::data_collection_configuration_request::DistanceDeltaTriggerEvent>(Arena*);
template<> ::data_collection_configuration_request::EndPointUncertainty* Arena::CreateMaybeMessage<::data_collection_configuration_request::EndPointUncertainty>(Arena*);
template<> ::data_collection_configuration_request::GeoAction* Arena::CreateMaybeMessage<::data_collection_configuration_request::GeoAction>(Arena*);
template<> ::data_collection_configuration_request::GeoCircle* Arena::CreateMaybeMessage<::data_collection_configuration_request::GeoCircle>(Arena*);
template<> ::data_collection_configuration_request::GeoCorridor* Arena::CreateMaybeMessage<::data_collection_configuration_request::GeoCorridor>(Arena*);
template<> ::data_collection_configuration_request::GeoLocation* Arena::CreateMaybeMessage<::data_collection_configuration_request::GeoLocation>(Arena*);
template<> ::data_collection_configuration_request::GeoPolygon* Arena::CreateMaybeMessage<::data_collection_configuration_request::GeoPolygon>(Arena*);
template<> ::data_collection_configuration_request::GeoRectangle* Arena::CreateMaybeMessage<::data_collection_configuration_request::GeoRectangle>(Arena*);
template<> ::data_collection_configuration_request::GeoRegionTriggerEvent* Arena::CreateMaybeMessage<::data_collection_configuration_request::GeoRegionTriggerEvent>(Arena*);
template<> ::data_collection_configuration_request::JobTerminationConditions* Arena::CreateMaybeMessage<::data_collection_configuration_request::JobTerminationConditions>(Arena*);
template<> ::data_collection_configuration_request::JobValidityRestrictions* Arena::CreateMaybeMessage<::data_collection_configuration_request::JobValidityRestrictions>(Arena*);
template<> ::data_collection_configuration_request::KeyValuePair* Arena::CreateMaybeMessage<::data_collection_configuration_request::KeyValuePair>(Arena*);
template<> ::data_collection_configuration_request::ListOfSNA* Arena::CreateMaybeMessage<::data_collection_configuration_request::ListOfSNA>(Arena*);
template<> ::data_collection_configuration_request::MapRestriction* Arena::CreateMaybeMessage<::data_collection_configuration_request::MapRestriction>(Arena*);
template<> ::data_collection_configuration_request::MapRestriction_FunctionalRoadClassRange* Arena::CreateMaybeMessage<::data_collection_configuration_request::MapRestriction_FunctionalRoadClassRange>(Arena*);
template<> ::data_collection_configuration_request::MapRestriction_RoadAttribute* Arena::CreateMaybeMessage<::data_collection_configuration_request::MapRestriction_RoadAttribute>(Arena*);
template<> ::data_collection_configuration_request::Processing_Toolbox_Definition* Arena::CreateMaybeMessage<::data_collection_configuration_request::Processing_Toolbox_Definition>(Arena*);
template<> ::data_collection_configuration_request::RawValueFilter* Arena::CreateMaybeMessage<::data_collection_configuration_request::RawValueFilter>(Arena*);
template<> ::data_collection_configuration_request::RvidEffectivePeriod* Arena::CreateMaybeMessage<::data_collection_configuration_request::RvidEffectivePeriod>(Arena*);
template<> ::data_collection_configuration_request::SignalChangeTriggerEvent* Arena::CreateMaybeMessage<::data_collection_configuration_request::SignalChangeTriggerEvent>(Arena*);
template<> ::data_collection_configuration_request::SignalCollectionCount* Arena::CreateMaybeMessage<::data_collection_configuration_request::SignalCollectionCount>(Arena*);
template<> ::data_collection_configuration_request::SignalTransitionTriggerEvent* Arena::CreateMaybeMessage<::data_collection_configuration_request::SignalTransitionTriggerEvent>(Arena*);
template<> ::data_collection_configuration_request::StartUpDelay* Arena::CreateMaybeMessage<::data_collection_configuration_request::StartUpDelay>(Arena*);
template<> ::data_collection_configuration_request::SystemStates* Arena::CreateMaybeMessage<::data_collection_configuration_request::SystemStates>(Arena*);
template<> ::data_collection_configuration_request::TimeDeltaTriggerEvent* Arena::CreateMaybeMessage<::data_collection_configuration_request::TimeDeltaTriggerEvent>(Arena*);
template<> ::data_collection_configuration_request::TimestampInterval* Arena::CreateMaybeMessage<::data_collection_configuration_request::TimestampInterval>(Arena*);
template<> ::data_collection_configuration_request::ToolInputParameter* Arena::CreateMaybeMessage<::data_collection_configuration_request::ToolInputParameter>(Arena*);
template<> ::data_collection_configuration_request::Trigger* Arena::CreateMaybeMessage<::data_collection_configuration_request::Trigger>(Arena*);
template<> ::data_collection_configuration_request::TriggerAnnotationID* Arena::CreateMaybeMessage<::data_collection_configuration_request::TriggerAnnotationID>(Arena*);
template<> ::data_collection_configuration_request::Uint32Range* Arena::CreateMaybeMessage<::data_collection_configuration_request::Uint32Range>(Arena*);
template<> ::data_collection_configuration_request::ValueInterval* Arena::CreateMaybeMessage<::data_collection_configuration_request::ValueInterval>(Arena*);
template<> ::data_collection_configuration_request::ValueRange* Arena::CreateMaybeMessage<::data_collection_configuration_request::ValueRange>(Arena*);
template<> ::data_collection_configuration_request::Version* Arena::CreateMaybeMessage<::data_collection_configuration_request::Version>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace data_collection_configuration_request {

enum CompositeTimeRange_WeekdayEnum : int {
  CompositeTimeRange_WeekdayEnum_UNDEFINED = 0,
  CompositeTimeRange_WeekdayEnum_MONDAY = 1,
  CompositeTimeRange_WeekdayEnum_TUESDAY = 2,
  CompositeTimeRange_WeekdayEnum_WEDNESDAY = 3,
  CompositeTimeRange_WeekdayEnum_THURSDAY = 4,
  CompositeTimeRange_WeekdayEnum_FRIDAY = 5,
  CompositeTimeRange_WeekdayEnum_SATURDAY = 6,
  CompositeTimeRange_WeekdayEnum_SUNDAY = 7,
  CompositeTimeRange_WeekdayEnum_CompositeTimeRange_WeekdayEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  CompositeTimeRange_WeekdayEnum_CompositeTimeRange_WeekdayEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool CompositeTimeRange_WeekdayEnum_IsValid(int value);
constexpr CompositeTimeRange_WeekdayEnum CompositeTimeRange_WeekdayEnum_WeekdayEnum_MIN = CompositeTimeRange_WeekdayEnum_UNDEFINED;
constexpr CompositeTimeRange_WeekdayEnum CompositeTimeRange_WeekdayEnum_WeekdayEnum_MAX = CompositeTimeRange_WeekdayEnum_SUNDAY;
constexpr int CompositeTimeRange_WeekdayEnum_WeekdayEnum_ARRAYSIZE = CompositeTimeRange_WeekdayEnum_WeekdayEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CompositeTimeRange_WeekdayEnum_descriptor();
template<typename T>
inline const std::string& CompositeTimeRange_WeekdayEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CompositeTimeRange_WeekdayEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CompositeTimeRange_WeekdayEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CompositeTimeRange_WeekdayEnum_descriptor(), enum_t_value);
}
inline bool CompositeTimeRange_WeekdayEnum_Parse(
    const std::string& name, CompositeTimeRange_WeekdayEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CompositeTimeRange_WeekdayEnum>(
    CompositeTimeRange_WeekdayEnum_descriptor(), name, value);
}
enum MapRestriction_RoadAttributeEnum : int {
  MapRestriction_RoadAttributeEnum_NONE = 0,
  MapRestriction_RoadAttributeEnum_MOTORWAY = 2,
  MapRestriction_RoadAttributeEnum_COUNTRY_ROAD = 3,
  MapRestriction_RoadAttributeEnum_CITY_ROAD = 4,
  MapRestriction_RoadAttributeEnum_HOV = 5,
  MapRestriction_RoadAttributeEnum_TUNNEL = 6,
  MapRestriction_RoadAttributeEnum_BRIDGE = 7,
  MapRestriction_RoadAttributeEnum_WATER_AREA = 8,
  MapRestriction_RoadAttributeEnum_OTHER_AREA = 9,
  MapRestriction_RoadAttributeEnum_STATE_ROAD = 10,
  MapRestriction_RoadAttributeEnum_TOLL = 11,
  MapRestriction_RoadAttributeEnum_PRIVATE = 12,
  MapRestriction_RoadAttributeEnum_DOUBLE_CARRIAGE = 13,
  MapRestriction_RoadAttributeEnum_OFF_MAP = 14,
  MapRestriction_RoadAttributeEnum_RURAL_AREA = 15,
  MapRestriction_RoadAttributeEnum_BUILDING = 16,
  MapRestriction_RoadAttributeEnum_MapRestriction_RoadAttributeEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  MapRestriction_RoadAttributeEnum_MapRestriction_RoadAttributeEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool MapRestriction_RoadAttributeEnum_IsValid(int value);
constexpr MapRestriction_RoadAttributeEnum MapRestriction_RoadAttributeEnum_RoadAttributeEnum_MIN = MapRestriction_RoadAttributeEnum_NONE;
constexpr MapRestriction_RoadAttributeEnum MapRestriction_RoadAttributeEnum_RoadAttributeEnum_MAX = MapRestriction_RoadAttributeEnum_BUILDING;
constexpr int MapRestriction_RoadAttributeEnum_RoadAttributeEnum_ARRAYSIZE = MapRestriction_RoadAttributeEnum_RoadAttributeEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MapRestriction_RoadAttributeEnum_descriptor();
template<typename T>
inline const std::string& MapRestriction_RoadAttributeEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MapRestriction_RoadAttributeEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MapRestriction_RoadAttributeEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MapRestriction_RoadAttributeEnum_descriptor(), enum_t_value);
}
inline bool MapRestriction_RoadAttributeEnum_Parse(
    const std::string& name, MapRestriction_RoadAttributeEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MapRestriction_RoadAttributeEnum>(
    MapRestriction_RoadAttributeEnum_descriptor(), name, value);
}
enum TimeDeltaTriggerEvent_TimeTriggerType : int {
  TimeDeltaTriggerEvent_TimeTriggerType_ACTIVE = 0,
  TimeDeltaTriggerEvent_TimeTriggerType_PASSIVE = 1,
  TimeDeltaTriggerEvent_TimeTriggerType_TimeDeltaTriggerEvent_TimeTriggerType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  TimeDeltaTriggerEvent_TimeTriggerType_TimeDeltaTriggerEvent_TimeTriggerType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool TimeDeltaTriggerEvent_TimeTriggerType_IsValid(int value);
constexpr TimeDeltaTriggerEvent_TimeTriggerType TimeDeltaTriggerEvent_TimeTriggerType_TimeTriggerType_MIN = TimeDeltaTriggerEvent_TimeTriggerType_ACTIVE;
constexpr TimeDeltaTriggerEvent_TimeTriggerType TimeDeltaTriggerEvent_TimeTriggerType_TimeTriggerType_MAX = TimeDeltaTriggerEvent_TimeTriggerType_PASSIVE;
constexpr int TimeDeltaTriggerEvent_TimeTriggerType_TimeTriggerType_ARRAYSIZE = TimeDeltaTriggerEvent_TimeTriggerType_TimeTriggerType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TimeDeltaTriggerEvent_TimeTriggerType_descriptor();
template<typename T>
inline const std::string& TimeDeltaTriggerEvent_TimeTriggerType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, TimeDeltaTriggerEvent_TimeTriggerType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function TimeDeltaTriggerEvent_TimeTriggerType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    TimeDeltaTriggerEvent_TimeTriggerType_descriptor(), enum_t_value);
}
inline bool TimeDeltaTriggerEvent_TimeTriggerType_Parse(
    const std::string& name, TimeDeltaTriggerEvent_TimeTriggerType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<TimeDeltaTriggerEvent_TimeTriggerType>(
    TimeDeltaTriggerEvent_TimeTriggerType_descriptor(), name, value);
}
enum Datapoint_DataPointValueTypeEnum : int {
  Datapoint_DataPointValueTypeEnum_DOUBLE = 0,
  Datapoint_DataPointValueTypeEnum_FLOAT = 1,
  Datapoint_DataPointValueTypeEnum_INT32 = 2,
  Datapoint_DataPointValueTypeEnum_INT64 = 3,
  Datapoint_DataPointValueTypeEnum_UINT32 = 4,
  Datapoint_DataPointValueTypeEnum_UINT64 = 5,
  Datapoint_DataPointValueTypeEnum_SINT32 = 6,
  Datapoint_DataPointValueTypeEnum_SINT64 = 7,
  Datapoint_DataPointValueTypeEnum_FIXED32 = 8,
  Datapoint_DataPointValueTypeEnum_FIXED64 = 9,
  Datapoint_DataPointValueTypeEnum_SFIXED32 = 10,
  Datapoint_DataPointValueTypeEnum_SFIXED64 = 11,
  Datapoint_DataPointValueTypeEnum_BOOL = 12,
  Datapoint_DataPointValueTypeEnum_STRING = 13,
  Datapoint_DataPointValueTypeEnum_BYTES = 14,
  Datapoint_DataPointValueTypeEnum_Datapoint_DataPointValueTypeEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  Datapoint_DataPointValueTypeEnum_Datapoint_DataPointValueTypeEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool Datapoint_DataPointValueTypeEnum_IsValid(int value);
constexpr Datapoint_DataPointValueTypeEnum Datapoint_DataPointValueTypeEnum_DataPointValueTypeEnum_MIN = Datapoint_DataPointValueTypeEnum_DOUBLE;
constexpr Datapoint_DataPointValueTypeEnum Datapoint_DataPointValueTypeEnum_DataPointValueTypeEnum_MAX = Datapoint_DataPointValueTypeEnum_BYTES;
constexpr int Datapoint_DataPointValueTypeEnum_DataPointValueTypeEnum_ARRAYSIZE = Datapoint_DataPointValueTypeEnum_DataPointValueTypeEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Datapoint_DataPointValueTypeEnum_descriptor();
template<typename T>
inline const std::string& Datapoint_DataPointValueTypeEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Datapoint_DataPointValueTypeEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Datapoint_DataPointValueTypeEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Datapoint_DataPointValueTypeEnum_descriptor(), enum_t_value);
}
inline bool Datapoint_DataPointValueTypeEnum_Parse(
    const std::string& name, Datapoint_DataPointValueTypeEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Datapoint_DataPointValueTypeEnum>(
    Datapoint_DataPointValueTypeEnum_descriptor(), name, value);
}
enum Datapoint_RelativeDataValueCaptureEnum : int {
  Datapoint_RelativeDataValueCaptureEnum_NOT_RELATIVE = 0,
  Datapoint_RelativeDataValueCaptureEnum_RELATIVE_WRT_FILE = 1,
  Datapoint_RelativeDataValueCaptureEnum_RELATIVE_WRT_RVID = 2,
  Datapoint_RelativeDataValueCaptureEnum_RELATIVE_WRT_SESSIONID = 3,
  Datapoint_RelativeDataValueCaptureEnum_Datapoint_RelativeDataValueCaptureEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  Datapoint_RelativeDataValueCaptureEnum_Datapoint_RelativeDataValueCaptureEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool Datapoint_RelativeDataValueCaptureEnum_IsValid(int value);
constexpr Datapoint_RelativeDataValueCaptureEnum Datapoint_RelativeDataValueCaptureEnum_RelativeDataValueCaptureEnum_MIN = Datapoint_RelativeDataValueCaptureEnum_NOT_RELATIVE;
constexpr Datapoint_RelativeDataValueCaptureEnum Datapoint_RelativeDataValueCaptureEnum_RelativeDataValueCaptureEnum_MAX = Datapoint_RelativeDataValueCaptureEnum_RELATIVE_WRT_SESSIONID;
constexpr int Datapoint_RelativeDataValueCaptureEnum_RelativeDataValueCaptureEnum_ARRAYSIZE = Datapoint_RelativeDataValueCaptureEnum_RelativeDataValueCaptureEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Datapoint_RelativeDataValueCaptureEnum_descriptor();
template<typename T>
inline const std::string& Datapoint_RelativeDataValueCaptureEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Datapoint_RelativeDataValueCaptureEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Datapoint_RelativeDataValueCaptureEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Datapoint_RelativeDataValueCaptureEnum_descriptor(), enum_t_value);
}
inline bool Datapoint_RelativeDataValueCaptureEnum_Parse(
    const std::string& name, Datapoint_RelativeDataValueCaptureEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Datapoint_RelativeDataValueCaptureEnum>(
    Datapoint_RelativeDataValueCaptureEnum_descriptor(), name, value);
}
enum LogicalOperatorEnum : int {
  OR = 0,
  AND = 1,
  NA = 2,
  LogicalOperatorEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  LogicalOperatorEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool LogicalOperatorEnum_IsValid(int value);
constexpr LogicalOperatorEnum LogicalOperatorEnum_MIN = OR;
constexpr LogicalOperatorEnum LogicalOperatorEnum_MAX = NA;
constexpr int LogicalOperatorEnum_ARRAYSIZE = LogicalOperatorEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LogicalOperatorEnum_descriptor();
template<typename T>
inline const std::string& LogicalOperatorEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, LogicalOperatorEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function LogicalOperatorEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    LogicalOperatorEnum_descriptor(), enum_t_value);
}
inline bool LogicalOperatorEnum_Parse(
    const std::string& name, LogicalOperatorEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<LogicalOperatorEnum>(
    LogicalOperatorEnum_descriptor(), name, value);
}
enum System_States : int {
  IGN_LOCK = 0,
  IGN_OFF = 1,
  IGN_ACC = 2,
  IGN_ON = 3,
  IGN_START = 4,
  IGNITION_OFF = 5,
  System_States_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  System_States_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool System_States_IsValid(int value);
constexpr System_States System_States_MIN = IGN_LOCK;
constexpr System_States System_States_MAX = IGNITION_OFF;
constexpr int System_States_ARRAYSIZE = System_States_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* System_States_descriptor();
template<typename T>
inline const std::string& System_States_Name(T enum_t_value) {
  static_assert(::std::is_same<T, System_States>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function System_States_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    System_States_descriptor(), enum_t_value);
}
inline bool System_States_Parse(
    const std::string& name, System_States* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<System_States>(
    System_States_descriptor(), name, value);
}
enum RelativeTimeStampCaptureEnum : int {
  NO_TIMESTAMP = 0,
  NOT_RELATIVE = 1,
  RELATIVE_WRT_FILE = 2,
  RELATIVE_WRT_RVID = 3,
  RELATIVE_WRT_SESSIONID = 4,
  RelativeTimeStampCaptureEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  RelativeTimeStampCaptureEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool RelativeTimeStampCaptureEnum_IsValid(int value);
constexpr RelativeTimeStampCaptureEnum RelativeTimeStampCaptureEnum_MIN = NO_TIMESTAMP;
constexpr RelativeTimeStampCaptureEnum RelativeTimeStampCaptureEnum_MAX = RELATIVE_WRT_SESSIONID;
constexpr int RelativeTimeStampCaptureEnum_ARRAYSIZE = RelativeTimeStampCaptureEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RelativeTimeStampCaptureEnum_descriptor();
template<typename T>
inline const std::string& RelativeTimeStampCaptureEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, RelativeTimeStampCaptureEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function RelativeTimeStampCaptureEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    RelativeTimeStampCaptureEnum_descriptor(), enum_t_value);
}
inline bool RelativeTimeStampCaptureEnum_Parse(
    const std::string& name, RelativeTimeStampCaptureEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<RelativeTimeStampCaptureEnum>(
    RelativeTimeStampCaptureEnum_descriptor(), name, value);
}
enum UploadChannel : int {
  PERSONAL_DATA = 0,
  CROWD_DATA = 1,
  UploadChannel_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  UploadChannel_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool UploadChannel_IsValid(int value);
constexpr UploadChannel UploadChannel_MIN = PERSONAL_DATA;
constexpr UploadChannel UploadChannel_MAX = CROWD_DATA;
constexpr int UploadChannel_ARRAYSIZE = UploadChannel_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UploadChannel_descriptor();
template<typename T>
inline const std::string& UploadChannel_Name(T enum_t_value) {
  static_assert(::std::is_same<T, UploadChannel>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function UploadChannel_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    UploadChannel_descriptor(), enum_t_value);
}
inline bool UploadChannel_Parse(
    const std::string& name, UploadChannel* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<UploadChannel>(
    UploadChannel_descriptor(), name, value);
}
// ===================================================================

class Version :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.Version) */ {
 public:
  Version();
  virtual ~Version();

  Version(const Version& from);
  Version(Version&& from) noexcept
    : Version() {
    *this = ::std::move(from);
  }

  inline Version& operator=(const Version& from) {
    CopyFrom(from);
    return *this;
  }
  inline Version& operator=(Version&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Version& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Version* internal_default_instance() {
    return reinterpret_cast<const Version*>(
               &_Version_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Version& a, Version& b) {
    a.Swap(&b);
  }
  inline void Swap(Version* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Version* New() const final {
    return CreateMaybeMessage<Version>(nullptr);
  }

  Version* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Version>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Version& from);
  void MergeFrom(const Version& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Version* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.Version";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 4,
    kMajorFieldNumber = 1,
    kMinorFieldNumber = 2,
    kPatchFieldNumber = 3,
  };
  // string name = 4;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint32 major = 1;
  void clear_major();
  ::PROTOBUF_NAMESPACE_ID::uint32 major() const;
  void set_major(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_major() const;
  void _internal_set_major(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 minor = 2;
  void clear_minor();
  ::PROTOBUF_NAMESPACE_ID::uint32 minor() const;
  void set_minor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_minor() const;
  void _internal_set_minor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 patch = 3;
  void clear_patch();
  ::PROTOBUF_NAMESPACE_ID::uint32 patch() const;
  void set_patch(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_patch() const;
  void _internal_set_patch(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.Version)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 major_;
  ::PROTOBUF_NAMESPACE_ID::uint32 minor_;
  ::PROTOBUF_NAMESPACE_ID::uint32 patch_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class CollectionExtents :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.CollectionExtents) */ {
 public:
  CollectionExtents();
  virtual ~CollectionExtents();

  CollectionExtents(const CollectionExtents& from);
  CollectionExtents(CollectionExtents&& from) noexcept
    : CollectionExtents() {
    *this = ::std::move(from);
  }

  inline CollectionExtents& operator=(const CollectionExtents& from) {
    CopyFrom(from);
    return *this;
  }
  inline CollectionExtents& operator=(CollectionExtents&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CollectionExtents& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CollectionExtents* internal_default_instance() {
    return reinterpret_cast<const CollectionExtents*>(
               &_CollectionExtents_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CollectionExtents& a, CollectionExtents& b) {
    a.Swap(&b);
  }
  inline void Swap(CollectionExtents* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CollectionExtents* New() const final {
    return CreateMaybeMessage<CollectionExtents>(nullptr);
  }

  CollectionExtents* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CollectionExtents>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CollectionExtents& from);
  void MergeFrom(const CollectionExtents& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CollectionExtents* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.CollectionExtents";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kByTriggerFieldNumber = 5,
    kCountFieldNumber = 1,
    kSizeByteFieldNumber = 2,
    kPathLengthMFieldNumber = 3,
    kPathDurationSFieldNumber = 4,
  };
  // repeated .data_collection_configuration_request.Trigger by_trigger = 5;
  int by_trigger_size() const;
  private:
  int _internal_by_trigger_size() const;
  public:
  void clear_by_trigger();
  ::data_collection_configuration_request::Trigger* mutable_by_trigger(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Trigger >*
      mutable_by_trigger();
  private:
  const ::data_collection_configuration_request::Trigger& _internal_by_trigger(int index) const;
  ::data_collection_configuration_request::Trigger* _internal_add_by_trigger();
  public:
  const ::data_collection_configuration_request::Trigger& by_trigger(int index) const;
  ::data_collection_configuration_request::Trigger* add_by_trigger();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Trigger >&
      by_trigger() const;

  // uint64 count = 1;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint64 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 size_byte = 2;
  void clear_size_byte();
  ::PROTOBUF_NAMESPACE_ID::uint64 size_byte() const;
  void set_size_byte(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_size_byte() const;
  void _internal_set_size_byte(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 path_length_m = 3;
  void clear_path_length_m();
  ::PROTOBUF_NAMESPACE_ID::uint64 path_length_m() const;
  void set_path_length_m(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_path_length_m() const;
  void _internal_set_path_length_m(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 path_duration_s = 4;
  void clear_path_duration_s();
  ::PROTOBUF_NAMESPACE_ID::uint64 path_duration_s() const;
  void set_path_duration_s(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_path_duration_s() const;
  void _internal_set_path_duration_s(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.CollectionExtents)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Trigger > by_trigger_;
  ::PROTOBUF_NAMESPACE_ID::uint64 count_;
  ::PROTOBUF_NAMESPACE_ID::uint64 size_byte_;
  ::PROTOBUF_NAMESPACE_ID::uint64 path_length_m_;
  ::PROTOBUF_NAMESPACE_ID::uint64 path_duration_s_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class TimestampInterval :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.TimestampInterval) */ {
 public:
  TimestampInterval();
  virtual ~TimestampInterval();

  TimestampInterval(const TimestampInterval& from);
  TimestampInterval(TimestampInterval&& from) noexcept
    : TimestampInterval() {
    *this = ::std::move(from);
  }

  inline TimestampInterval& operator=(const TimestampInterval& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimestampInterval& operator=(TimestampInterval&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TimestampInterval& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TimestampInterval* internal_default_instance() {
    return reinterpret_cast<const TimestampInterval*>(
               &_TimestampInterval_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(TimestampInterval& a, TimestampInterval& b) {
    a.Swap(&b);
  }
  inline void Swap(TimestampInterval* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TimestampInterval* New() const final {
    return CreateMaybeMessage<TimestampInterval>(nullptr);
  }

  TimestampInterval* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TimestampInterval>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TimestampInterval& from);
  void MergeFrom(const TimestampInterval& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TimestampInterval* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.TimestampInterval";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.TimestampInterval)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class Uint32Range :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.Uint32Range) */ {
 public:
  Uint32Range();
  virtual ~Uint32Range();

  Uint32Range(const Uint32Range& from);
  Uint32Range(Uint32Range&& from) noexcept
    : Uint32Range() {
    *this = ::std::move(from);
  }

  inline Uint32Range& operator=(const Uint32Range& from) {
    CopyFrom(from);
    return *this;
  }
  inline Uint32Range& operator=(Uint32Range&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Uint32Range& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Uint32Range* internal_default_instance() {
    return reinterpret_cast<const Uint32Range*>(
               &_Uint32Range_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Uint32Range& a, Uint32Range& b) {
    a.Swap(&b);
  }
  inline void Swap(Uint32Range* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Uint32Range* New() const final {
    return CreateMaybeMessage<Uint32Range>(nullptr);
  }

  Uint32Range* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Uint32Range>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Uint32Range& from);
  void MergeFrom(const Uint32Range& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Uint32Range* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.Uint32Range";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinValueFieldNumber = 1,
    kMaxValueFieldNumber = 2,
  };
  // uint32 min_value = 1;
  void clear_min_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 min_value() const;
  void set_min_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_min_value() const;
  void _internal_set_min_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 max_value = 2;
  void clear_max_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 max_value() const;
  void set_max_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_max_value() const;
  void _internal_set_max_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.Uint32Range)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 min_value_;
  ::PROTOBUF_NAMESPACE_ID::uint32 max_value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class GeoLocation :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.GeoLocation) */ {
 public:
  GeoLocation();
  virtual ~GeoLocation();

  GeoLocation(const GeoLocation& from);
  GeoLocation(GeoLocation&& from) noexcept
    : GeoLocation() {
    *this = ::std::move(from);
  }

  inline GeoLocation& operator=(const GeoLocation& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeoLocation& operator=(GeoLocation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GeoLocation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GeoLocation* internal_default_instance() {
    return reinterpret_cast<const GeoLocation*>(
               &_GeoLocation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GeoLocation& a, GeoLocation& b) {
    a.Swap(&b);
  }
  inline void Swap(GeoLocation* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GeoLocation* New() const final {
    return CreateMaybeMessage<GeoLocation>(nullptr);
  }

  GeoLocation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GeoLocation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GeoLocation& from);
  void MergeFrom(const GeoLocation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeoLocation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.GeoLocation";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLatitudeDegFieldNumber = 1,
    kLongitudeDegFieldNumber = 2,
  };
  // double latitude_deg = 1;
  void clear_latitude_deg();
  double latitude_deg() const;
  void set_latitude_deg(double value);
  private:
  double _internal_latitude_deg() const;
  void _internal_set_latitude_deg(double value);
  public:

  // double longitude_deg = 2;
  void clear_longitude_deg();
  double longitude_deg() const;
  void set_longitude_deg(double value);
  private:
  double _internal_longitude_deg() const;
  void _internal_set_longitude_deg(double value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.GeoLocation)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double latitude_deg_;
  double longitude_deg_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class GeoRectangle :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.GeoRectangle) */ {
 public:
  GeoRectangle();
  virtual ~GeoRectangle();

  GeoRectangle(const GeoRectangle& from);
  GeoRectangle(GeoRectangle&& from) noexcept
    : GeoRectangle() {
    *this = ::std::move(from);
  }

  inline GeoRectangle& operator=(const GeoRectangle& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeoRectangle& operator=(GeoRectangle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GeoRectangle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GeoRectangle* internal_default_instance() {
    return reinterpret_cast<const GeoRectangle*>(
               &_GeoRectangle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GeoRectangle& a, GeoRectangle& b) {
    a.Swap(&b);
  }
  inline void Swap(GeoRectangle* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GeoRectangle* New() const final {
    return CreateMaybeMessage<GeoRectangle>(nullptr);
  }

  GeoRectangle* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GeoRectangle>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GeoRectangle& from);
  void MergeFrom(const GeoRectangle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeoRectangle* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.GeoRectangle";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTopLeftFieldNumber = 1,
    kBottomRightFieldNumber = 2,
  };
  // .data_collection_configuration_request.GeoLocation top_left = 1;
  bool has_top_left() const;
  private:
  bool _internal_has_top_left() const;
  public:
  void clear_top_left();
  const ::data_collection_configuration_request::GeoLocation& top_left() const;
  ::data_collection_configuration_request::GeoLocation* release_top_left();
  ::data_collection_configuration_request::GeoLocation* mutable_top_left();
  void set_allocated_top_left(::data_collection_configuration_request::GeoLocation* top_left);
  private:
  const ::data_collection_configuration_request::GeoLocation& _internal_top_left() const;
  ::data_collection_configuration_request::GeoLocation* _internal_mutable_top_left();
  public:

  // .data_collection_configuration_request.GeoLocation bottom_right = 2;
  bool has_bottom_right() const;
  private:
  bool _internal_has_bottom_right() const;
  public:
  void clear_bottom_right();
  const ::data_collection_configuration_request::GeoLocation& bottom_right() const;
  ::data_collection_configuration_request::GeoLocation* release_bottom_right();
  ::data_collection_configuration_request::GeoLocation* mutable_bottom_right();
  void set_allocated_bottom_right(::data_collection_configuration_request::GeoLocation* bottom_right);
  private:
  const ::data_collection_configuration_request::GeoLocation& _internal_bottom_right() const;
  ::data_collection_configuration_request::GeoLocation* _internal_mutable_bottom_right();
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.GeoRectangle)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::data_collection_configuration_request::GeoLocation* top_left_;
  ::data_collection_configuration_request::GeoLocation* bottom_right_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class GeoCircle :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.GeoCircle) */ {
 public:
  GeoCircle();
  virtual ~GeoCircle();

  GeoCircle(const GeoCircle& from);
  GeoCircle(GeoCircle&& from) noexcept
    : GeoCircle() {
    *this = ::std::move(from);
  }

  inline GeoCircle& operator=(const GeoCircle& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeoCircle& operator=(GeoCircle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GeoCircle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GeoCircle* internal_default_instance() {
    return reinterpret_cast<const GeoCircle*>(
               &_GeoCircle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GeoCircle& a, GeoCircle& b) {
    a.Swap(&b);
  }
  inline void Swap(GeoCircle* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GeoCircle* New() const final {
    return CreateMaybeMessage<GeoCircle>(nullptr);
  }

  GeoCircle* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GeoCircle>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GeoCircle& from);
  void MergeFrom(const GeoCircle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeoCircle* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.GeoCircle";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCenterFieldNumber = 1,
    kRadiusMFieldNumber = 2,
  };
  // .data_collection_configuration_request.GeoLocation center = 1;
  bool has_center() const;
  private:
  bool _internal_has_center() const;
  public:
  void clear_center();
  const ::data_collection_configuration_request::GeoLocation& center() const;
  ::data_collection_configuration_request::GeoLocation* release_center();
  ::data_collection_configuration_request::GeoLocation* mutable_center();
  void set_allocated_center(::data_collection_configuration_request::GeoLocation* center);
  private:
  const ::data_collection_configuration_request::GeoLocation& _internal_center() const;
  ::data_collection_configuration_request::GeoLocation* _internal_mutable_center();
  public:

  // double radius_m = 2;
  void clear_radius_m();
  double radius_m() const;
  void set_radius_m(double value);
  private:
  double _internal_radius_m() const;
  void _internal_set_radius_m(double value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.GeoCircle)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::data_collection_configuration_request::GeoLocation* center_;
  double radius_m_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class GeoPolygon :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.GeoPolygon) */ {
 public:
  GeoPolygon();
  virtual ~GeoPolygon();

  GeoPolygon(const GeoPolygon& from);
  GeoPolygon(GeoPolygon&& from) noexcept
    : GeoPolygon() {
    *this = ::std::move(from);
  }

  inline GeoPolygon& operator=(const GeoPolygon& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeoPolygon& operator=(GeoPolygon&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GeoPolygon& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GeoPolygon* internal_default_instance() {
    return reinterpret_cast<const GeoPolygon*>(
               &_GeoPolygon_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GeoPolygon& a, GeoPolygon& b) {
    a.Swap(&b);
  }
  inline void Swap(GeoPolygon* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GeoPolygon* New() const final {
    return CreateMaybeMessage<GeoPolygon>(nullptr);
  }

  GeoPolygon* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GeoPolygon>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GeoPolygon& from);
  void MergeFrom(const GeoPolygon& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeoPolygon* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.GeoPolygon";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPointsFieldNumber = 1,
  };
  // repeated .data_collection_configuration_request.GeoLocation points = 1;
  int points_size() const;
  private:
  int _internal_points_size() const;
  public:
  void clear_points();
  ::data_collection_configuration_request::GeoLocation* mutable_points(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoLocation >*
      mutable_points();
  private:
  const ::data_collection_configuration_request::GeoLocation& _internal_points(int index) const;
  ::data_collection_configuration_request::GeoLocation* _internal_add_points();
  public:
  const ::data_collection_configuration_request::GeoLocation& points(int index) const;
  ::data_collection_configuration_request::GeoLocation* add_points();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoLocation >&
      points() const;

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.GeoPolygon)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoLocation > points_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class GeoCorridor :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.GeoCorridor) */ {
 public:
  GeoCorridor();
  virtual ~GeoCorridor();

  GeoCorridor(const GeoCorridor& from);
  GeoCorridor(GeoCorridor&& from) noexcept
    : GeoCorridor() {
    *this = ::std::move(from);
  }

  inline GeoCorridor& operator=(const GeoCorridor& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeoCorridor& operator=(GeoCorridor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GeoCorridor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GeoCorridor* internal_default_instance() {
    return reinterpret_cast<const GeoCorridor*>(
               &_GeoCorridor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(GeoCorridor& a, GeoCorridor& b) {
    a.Swap(&b);
  }
  inline void Swap(GeoCorridor* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GeoCorridor* New() const final {
    return CreateMaybeMessage<GeoCorridor>(nullptr);
  }

  GeoCorridor* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GeoCorridor>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GeoCorridor& from);
  void MergeFrom(const GeoCorridor& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeoCorridor* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.GeoCorridor";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCenterLineFieldNumber = 1,
    kWidthMFieldNumber = 2,
  };
  // repeated .data_collection_configuration_request.GeoLocation center_line = 1;
  int center_line_size() const;
  private:
  int _internal_center_line_size() const;
  public:
  void clear_center_line();
  ::data_collection_configuration_request::GeoLocation* mutable_center_line(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoLocation >*
      mutable_center_line();
  private:
  const ::data_collection_configuration_request::GeoLocation& _internal_center_line(int index) const;
  ::data_collection_configuration_request::GeoLocation* _internal_add_center_line();
  public:
  const ::data_collection_configuration_request::GeoLocation& center_line(int index) const;
  ::data_collection_configuration_request::GeoLocation* add_center_line();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoLocation >&
      center_line() const;

  // double width_m = 2;
  void clear_width_m();
  double width_m() const;
  void set_width_m(double value);
  private:
  double _internal_width_m() const;
  void _internal_set_width_m(double value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.GeoCorridor)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoLocation > center_line_;
  double width_m_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class CompositeTimeRange :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.CompositeTimeRange) */ {
 public:
  CompositeTimeRange();
  virtual ~CompositeTimeRange();

  CompositeTimeRange(const CompositeTimeRange& from);
  CompositeTimeRange(CompositeTimeRange&& from) noexcept
    : CompositeTimeRange() {
    *this = ::std::move(from);
  }

  inline CompositeTimeRange& operator=(const CompositeTimeRange& from) {
    CopyFrom(from);
    return *this;
  }
  inline CompositeTimeRange& operator=(CompositeTimeRange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CompositeTimeRange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CompositeTimeRange* internal_default_instance() {
    return reinterpret_cast<const CompositeTimeRange*>(
               &_CompositeTimeRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CompositeTimeRange& a, CompositeTimeRange& b) {
    a.Swap(&b);
  }
  inline void Swap(CompositeTimeRange* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CompositeTimeRange* New() const final {
    return CreateMaybeMessage<CompositeTimeRange>(nullptr);
  }

  CompositeTimeRange* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CompositeTimeRange>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CompositeTimeRange& from);
  void MergeFrom(const CompositeTimeRange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CompositeTimeRange* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.CompositeTimeRange";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef CompositeTimeRange_WeekdayEnum WeekdayEnum;
  static constexpr WeekdayEnum UNDEFINED =
    CompositeTimeRange_WeekdayEnum_UNDEFINED;
  static constexpr WeekdayEnum MONDAY =
    CompositeTimeRange_WeekdayEnum_MONDAY;
  static constexpr WeekdayEnum TUESDAY =
    CompositeTimeRange_WeekdayEnum_TUESDAY;
  static constexpr WeekdayEnum WEDNESDAY =
    CompositeTimeRange_WeekdayEnum_WEDNESDAY;
  static constexpr WeekdayEnum THURSDAY =
    CompositeTimeRange_WeekdayEnum_THURSDAY;
  static constexpr WeekdayEnum FRIDAY =
    CompositeTimeRange_WeekdayEnum_FRIDAY;
  static constexpr WeekdayEnum SATURDAY =
    CompositeTimeRange_WeekdayEnum_SATURDAY;
  static constexpr WeekdayEnum SUNDAY =
    CompositeTimeRange_WeekdayEnum_SUNDAY;
  static inline bool WeekdayEnum_IsValid(int value) {
    return CompositeTimeRange_WeekdayEnum_IsValid(value);
  }
  static constexpr WeekdayEnum WeekdayEnum_MIN =
    CompositeTimeRange_WeekdayEnum_WeekdayEnum_MIN;
  static constexpr WeekdayEnum WeekdayEnum_MAX =
    CompositeTimeRange_WeekdayEnum_WeekdayEnum_MAX;
  static constexpr int WeekdayEnum_ARRAYSIZE =
    CompositeTimeRange_WeekdayEnum_WeekdayEnum_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  WeekdayEnum_descriptor() {
    return CompositeTimeRange_WeekdayEnum_descriptor();
  }
  template<typename T>
  static inline const std::string& WeekdayEnum_Name(T enum_t_value) {
    static_assert(::std::is_same<T, WeekdayEnum>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function WeekdayEnum_Name.");
    return CompositeTimeRange_WeekdayEnum_Name(enum_t_value);
  }
  static inline bool WeekdayEnum_Parse(const std::string& name,
      WeekdayEnum* value) {
    return CompositeTimeRange_WeekdayEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kDateRangeFieldNumber = 1,
    kWeekdayFieldNumber = 2,
    kTimeOfTheDayRangeFieldNumber = 3,
  };
  // repeated .data_collection_configuration_request.TimestampInterval date_range = 1;
  int date_range_size() const;
  private:
  int _internal_date_range_size() const;
  public:
  void clear_date_range();
  ::data_collection_configuration_request::TimestampInterval* mutable_date_range(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::TimestampInterval >*
      mutable_date_range();
  private:
  const ::data_collection_configuration_request::TimestampInterval& _internal_date_range(int index) const;
  ::data_collection_configuration_request::TimestampInterval* _internal_add_date_range();
  public:
  const ::data_collection_configuration_request::TimestampInterval& date_range(int index) const;
  ::data_collection_configuration_request::TimestampInterval* add_date_range();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::TimestampInterval >&
      date_range() const;

  // repeated .data_collection_configuration_request.CompositeTimeRange.WeekdayEnum weekday = 2;
  int weekday_size() const;
  private:
  int _internal_weekday_size() const;
  public:
  void clear_weekday();
  private:
  ::data_collection_configuration_request::CompositeTimeRange_WeekdayEnum _internal_weekday(int index) const;
  void _internal_add_weekday(::data_collection_configuration_request::CompositeTimeRange_WeekdayEnum value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_weekday();
  public:
  ::data_collection_configuration_request::CompositeTimeRange_WeekdayEnum weekday(int index) const;
  void set_weekday(int index, ::data_collection_configuration_request::CompositeTimeRange_WeekdayEnum value);
  void add_weekday(::data_collection_configuration_request::CompositeTimeRange_WeekdayEnum value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& weekday() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_weekday();

  // repeated .data_collection_configuration_request.Uint32Range time_of_the_day_range = 3;
  int time_of_the_day_range_size() const;
  private:
  int _internal_time_of_the_day_range_size() const;
  public:
  void clear_time_of_the_day_range();
  ::data_collection_configuration_request::Uint32Range* mutable_time_of_the_day_range(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Uint32Range >*
      mutable_time_of_the_day_range();
  private:
  const ::data_collection_configuration_request::Uint32Range& _internal_time_of_the_day_range(int index) const;
  ::data_collection_configuration_request::Uint32Range* _internal_add_time_of_the_day_range();
  public:
  const ::data_collection_configuration_request::Uint32Range& time_of_the_day_range(int index) const;
  ::data_collection_configuration_request::Uint32Range* add_time_of_the_day_range();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Uint32Range >&
      time_of_the_day_range() const;

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.CompositeTimeRange)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::TimestampInterval > date_range_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> weekday_;
  mutable std::atomic<int> _weekday_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Uint32Range > time_of_the_day_range_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class CompositeLocation :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.CompositeLocation) */ {
 public:
  CompositeLocation();
  virtual ~CompositeLocation();

  CompositeLocation(const CompositeLocation& from);
  CompositeLocation(CompositeLocation&& from) noexcept
    : CompositeLocation() {
    *this = ::std::move(from);
  }

  inline CompositeLocation& operator=(const CompositeLocation& from) {
    CopyFrom(from);
    return *this;
  }
  inline CompositeLocation& operator=(CompositeLocation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CompositeLocation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CompositeLocation* internal_default_instance() {
    return reinterpret_cast<const CompositeLocation*>(
               &_CompositeLocation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CompositeLocation& a, CompositeLocation& b) {
    a.Swap(&b);
  }
  inline void Swap(CompositeLocation* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CompositeLocation* New() const final {
    return CreateMaybeMessage<CompositeLocation>(nullptr);
  }

  CompositeLocation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CompositeLocation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CompositeLocation& from);
  void MergeFrom(const CompositeLocation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CompositeLocation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.CompositeLocation";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGeoCirclesFieldNumber = 1,
    kGeoRectanglesFieldNumber = 2,
    kGeoPolygonsFieldNumber = 3,
    kGeoCorridorsFieldNumber = 4,
  };
  // repeated .data_collection_configuration_request.GeoCircle geo_circles = 1;
  int geo_circles_size() const;
  private:
  int _internal_geo_circles_size() const;
  public:
  void clear_geo_circles();
  ::data_collection_configuration_request::GeoCircle* mutable_geo_circles(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoCircle >*
      mutable_geo_circles();
  private:
  const ::data_collection_configuration_request::GeoCircle& _internal_geo_circles(int index) const;
  ::data_collection_configuration_request::GeoCircle* _internal_add_geo_circles();
  public:
  const ::data_collection_configuration_request::GeoCircle& geo_circles(int index) const;
  ::data_collection_configuration_request::GeoCircle* add_geo_circles();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoCircle >&
      geo_circles() const;

  // repeated .data_collection_configuration_request.GeoRectangle geo_rectangles = 2;
  int geo_rectangles_size() const;
  private:
  int _internal_geo_rectangles_size() const;
  public:
  void clear_geo_rectangles();
  ::data_collection_configuration_request::GeoRectangle* mutable_geo_rectangles(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoRectangle >*
      mutable_geo_rectangles();
  private:
  const ::data_collection_configuration_request::GeoRectangle& _internal_geo_rectangles(int index) const;
  ::data_collection_configuration_request::GeoRectangle* _internal_add_geo_rectangles();
  public:
  const ::data_collection_configuration_request::GeoRectangle& geo_rectangles(int index) const;
  ::data_collection_configuration_request::GeoRectangle* add_geo_rectangles();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoRectangle >&
      geo_rectangles() const;

  // repeated .data_collection_configuration_request.GeoPolygon geo_polygons = 3;
  int geo_polygons_size() const;
  private:
  int _internal_geo_polygons_size() const;
  public:
  void clear_geo_polygons();
  ::data_collection_configuration_request::GeoPolygon* mutable_geo_polygons(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoPolygon >*
      mutable_geo_polygons();
  private:
  const ::data_collection_configuration_request::GeoPolygon& _internal_geo_polygons(int index) const;
  ::data_collection_configuration_request::GeoPolygon* _internal_add_geo_polygons();
  public:
  const ::data_collection_configuration_request::GeoPolygon& geo_polygons(int index) const;
  ::data_collection_configuration_request::GeoPolygon* add_geo_polygons();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoPolygon >&
      geo_polygons() const;

  // repeated .data_collection_configuration_request.GeoCorridor geo_corridors = 4;
  int geo_corridors_size() const;
  private:
  int _internal_geo_corridors_size() const;
  public:
  void clear_geo_corridors();
  ::data_collection_configuration_request::GeoCorridor* mutable_geo_corridors(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoCorridor >*
      mutable_geo_corridors();
  private:
  const ::data_collection_configuration_request::GeoCorridor& _internal_geo_corridors(int index) const;
  ::data_collection_configuration_request::GeoCorridor* _internal_add_geo_corridors();
  public:
  const ::data_collection_configuration_request::GeoCorridor& geo_corridors(int index) const;
  ::data_collection_configuration_request::GeoCorridor* add_geo_corridors();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoCorridor >&
      geo_corridors() const;

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.CompositeLocation)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoCircle > geo_circles_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoRectangle > geo_rectangles_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoPolygon > geo_polygons_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoCorridor > geo_corridors_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class MapRestriction_RoadAttribute :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.MapRestriction.RoadAttribute) */ {
 public:
  MapRestriction_RoadAttribute();
  virtual ~MapRestriction_RoadAttribute();

  MapRestriction_RoadAttribute(const MapRestriction_RoadAttribute& from);
  MapRestriction_RoadAttribute(MapRestriction_RoadAttribute&& from) noexcept
    : MapRestriction_RoadAttribute() {
    *this = ::std::move(from);
  }

  inline MapRestriction_RoadAttribute& operator=(const MapRestriction_RoadAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapRestriction_RoadAttribute& operator=(MapRestriction_RoadAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MapRestriction_RoadAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MapRestriction_RoadAttribute* internal_default_instance() {
    return reinterpret_cast<const MapRestriction_RoadAttribute*>(
               &_MapRestriction_RoadAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MapRestriction_RoadAttribute& a, MapRestriction_RoadAttribute& b) {
    a.Swap(&b);
  }
  inline void Swap(MapRestriction_RoadAttribute* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MapRestriction_RoadAttribute* New() const final {
    return CreateMaybeMessage<MapRestriction_RoadAttribute>(nullptr);
  }

  MapRestriction_RoadAttribute* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MapRestriction_RoadAttribute>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MapRestriction_RoadAttribute& from);
  void MergeFrom(const MapRestriction_RoadAttribute& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MapRestriction_RoadAttribute* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.MapRestriction.RoadAttribute";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoadTypeFieldNumber = 1,
    kRoadTypeOperatorFieldNumber = 2,
  };
  // repeated .data_collection_configuration_request.MapRestriction.RoadAttributeEnum road_type = 1;
  int road_type_size() const;
  private:
  int _internal_road_type_size() const;
  public:
  void clear_road_type();
  private:
  ::data_collection_configuration_request::MapRestriction_RoadAttributeEnum _internal_road_type(int index) const;
  void _internal_add_road_type(::data_collection_configuration_request::MapRestriction_RoadAttributeEnum value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_road_type();
  public:
  ::data_collection_configuration_request::MapRestriction_RoadAttributeEnum road_type(int index) const;
  void set_road_type(int index, ::data_collection_configuration_request::MapRestriction_RoadAttributeEnum value);
  void add_road_type(::data_collection_configuration_request::MapRestriction_RoadAttributeEnum value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& road_type() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_road_type();

  // .data_collection_configuration_request.LogicalOperatorEnum road_type_operator = 2;
  void clear_road_type_operator();
  ::data_collection_configuration_request::LogicalOperatorEnum road_type_operator() const;
  void set_road_type_operator(::data_collection_configuration_request::LogicalOperatorEnum value);
  private:
  ::data_collection_configuration_request::LogicalOperatorEnum _internal_road_type_operator() const;
  void _internal_set_road_type_operator(::data_collection_configuration_request::LogicalOperatorEnum value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.MapRestriction.RoadAttribute)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> road_type_;
  mutable std::atomic<int> _road_type_cached_byte_size_;
  int road_type_operator_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class MapRestriction_FunctionalRoadClassRange :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.MapRestriction.FunctionalRoadClassRange) */ {
 public:
  MapRestriction_FunctionalRoadClassRange();
  virtual ~MapRestriction_FunctionalRoadClassRange();

  MapRestriction_FunctionalRoadClassRange(const MapRestriction_FunctionalRoadClassRange& from);
  MapRestriction_FunctionalRoadClassRange(MapRestriction_FunctionalRoadClassRange&& from) noexcept
    : MapRestriction_FunctionalRoadClassRange() {
    *this = ::std::move(from);
  }

  inline MapRestriction_FunctionalRoadClassRange& operator=(const MapRestriction_FunctionalRoadClassRange& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapRestriction_FunctionalRoadClassRange& operator=(MapRestriction_FunctionalRoadClassRange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MapRestriction_FunctionalRoadClassRange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MapRestriction_FunctionalRoadClassRange* internal_default_instance() {
    return reinterpret_cast<const MapRestriction_FunctionalRoadClassRange*>(
               &_MapRestriction_FunctionalRoadClassRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MapRestriction_FunctionalRoadClassRange& a, MapRestriction_FunctionalRoadClassRange& b) {
    a.Swap(&b);
  }
  inline void Swap(MapRestriction_FunctionalRoadClassRange* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MapRestriction_FunctionalRoadClassRange* New() const final {
    return CreateMaybeMessage<MapRestriction_FunctionalRoadClassRange>(nullptr);
  }

  MapRestriction_FunctionalRoadClassRange* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MapRestriction_FunctionalRoadClassRange>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MapRestriction_FunctionalRoadClassRange& from);
  void MergeFrom(const MapRestriction_FunctionalRoadClassRange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MapRestriction_FunctionalRoadClassRange* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.MapRestriction.FunctionalRoadClassRange";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinValueFieldNumber = 1,
    kMaxValueFieldNumber = 2,
  };
  // uint32 min_value = 1;
  void clear_min_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 min_value() const;
  void set_min_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_min_value() const;
  void _internal_set_min_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 max_value = 2;
  void clear_max_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 max_value() const;
  void set_max_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_max_value() const;
  void _internal_set_max_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.MapRestriction.FunctionalRoadClassRange)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 min_value_;
  ::PROTOBUF_NAMESPACE_ID::uint32 max_value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class MapRestriction :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.MapRestriction) */ {
 public:
  MapRestriction();
  virtual ~MapRestriction();

  MapRestriction(const MapRestriction& from);
  MapRestriction(MapRestriction&& from) noexcept
    : MapRestriction() {
    *this = ::std::move(from);
  }

  inline MapRestriction& operator=(const MapRestriction& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapRestriction& operator=(MapRestriction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MapRestriction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MapRestriction* internal_default_instance() {
    return reinterpret_cast<const MapRestriction*>(
               &_MapRestriction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MapRestriction& a, MapRestriction& b) {
    a.Swap(&b);
  }
  inline void Swap(MapRestriction* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MapRestriction* New() const final {
    return CreateMaybeMessage<MapRestriction>(nullptr);
  }

  MapRestriction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MapRestriction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MapRestriction& from);
  void MergeFrom(const MapRestriction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MapRestriction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.MapRestriction";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef MapRestriction_RoadAttribute RoadAttribute;
  typedef MapRestriction_FunctionalRoadClassRange FunctionalRoadClassRange;

  typedef MapRestriction_RoadAttributeEnum RoadAttributeEnum;
  static constexpr RoadAttributeEnum NONE =
    MapRestriction_RoadAttributeEnum_NONE;
  static constexpr RoadAttributeEnum MOTORWAY =
    MapRestriction_RoadAttributeEnum_MOTORWAY;
  static constexpr RoadAttributeEnum COUNTRY_ROAD =
    MapRestriction_RoadAttributeEnum_COUNTRY_ROAD;
  static constexpr RoadAttributeEnum CITY_ROAD =
    MapRestriction_RoadAttributeEnum_CITY_ROAD;
  static constexpr RoadAttributeEnum HOV =
    MapRestriction_RoadAttributeEnum_HOV;
  static constexpr RoadAttributeEnum TUNNEL =
    MapRestriction_RoadAttributeEnum_TUNNEL;
  static constexpr RoadAttributeEnum BRIDGE =
    MapRestriction_RoadAttributeEnum_BRIDGE;
  static constexpr RoadAttributeEnum WATER_AREA =
    MapRestriction_RoadAttributeEnum_WATER_AREA;
  static constexpr RoadAttributeEnum OTHER_AREA =
    MapRestriction_RoadAttributeEnum_OTHER_AREA;
  static constexpr RoadAttributeEnum STATE_ROAD =
    MapRestriction_RoadAttributeEnum_STATE_ROAD;
  static constexpr RoadAttributeEnum TOLL =
    MapRestriction_RoadAttributeEnum_TOLL;
  static constexpr RoadAttributeEnum PRIVATE =
    MapRestriction_RoadAttributeEnum_PRIVATE;
  static constexpr RoadAttributeEnum DOUBLE_CARRIAGE =
    MapRestriction_RoadAttributeEnum_DOUBLE_CARRIAGE;
  static constexpr RoadAttributeEnum OFF_MAP =
    MapRestriction_RoadAttributeEnum_OFF_MAP;
  static constexpr RoadAttributeEnum RURAL_AREA =
    MapRestriction_RoadAttributeEnum_RURAL_AREA;
  static constexpr RoadAttributeEnum BUILDING =
    MapRestriction_RoadAttributeEnum_BUILDING;
  static inline bool RoadAttributeEnum_IsValid(int value) {
    return MapRestriction_RoadAttributeEnum_IsValid(value);
  }
  static constexpr RoadAttributeEnum RoadAttributeEnum_MIN =
    MapRestriction_RoadAttributeEnum_RoadAttributeEnum_MIN;
  static constexpr RoadAttributeEnum RoadAttributeEnum_MAX =
    MapRestriction_RoadAttributeEnum_RoadAttributeEnum_MAX;
  static constexpr int RoadAttributeEnum_ARRAYSIZE =
    MapRestriction_RoadAttributeEnum_RoadAttributeEnum_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  RoadAttributeEnum_descriptor() {
    return MapRestriction_RoadAttributeEnum_descriptor();
  }
  template<typename T>
  static inline const std::string& RoadAttributeEnum_Name(T enum_t_value) {
    static_assert(::std::is_same<T, RoadAttributeEnum>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function RoadAttributeEnum_Name.");
    return MapRestriction_RoadAttributeEnum_Name(enum_t_value);
  }
  static inline bool RoadAttributeEnum_Parse(const std::string& name,
      RoadAttributeEnum* value) {
    return MapRestriction_RoadAttributeEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kFunctionalRoadClassRangeFieldNumber = 2,
    kWhitelistCountryCodesFieldNumber = 3,
    kBlacklistCountryCodesFieldNumber = 4,
    kRoadAttributeFieldNumber = 1,
    kIgnoreIfNotSupportedFieldNumber = 5,
  };
  // repeated .data_collection_configuration_request.MapRestriction.FunctionalRoadClassRange functional_road_class_range = 2;
  int functional_road_class_range_size() const;
  private:
  int _internal_functional_road_class_range_size() const;
  public:
  void clear_functional_road_class_range();
  ::data_collection_configuration_request::MapRestriction_FunctionalRoadClassRange* mutable_functional_road_class_range(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::MapRestriction_FunctionalRoadClassRange >*
      mutable_functional_road_class_range();
  private:
  const ::data_collection_configuration_request::MapRestriction_FunctionalRoadClassRange& _internal_functional_road_class_range(int index) const;
  ::data_collection_configuration_request::MapRestriction_FunctionalRoadClassRange* _internal_add_functional_road_class_range();
  public:
  const ::data_collection_configuration_request::MapRestriction_FunctionalRoadClassRange& functional_road_class_range(int index) const;
  ::data_collection_configuration_request::MapRestriction_FunctionalRoadClassRange* add_functional_road_class_range();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::MapRestriction_FunctionalRoadClassRange >&
      functional_road_class_range() const;

  // repeated string whitelist_country_codes = 3;
  int whitelist_country_codes_size() const;
  private:
  int _internal_whitelist_country_codes_size() const;
  public:
  void clear_whitelist_country_codes();
  const std::string& whitelist_country_codes(int index) const;
  std::string* mutable_whitelist_country_codes(int index);
  void set_whitelist_country_codes(int index, const std::string& value);
  void set_whitelist_country_codes(int index, std::string&& value);
  void set_whitelist_country_codes(int index, const char* value);
  void set_whitelist_country_codes(int index, const char* value, size_t size);
  std::string* add_whitelist_country_codes();
  void add_whitelist_country_codes(const std::string& value);
  void add_whitelist_country_codes(std::string&& value);
  void add_whitelist_country_codes(const char* value);
  void add_whitelist_country_codes(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& whitelist_country_codes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_whitelist_country_codes();
  private:
  const std::string& _internal_whitelist_country_codes(int index) const;
  std::string* _internal_add_whitelist_country_codes();
  public:

  // repeated string blacklist_country_codes = 4;
  int blacklist_country_codes_size() const;
  private:
  int _internal_blacklist_country_codes_size() const;
  public:
  void clear_blacklist_country_codes();
  const std::string& blacklist_country_codes(int index) const;
  std::string* mutable_blacklist_country_codes(int index);
  void set_blacklist_country_codes(int index, const std::string& value);
  void set_blacklist_country_codes(int index, std::string&& value);
  void set_blacklist_country_codes(int index, const char* value);
  void set_blacklist_country_codes(int index, const char* value, size_t size);
  std::string* add_blacklist_country_codes();
  void add_blacklist_country_codes(const std::string& value);
  void add_blacklist_country_codes(std::string&& value);
  void add_blacklist_country_codes(const char* value);
  void add_blacklist_country_codes(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& blacklist_country_codes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_blacklist_country_codes();
  private:
  const std::string& _internal_blacklist_country_codes(int index) const;
  std::string* _internal_add_blacklist_country_codes();
  public:

  // .data_collection_configuration_request.MapRestriction.RoadAttribute road_attribute = 1;
  bool has_road_attribute() const;
  private:
  bool _internal_has_road_attribute() const;
  public:
  void clear_road_attribute();
  const ::data_collection_configuration_request::MapRestriction_RoadAttribute& road_attribute() const;
  ::data_collection_configuration_request::MapRestriction_RoadAttribute* release_road_attribute();
  ::data_collection_configuration_request::MapRestriction_RoadAttribute* mutable_road_attribute();
  void set_allocated_road_attribute(::data_collection_configuration_request::MapRestriction_RoadAttribute* road_attribute);
  private:
  const ::data_collection_configuration_request::MapRestriction_RoadAttribute& _internal_road_attribute() const;
  ::data_collection_configuration_request::MapRestriction_RoadAttribute* _internal_mutable_road_attribute();
  public:

  // bool ignore_if_not_supported = 5;
  void clear_ignore_if_not_supported();
  bool ignore_if_not_supported() const;
  void set_ignore_if_not_supported(bool value);
  private:
  bool _internal_ignore_if_not_supported() const;
  void _internal_set_ignore_if_not_supported(bool value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.MapRestriction)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::MapRestriction_FunctionalRoadClassRange > functional_road_class_range_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> whitelist_country_codes_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> blacklist_country_codes_;
  ::data_collection_configuration_request::MapRestriction_RoadAttribute* road_attribute_;
  bool ignore_if_not_supported_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class SystemStates :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.SystemStates) */ {
 public:
  SystemStates();
  virtual ~SystemStates();

  SystemStates(const SystemStates& from);
  SystemStates(SystemStates&& from) noexcept
    : SystemStates() {
    *this = ::std::move(from);
  }

  inline SystemStates& operator=(const SystemStates& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemStates& operator=(SystemStates&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SystemStates& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemStates* internal_default_instance() {
    return reinterpret_cast<const SystemStates*>(
               &_SystemStates_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(SystemStates& a, SystemStates& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemStates* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemStates* New() const final {
    return CreateMaybeMessage<SystemStates>(nullptr);
  }

  SystemStates* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemStates>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SystemStates& from);
  void MergeFrom(const SystemStates& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SystemStates* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.SystemStates";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStateFieldNumber = 1,
  };
  // .data_collection_configuration_request.System_States state = 1;
  void clear_state();
  ::data_collection_configuration_request::System_States state() const;
  void set_state(::data_collection_configuration_request::System_States value);
  private:
  ::data_collection_configuration_request::System_States _internal_state() const;
  void _internal_set_state(::data_collection_configuration_request::System_States value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.SystemStates)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  int state_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class JobValidityRestrictions :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.JobValidityRestrictions) */ {
 public:
  JobValidityRestrictions();
  virtual ~JobValidityRestrictions();

  JobValidityRestrictions(const JobValidityRestrictions& from);
  JobValidityRestrictions(JobValidityRestrictions&& from) noexcept
    : JobValidityRestrictions() {
    *this = ::std::move(from);
  }

  inline JobValidityRestrictions& operator=(const JobValidityRestrictions& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobValidityRestrictions& operator=(JobValidityRestrictions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const JobValidityRestrictions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobValidityRestrictions* internal_default_instance() {
    return reinterpret_cast<const JobValidityRestrictions*>(
               &_JobValidityRestrictions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(JobValidityRestrictions& a, JobValidityRestrictions& b) {
    a.Swap(&b);
  }
  inline void Swap(JobValidityRestrictions* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobValidityRestrictions* New() const final {
    return CreateMaybeMessage<JobValidityRestrictions>(nullptr);
  }

  JobValidityRestrictions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobValidityRestrictions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const JobValidityRestrictions& from);
  void MergeFrom(const JobValidityRestrictions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JobValidityRestrictions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.JobValidityRestrictions";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimeRestrictionsFieldNumber = 1,
    kMapRestrictionsFieldNumber = 3,
    kInvalidCollectionStatesFieldNumber = 4,
    kSpatialRestrictionsFieldNumber = 2,
  };
  // repeated .data_collection_configuration_request.CompositeTimeRange time_restrictions = 1;
  int time_restrictions_size() const;
  private:
  int _internal_time_restrictions_size() const;
  public:
  void clear_time_restrictions();
  ::data_collection_configuration_request::CompositeTimeRange* mutable_time_restrictions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::CompositeTimeRange >*
      mutable_time_restrictions();
  private:
  const ::data_collection_configuration_request::CompositeTimeRange& _internal_time_restrictions(int index) const;
  ::data_collection_configuration_request::CompositeTimeRange* _internal_add_time_restrictions();
  public:
  const ::data_collection_configuration_request::CompositeTimeRange& time_restrictions(int index) const;
  ::data_collection_configuration_request::CompositeTimeRange* add_time_restrictions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::CompositeTimeRange >&
      time_restrictions() const;

  // repeated .data_collection_configuration_request.MapRestriction map_restrictions = 3;
  int map_restrictions_size() const;
  private:
  int _internal_map_restrictions_size() const;
  public:
  void clear_map_restrictions();
  ::data_collection_configuration_request::MapRestriction* mutable_map_restrictions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::MapRestriction >*
      mutable_map_restrictions();
  private:
  const ::data_collection_configuration_request::MapRestriction& _internal_map_restrictions(int index) const;
  ::data_collection_configuration_request::MapRestriction* _internal_add_map_restrictions();
  public:
  const ::data_collection_configuration_request::MapRestriction& map_restrictions(int index) const;
  ::data_collection_configuration_request::MapRestriction* add_map_restrictions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::MapRestriction >&
      map_restrictions() const;

  // repeated .data_collection_configuration_request.SystemStates invalid_collection_states = 4;
  int invalid_collection_states_size() const;
  private:
  int _internal_invalid_collection_states_size() const;
  public:
  void clear_invalid_collection_states();
  ::data_collection_configuration_request::SystemStates* mutable_invalid_collection_states(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::SystemStates >*
      mutable_invalid_collection_states();
  private:
  const ::data_collection_configuration_request::SystemStates& _internal_invalid_collection_states(int index) const;
  ::data_collection_configuration_request::SystemStates* _internal_add_invalid_collection_states();
  public:
  const ::data_collection_configuration_request::SystemStates& invalid_collection_states(int index) const;
  ::data_collection_configuration_request::SystemStates* add_invalid_collection_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::SystemStates >&
      invalid_collection_states() const;

  // .data_collection_configuration_request.CompositeLocation spatial_restrictions = 2;
  bool has_spatial_restrictions() const;
  private:
  bool _internal_has_spatial_restrictions() const;
  public:
  void clear_spatial_restrictions();
  const ::data_collection_configuration_request::CompositeLocation& spatial_restrictions() const;
  ::data_collection_configuration_request::CompositeLocation* release_spatial_restrictions();
  ::data_collection_configuration_request::CompositeLocation* mutable_spatial_restrictions();
  void set_allocated_spatial_restrictions(::data_collection_configuration_request::CompositeLocation* spatial_restrictions);
  private:
  const ::data_collection_configuration_request::CompositeLocation& _internal_spatial_restrictions() const;
  ::data_collection_configuration_request::CompositeLocation* _internal_mutable_spatial_restrictions();
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.JobValidityRestrictions)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::CompositeTimeRange > time_restrictions_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::MapRestriction > map_restrictions_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::SystemStates > invalid_collection_states_;
  ::data_collection_configuration_request::CompositeLocation* spatial_restrictions_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class JobTerminationConditions :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.JobTerminationConditions) */ {
 public:
  JobTerminationConditions();
  virtual ~JobTerminationConditions();

  JobTerminationConditions(const JobTerminationConditions& from);
  JobTerminationConditions(JobTerminationConditions&& from) noexcept
    : JobTerminationConditions() {
    *this = ::std::move(from);
  }

  inline JobTerminationConditions& operator=(const JobTerminationConditions& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobTerminationConditions& operator=(JobTerminationConditions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const JobTerminationConditions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobTerminationConditions* internal_default_instance() {
    return reinterpret_cast<const JobTerminationConditions*>(
               &_JobTerminationConditions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(JobTerminationConditions& a, JobTerminationConditions& b) {
    a.Swap(&b);
  }
  inline void Swap(JobTerminationConditions* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobTerminationConditions* New() const final {
    return CreateMaybeMessage<JobTerminationConditions>(nullptr);
  }

  JobTerminationConditions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobTerminationConditions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const JobTerminationConditions& from);
  void MergeFrom(const JobTerminationConditions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JobTerminationConditions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.JobTerminationConditions";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimeConditionsFieldNumber = 1,
    kSignalValueConditionFieldNumber = 3,
    kSpatialConditionsFieldNumber = 2,
    kExtentsFieldNumber = 4,
  };
  // repeated .data_collection_configuration_request.CompositeTimeRange time_conditions = 1;
  int time_conditions_size() const;
  private:
  int _internal_time_conditions_size() const;
  public:
  void clear_time_conditions();
  ::data_collection_configuration_request::CompositeTimeRange* mutable_time_conditions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::CompositeTimeRange >*
      mutable_time_conditions();
  private:
  const ::data_collection_configuration_request::CompositeTimeRange& _internal_time_conditions(int index) const;
  ::data_collection_configuration_request::CompositeTimeRange* _internal_add_time_conditions();
  public:
  const ::data_collection_configuration_request::CompositeTimeRange& time_conditions(int index) const;
  ::data_collection_configuration_request::CompositeTimeRange* add_time_conditions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::CompositeTimeRange >&
      time_conditions() const;

  // repeated .logical_expression.LogicalExpression signal_value_condition = 3;
  int signal_value_condition_size() const;
  private:
  int _internal_signal_value_condition_size() const;
  public:
  void clear_signal_value_condition();
  ::logical_expression::LogicalExpression* mutable_signal_value_condition(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::logical_expression::LogicalExpression >*
      mutable_signal_value_condition();
  private:
  const ::logical_expression::LogicalExpression& _internal_signal_value_condition(int index) const;
  ::logical_expression::LogicalExpression* _internal_add_signal_value_condition();
  public:
  const ::logical_expression::LogicalExpression& signal_value_condition(int index) const;
  ::logical_expression::LogicalExpression* add_signal_value_condition();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::logical_expression::LogicalExpression >&
      signal_value_condition() const;

  // .data_collection_configuration_request.CompositeLocation spatial_conditions = 2;
  bool has_spatial_conditions() const;
  private:
  bool _internal_has_spatial_conditions() const;
  public:
  void clear_spatial_conditions();
  const ::data_collection_configuration_request::CompositeLocation& spatial_conditions() const;
  ::data_collection_configuration_request::CompositeLocation* release_spatial_conditions();
  ::data_collection_configuration_request::CompositeLocation* mutable_spatial_conditions();
  void set_allocated_spatial_conditions(::data_collection_configuration_request::CompositeLocation* spatial_conditions);
  private:
  const ::data_collection_configuration_request::CompositeLocation& _internal_spatial_conditions() const;
  ::data_collection_configuration_request::CompositeLocation* _internal_mutable_spatial_conditions();
  public:

  // .data_collection_configuration_request.CollectionExtents extents = 4;
  bool has_extents() const;
  private:
  bool _internal_has_extents() const;
  public:
  void clear_extents();
  const ::data_collection_configuration_request::CollectionExtents& extents() const;
  ::data_collection_configuration_request::CollectionExtents* release_extents();
  ::data_collection_configuration_request::CollectionExtents* mutable_extents();
  void set_allocated_extents(::data_collection_configuration_request::CollectionExtents* extents);
  private:
  const ::data_collection_configuration_request::CollectionExtents& _internal_extents() const;
  ::data_collection_configuration_request::CollectionExtents* _internal_mutable_extents();
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.JobTerminationConditions)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::CompositeTimeRange > time_conditions_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::logical_expression::LogicalExpression > signal_value_condition_;
  ::data_collection_configuration_request::CompositeLocation* spatial_conditions_;
  ::data_collection_configuration_request::CollectionExtents* extents_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class TimeDeltaTriggerEvent :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.TimeDeltaTriggerEvent) */ {
 public:
  TimeDeltaTriggerEvent();
  virtual ~TimeDeltaTriggerEvent();

  TimeDeltaTriggerEvent(const TimeDeltaTriggerEvent& from);
  TimeDeltaTriggerEvent(TimeDeltaTriggerEvent&& from) noexcept
    : TimeDeltaTriggerEvent() {
    *this = ::std::move(from);
  }

  inline TimeDeltaTriggerEvent& operator=(const TimeDeltaTriggerEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimeDeltaTriggerEvent& operator=(TimeDeltaTriggerEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TimeDeltaTriggerEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TimeDeltaTriggerEvent* internal_default_instance() {
    return reinterpret_cast<const TimeDeltaTriggerEvent*>(
               &_TimeDeltaTriggerEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(TimeDeltaTriggerEvent& a, TimeDeltaTriggerEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(TimeDeltaTriggerEvent* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TimeDeltaTriggerEvent* New() const final {
    return CreateMaybeMessage<TimeDeltaTriggerEvent>(nullptr);
  }

  TimeDeltaTriggerEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TimeDeltaTriggerEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TimeDeltaTriggerEvent& from);
  void MergeFrom(const TimeDeltaTriggerEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TimeDeltaTriggerEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.TimeDeltaTriggerEvent";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef TimeDeltaTriggerEvent_TimeTriggerType TimeTriggerType;
  static constexpr TimeTriggerType ACTIVE =
    TimeDeltaTriggerEvent_TimeTriggerType_ACTIVE;
  static constexpr TimeTriggerType PASSIVE =
    TimeDeltaTriggerEvent_TimeTriggerType_PASSIVE;
  static inline bool TimeTriggerType_IsValid(int value) {
    return TimeDeltaTriggerEvent_TimeTriggerType_IsValid(value);
  }
  static constexpr TimeTriggerType TimeTriggerType_MIN =
    TimeDeltaTriggerEvent_TimeTriggerType_TimeTriggerType_MIN;
  static constexpr TimeTriggerType TimeTriggerType_MAX =
    TimeDeltaTriggerEvent_TimeTriggerType_TimeTriggerType_MAX;
  static constexpr int TimeTriggerType_ARRAYSIZE =
    TimeDeltaTriggerEvent_TimeTriggerType_TimeTriggerType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  TimeTriggerType_descriptor() {
    return TimeDeltaTriggerEvent_TimeTriggerType_descriptor();
  }
  template<typename T>
  static inline const std::string& TimeTriggerType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, TimeTriggerType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function TimeTriggerType_Name.");
    return TimeDeltaTriggerEvent_TimeTriggerType_Name(enum_t_value);
  }
  static inline bool TimeTriggerType_Parse(const std::string& name,
      TimeTriggerType* value) {
    return TimeDeltaTriggerEvent_TimeTriggerType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kTimeDeltaMillisecondsFieldNumber = 2,
  };
  // .data_collection_configuration_request.TimeDeltaTriggerEvent.TimeTriggerType type = 1;
  void clear_type();
  ::data_collection_configuration_request::TimeDeltaTriggerEvent_TimeTriggerType type() const;
  void set_type(::data_collection_configuration_request::TimeDeltaTriggerEvent_TimeTriggerType value);
  private:
  ::data_collection_configuration_request::TimeDeltaTriggerEvent_TimeTriggerType _internal_type() const;
  void _internal_set_type(::data_collection_configuration_request::TimeDeltaTriggerEvent_TimeTriggerType value);
  public:

  // uint32 time_delta_milliseconds = 2;
  void clear_time_delta_milliseconds();
  ::PROTOBUF_NAMESPACE_ID::uint32 time_delta_milliseconds() const;
  void set_time_delta_milliseconds(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time_delta_milliseconds() const;
  void _internal_set_time_delta_milliseconds(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.TimeDeltaTriggerEvent)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_delta_milliseconds_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class DistanceDeltaTriggerEvent :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.DistanceDeltaTriggerEvent) */ {
 public:
  DistanceDeltaTriggerEvent();
  virtual ~DistanceDeltaTriggerEvent();

  DistanceDeltaTriggerEvent(const DistanceDeltaTriggerEvent& from);
  DistanceDeltaTriggerEvent(DistanceDeltaTriggerEvent&& from) noexcept
    : DistanceDeltaTriggerEvent() {
    *this = ::std::move(from);
  }

  inline DistanceDeltaTriggerEvent& operator=(const DistanceDeltaTriggerEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline DistanceDeltaTriggerEvent& operator=(DistanceDeltaTriggerEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DistanceDeltaTriggerEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DistanceDeltaTriggerEvent* internal_default_instance() {
    return reinterpret_cast<const DistanceDeltaTriggerEvent*>(
               &_DistanceDeltaTriggerEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(DistanceDeltaTriggerEvent& a, DistanceDeltaTriggerEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(DistanceDeltaTriggerEvent* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DistanceDeltaTriggerEvent* New() const final {
    return CreateMaybeMessage<DistanceDeltaTriggerEvent>(nullptr);
  }

  DistanceDeltaTriggerEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DistanceDeltaTriggerEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DistanceDeltaTriggerEvent& from);
  void MergeFrom(const DistanceDeltaTriggerEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DistanceDeltaTriggerEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.DistanceDeltaTriggerEvent";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDistanceDeltaMetersFieldNumber = 1,
  };
  // uint32 distance_delta_meters = 1;
  void clear_distance_delta_meters();
  ::PROTOBUF_NAMESPACE_ID::uint32 distance_delta_meters() const;
  void set_distance_delta_meters(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_distance_delta_meters() const;
  void _internal_set_distance_delta_meters(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.DistanceDeltaTriggerEvent)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 distance_delta_meters_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class SignalChangeTriggerEvent :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.SignalChangeTriggerEvent) */ {
 public:
  SignalChangeTriggerEvent();
  virtual ~SignalChangeTriggerEvent();

  SignalChangeTriggerEvent(const SignalChangeTriggerEvent& from);
  SignalChangeTriggerEvent(SignalChangeTriggerEvent&& from) noexcept
    : SignalChangeTriggerEvent() {
    *this = ::std::move(from);
  }

  inline SignalChangeTriggerEvent& operator=(const SignalChangeTriggerEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignalChangeTriggerEvent& operator=(SignalChangeTriggerEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SignalChangeTriggerEvent& default_instance();

  enum SignalDefinitionCase {
    kDefaultSignal = 2,
    kCanSignal = 3,
    kLinSignal = 4,
    kEthernetSignal = 5,
    kNetworkSignal = 6,
    kInternalSignal = 7,
    kProcessingToolboxSignal = 8,
    kThriftmeSignal = 9,
    SIGNAL_DEFINITION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignalChangeTriggerEvent* internal_default_instance() {
    return reinterpret_cast<const SignalChangeTriggerEvent*>(
               &_SignalChangeTriggerEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(SignalChangeTriggerEvent& a, SignalChangeTriggerEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(SignalChangeTriggerEvent* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SignalChangeTriggerEvent* New() const final {
    return CreateMaybeMessage<SignalChangeTriggerEvent>(nullptr);
  }

  SignalChangeTriggerEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SignalChangeTriggerEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SignalChangeTriggerEvent& from);
  void MergeFrom(const SignalChangeTriggerEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignalChangeTriggerEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.SignalChangeTriggerEvent";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOnSignalChangeFieldNumber = 1,
    kDefaultSignalFieldNumber = 2,
    kCanSignalFieldNumber = 3,
    kLinSignalFieldNumber = 4,
    kEthernetSignalFieldNumber = 5,
    kNetworkSignalFieldNumber = 6,
    kInternalSignalFieldNumber = 7,
    kProcessingToolboxSignalFieldNumber = 8,
    kThriftmeSignalFieldNumber = 9,
  };
  // bool on_signal_change = 1;
  void clear_on_signal_change();
  bool on_signal_change() const;
  void set_on_signal_change(bool value);
  private:
  bool _internal_on_signal_change() const;
  void _internal_set_on_signal_change(bool value);
  public:

  // .signal_source_definition.DefaultSource default_signal = 2;
  bool has_default_signal() const;
  private:
  bool _internal_has_default_signal() const;
  public:
  void clear_default_signal();
  const ::signal_source_definition::DefaultSource& default_signal() const;
  ::signal_source_definition::DefaultSource* release_default_signal();
  ::signal_source_definition::DefaultSource* mutable_default_signal();
  void set_allocated_default_signal(::signal_source_definition::DefaultSource* default_signal);
  private:
  const ::signal_source_definition::DefaultSource& _internal_default_signal() const;
  ::signal_source_definition::DefaultSource* _internal_mutable_default_signal();
  public:

  // .signal_source_definition.CanSource can_signal = 3;
  bool has_can_signal() const;
  private:
  bool _internal_has_can_signal() const;
  public:
  void clear_can_signal();
  const ::signal_source_definition::CanSource& can_signal() const;
  ::signal_source_definition::CanSource* release_can_signal();
  ::signal_source_definition::CanSource* mutable_can_signal();
  void set_allocated_can_signal(::signal_source_definition::CanSource* can_signal);
  private:
  const ::signal_source_definition::CanSource& _internal_can_signal() const;
  ::signal_source_definition::CanSource* _internal_mutable_can_signal();
  public:

  // .signal_source_definition.LinSource lin_signal = 4;
  bool has_lin_signal() const;
  private:
  bool _internal_has_lin_signal() const;
  public:
  void clear_lin_signal();
  const ::signal_source_definition::LinSource& lin_signal() const;
  ::signal_source_definition::LinSource* release_lin_signal();
  ::signal_source_definition::LinSource* mutable_lin_signal();
  void set_allocated_lin_signal(::signal_source_definition::LinSource* lin_signal);
  private:
  const ::signal_source_definition::LinSource& _internal_lin_signal() const;
  ::signal_source_definition::LinSource* _internal_mutable_lin_signal();
  public:

  // .signal_source_definition.EthernetSource ethernet_signal = 5;
  bool has_ethernet_signal() const;
  private:
  bool _internal_has_ethernet_signal() const;
  public:
  void clear_ethernet_signal();
  const ::signal_source_definition::EthernetSource& ethernet_signal() const;
  ::signal_source_definition::EthernetSource* release_ethernet_signal();
  ::signal_source_definition::EthernetSource* mutable_ethernet_signal();
  void set_allocated_ethernet_signal(::signal_source_definition::EthernetSource* ethernet_signal);
  private:
  const ::signal_source_definition::EthernetSource& _internal_ethernet_signal() const;
  ::signal_source_definition::EthernetSource* _internal_mutable_ethernet_signal();
  public:

  // .signal_source_definition.NetworkSource network_signal = 6;
  bool has_network_signal() const;
  private:
  bool _internal_has_network_signal() const;
  public:
  void clear_network_signal();
  const ::signal_source_definition::NetworkSource& network_signal() const;
  ::signal_source_definition::NetworkSource* release_network_signal();
  ::signal_source_definition::NetworkSource* mutable_network_signal();
  void set_allocated_network_signal(::signal_source_definition::NetworkSource* network_signal);
  private:
  const ::signal_source_definition::NetworkSource& _internal_network_signal() const;
  ::signal_source_definition::NetworkSource* _internal_mutable_network_signal();
  public:

  // .signal_source_definition.InternalSource internal_signal = 7;
  bool has_internal_signal() const;
  private:
  bool _internal_has_internal_signal() const;
  public:
  void clear_internal_signal();
  const ::signal_source_definition::InternalSource& internal_signal() const;
  ::signal_source_definition::InternalSource* release_internal_signal();
  ::signal_source_definition::InternalSource* mutable_internal_signal();
  void set_allocated_internal_signal(::signal_source_definition::InternalSource* internal_signal);
  private:
  const ::signal_source_definition::InternalSource& _internal_internal_signal() const;
  ::signal_source_definition::InternalSource* _internal_mutable_internal_signal();
  public:

  // .signal_source_definition.ProcessingToolboxSource processing_toolbox_signal = 8;
  bool has_processing_toolbox_signal() const;
  private:
  bool _internal_has_processing_toolbox_signal() const;
  public:
  void clear_processing_toolbox_signal();
  const ::signal_source_definition::ProcessingToolboxSource& processing_toolbox_signal() const;
  ::signal_source_definition::ProcessingToolboxSource* release_processing_toolbox_signal();
  ::signal_source_definition::ProcessingToolboxSource* mutable_processing_toolbox_signal();
  void set_allocated_processing_toolbox_signal(::signal_source_definition::ProcessingToolboxSource* processing_toolbox_signal);
  private:
  const ::signal_source_definition::ProcessingToolboxSource& _internal_processing_toolbox_signal() const;
  ::signal_source_definition::ProcessingToolboxSource* _internal_mutable_processing_toolbox_signal();
  public:

  // .signal_source_definition.ThriftmeSource thriftme_signal = 9;
  bool has_thriftme_signal() const;
  private:
  bool _internal_has_thriftme_signal() const;
  public:
  void clear_thriftme_signal();
  const ::signal_source_definition::ThriftmeSource& thriftme_signal() const;
  ::signal_source_definition::ThriftmeSource* release_thriftme_signal();
  ::signal_source_definition::ThriftmeSource* mutable_thriftme_signal();
  void set_allocated_thriftme_signal(::signal_source_definition::ThriftmeSource* thriftme_signal);
  private:
  const ::signal_source_definition::ThriftmeSource& _internal_thriftme_signal() const;
  ::signal_source_definition::ThriftmeSource* _internal_mutable_thriftme_signal();
  public:

  void clear_signal_definition();
  SignalDefinitionCase signal_definition_case() const;
  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.SignalChangeTriggerEvent)
 private:
  class _Internal;
  void set_has_default_signal();
  void set_has_can_signal();
  void set_has_lin_signal();
  void set_has_ethernet_signal();
  void set_has_network_signal();
  void set_has_internal_signal();
  void set_has_processing_toolbox_signal();
  void set_has_thriftme_signal();

  inline bool has_signal_definition() const;
  inline void clear_has_signal_definition();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  bool on_signal_change_;
  union SignalDefinitionUnion {
    SignalDefinitionUnion() {}
    ::signal_source_definition::DefaultSource* default_signal_;
    ::signal_source_definition::CanSource* can_signal_;
    ::signal_source_definition::LinSource* lin_signal_;
    ::signal_source_definition::EthernetSource* ethernet_signal_;
    ::signal_source_definition::NetworkSource* network_signal_;
    ::signal_source_definition::InternalSource* internal_signal_;
    ::signal_source_definition::ProcessingToolboxSource* processing_toolbox_signal_;
    ::signal_source_definition::ThriftmeSource* thriftme_signal_;
  } signal_definition_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class SignalTransitionTriggerEvent :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.SignalTransitionTriggerEvent) */ {
 public:
  SignalTransitionTriggerEvent();
  virtual ~SignalTransitionTriggerEvent();

  SignalTransitionTriggerEvent(const SignalTransitionTriggerEvent& from);
  SignalTransitionTriggerEvent(SignalTransitionTriggerEvent&& from) noexcept
    : SignalTransitionTriggerEvent() {
    *this = ::std::move(from);
  }

  inline SignalTransitionTriggerEvent& operator=(const SignalTransitionTriggerEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignalTransitionTriggerEvent& operator=(SignalTransitionTriggerEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SignalTransitionTriggerEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignalTransitionTriggerEvent* internal_default_instance() {
    return reinterpret_cast<const SignalTransitionTriggerEvent*>(
               &_SignalTransitionTriggerEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(SignalTransitionTriggerEvent& a, SignalTransitionTriggerEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(SignalTransitionTriggerEvent* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SignalTransitionTriggerEvent* New() const final {
    return CreateMaybeMessage<SignalTransitionTriggerEvent>(nullptr);
  }

  SignalTransitionTriggerEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SignalTransitionTriggerEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SignalTransitionTriggerEvent& from);
  void MergeFrom(const SignalTransitionTriggerEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignalTransitionTriggerEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.SignalTransitionTriggerEvent";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLogicalExpressionFieldNumber = 1,
  };
  // repeated .logical_expression.LogicalExpression logical_expression = 1;
  int logical_expression_size() const;
  private:
  int _internal_logical_expression_size() const;
  public:
  void clear_logical_expression();
  ::logical_expression::LogicalExpression* mutable_logical_expression(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::logical_expression::LogicalExpression >*
      mutable_logical_expression();
  private:
  const ::logical_expression::LogicalExpression& _internal_logical_expression(int index) const;
  ::logical_expression::LogicalExpression* _internal_add_logical_expression();
  public:
  const ::logical_expression::LogicalExpression& logical_expression(int index) const;
  ::logical_expression::LogicalExpression* add_logical_expression();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::logical_expression::LogicalExpression >&
      logical_expression() const;

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.SignalTransitionTriggerEvent)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::logical_expression::LogicalExpression > logical_expression_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class SignalCollectionCount :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.SignalCollectionCount) */ {
 public:
  SignalCollectionCount();
  virtual ~SignalCollectionCount();

  SignalCollectionCount(const SignalCollectionCount& from);
  SignalCollectionCount(SignalCollectionCount&& from) noexcept
    : SignalCollectionCount() {
    *this = ::std::move(from);
  }

  inline SignalCollectionCount& operator=(const SignalCollectionCount& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignalCollectionCount& operator=(SignalCollectionCount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SignalCollectionCount& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignalCollectionCount* internal_default_instance() {
    return reinterpret_cast<const SignalCollectionCount*>(
               &_SignalCollectionCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(SignalCollectionCount& a, SignalCollectionCount& b) {
    a.Swap(&b);
  }
  inline void Swap(SignalCollectionCount* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SignalCollectionCount* New() const final {
    return CreateMaybeMessage<SignalCollectionCount>(nullptr);
  }

  SignalCollectionCount* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SignalCollectionCount>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SignalCollectionCount& from);
  void MergeFrom(const SignalCollectionCount& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignalCollectionCount* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.SignalCollectionCount";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCountFieldNumber = 1,
  };
  // uint32 count = 1;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.SignalCollectionCount)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class GeoRegionTriggerEvent :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.GeoRegionTriggerEvent) */ {
 public:
  GeoRegionTriggerEvent();
  virtual ~GeoRegionTriggerEvent();

  GeoRegionTriggerEvent(const GeoRegionTriggerEvent& from);
  GeoRegionTriggerEvent(GeoRegionTriggerEvent&& from) noexcept
    : GeoRegionTriggerEvent() {
    *this = ::std::move(from);
  }

  inline GeoRegionTriggerEvent& operator=(const GeoRegionTriggerEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeoRegionTriggerEvent& operator=(GeoRegionTriggerEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GeoRegionTriggerEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GeoRegionTriggerEvent* internal_default_instance() {
    return reinterpret_cast<const GeoRegionTriggerEvent*>(
               &_GeoRegionTriggerEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(GeoRegionTriggerEvent& a, GeoRegionTriggerEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(GeoRegionTriggerEvent* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GeoRegionTriggerEvent* New() const final {
    return CreateMaybeMessage<GeoRegionTriggerEvent>(nullptr);
  }

  GeoRegionTriggerEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GeoRegionTriggerEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GeoRegionTriggerEvent& from);
  void MergeFrom(const GeoRegionTriggerEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeoRegionTriggerEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.GeoRegionTriggerEvent";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGeoAreaFieldNumber = 1,
    kGeoActionFieldNumber = 2,
  };
  // .data_collection_configuration_request.CompositeLocation geo_area = 1;
  bool has_geo_area() const;
  private:
  bool _internal_has_geo_area() const;
  public:
  void clear_geo_area();
  const ::data_collection_configuration_request::CompositeLocation& geo_area() const;
  ::data_collection_configuration_request::CompositeLocation* release_geo_area();
  ::data_collection_configuration_request::CompositeLocation* mutable_geo_area();
  void set_allocated_geo_area(::data_collection_configuration_request::CompositeLocation* geo_area);
  private:
  const ::data_collection_configuration_request::CompositeLocation& _internal_geo_area() const;
  ::data_collection_configuration_request::CompositeLocation* _internal_mutable_geo_area();
  public:

  // .data_collection_configuration_request.GeoAction geo_action = 2;
  bool has_geo_action() const;
  private:
  bool _internal_has_geo_action() const;
  public:
  void clear_geo_action();
  const ::data_collection_configuration_request::GeoAction& geo_action() const;
  ::data_collection_configuration_request::GeoAction* release_geo_action();
  ::data_collection_configuration_request::GeoAction* mutable_geo_action();
  void set_allocated_geo_action(::data_collection_configuration_request::GeoAction* geo_action);
  private:
  const ::data_collection_configuration_request::GeoAction& _internal_geo_action() const;
  ::data_collection_configuration_request::GeoAction* _internal_mutable_geo_action();
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.GeoRegionTriggerEvent)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::data_collection_configuration_request::CompositeLocation* geo_area_;
  ::data_collection_configuration_request::GeoAction* geo_action_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class CollectAfterTriggerEvent :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.CollectAfterTriggerEvent) */ {
 public:
  CollectAfterTriggerEvent();
  virtual ~CollectAfterTriggerEvent();

  CollectAfterTriggerEvent(const CollectAfterTriggerEvent& from);
  CollectAfterTriggerEvent(CollectAfterTriggerEvent&& from) noexcept
    : CollectAfterTriggerEvent() {
    *this = ::std::move(from);
  }

  inline CollectAfterTriggerEvent& operator=(const CollectAfterTriggerEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CollectAfterTriggerEvent& operator=(CollectAfterTriggerEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CollectAfterTriggerEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CollectAfterTriggerEvent* internal_default_instance() {
    return reinterpret_cast<const CollectAfterTriggerEvent*>(
               &_CollectAfterTriggerEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CollectAfterTriggerEvent& a, CollectAfterTriggerEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CollectAfterTriggerEvent* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CollectAfterTriggerEvent* New() const final {
    return CreateMaybeMessage<CollectAfterTriggerEvent>(nullptr);
  }

  CollectAfterTriggerEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CollectAfterTriggerEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CollectAfterTriggerEvent& from);
  void MergeFrom(const CollectAfterTriggerEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CollectAfterTriggerEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.CollectAfterTriggerEvent";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCollectAfterDistanceMeterMinFieldNumber = 1,
    kCollectAfterDistanceMeterMaxFieldNumber = 2,
    kCollectAfterTimeSecondsMinFieldNumber = 3,
    kCollectAfterTimeSecondsMaxFieldNumber = 4,
  };
  // double collect_after_distance_meter_min = 1;
  void clear_collect_after_distance_meter_min();
  double collect_after_distance_meter_min() const;
  void set_collect_after_distance_meter_min(double value);
  private:
  double _internal_collect_after_distance_meter_min() const;
  void _internal_set_collect_after_distance_meter_min(double value);
  public:

  // double collect_after_distance_meter_max = 2;
  void clear_collect_after_distance_meter_max();
  double collect_after_distance_meter_max() const;
  void set_collect_after_distance_meter_max(double value);
  private:
  double _internal_collect_after_distance_meter_max() const;
  void _internal_set_collect_after_distance_meter_max(double value);
  public:

  // double collect_after_time_seconds_min = 3;
  void clear_collect_after_time_seconds_min();
  double collect_after_time_seconds_min() const;
  void set_collect_after_time_seconds_min(double value);
  private:
  double _internal_collect_after_time_seconds_min() const;
  void _internal_set_collect_after_time_seconds_min(double value);
  public:

  // double collect_after_time_seconds_max = 4;
  void clear_collect_after_time_seconds_max();
  double collect_after_time_seconds_max() const;
  void set_collect_after_time_seconds_max(double value);
  private:
  double _internal_collect_after_time_seconds_max() const;
  void _internal_set_collect_after_time_seconds_max(double value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.CollectAfterTriggerEvent)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double collect_after_distance_meter_min_;
  double collect_after_distance_meter_max_;
  double collect_after_time_seconds_min_;
  double collect_after_time_seconds_max_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class GeoAction :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.GeoAction) */ {
 public:
  GeoAction();
  virtual ~GeoAction();

  GeoAction(const GeoAction& from);
  GeoAction(GeoAction&& from) noexcept
    : GeoAction() {
    *this = ::std::move(from);
  }

  inline GeoAction& operator=(const GeoAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeoAction& operator=(GeoAction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GeoAction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GeoAction* internal_default_instance() {
    return reinterpret_cast<const GeoAction*>(
               &_GeoAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(GeoAction& a, GeoAction& b) {
    a.Swap(&b);
  }
  inline void Swap(GeoAction* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GeoAction* New() const final {
    return CreateMaybeMessage<GeoAction>(nullptr);
  }

  GeoAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GeoAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GeoAction& from);
  void MergeFrom(const GeoAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeoAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.GeoAction";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOnEntryFieldNumber = 1,
    kOnExitFieldNumber = 2,
    kCollectWhileInsideFieldNumber = 3,
    kCollectWhileOutsideFieldNumber = 4,
  };
  // bool on_entry = 1;
  void clear_on_entry();
  bool on_entry() const;
  void set_on_entry(bool value);
  private:
  bool _internal_on_entry() const;
  void _internal_set_on_entry(bool value);
  public:

  // bool on_exit = 2;
  void clear_on_exit();
  bool on_exit() const;
  void set_on_exit(bool value);
  private:
  bool _internal_on_exit() const;
  void _internal_set_on_exit(bool value);
  public:

  // bool collect_while_inside = 3;
  void clear_collect_while_inside();
  bool collect_while_inside() const;
  void set_collect_while_inside(bool value);
  private:
  bool _internal_collect_while_inside() const;
  void _internal_set_collect_while_inside(bool value);
  public:

  // bool collect_while_outside = 4;
  void clear_collect_while_outside();
  bool collect_while_outside() const;
  void set_collect_while_outside(bool value);
  private:
  bool _internal_collect_while_outside() const;
  void _internal_set_collect_while_outside(bool value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.GeoAction)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  bool on_entry_;
  bool on_exit_;
  bool collect_while_inside_;
  bool collect_while_outside_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class KeyValuePair :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.KeyValuePair) */ {
 public:
  KeyValuePair();
  virtual ~KeyValuePair();

  KeyValuePair(const KeyValuePair& from);
  KeyValuePair(KeyValuePair&& from) noexcept
    : KeyValuePair() {
    *this = ::std::move(from);
  }

  inline KeyValuePair& operator=(const KeyValuePair& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyValuePair& operator=(KeyValuePair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KeyValuePair& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyValuePair* internal_default_instance() {
    return reinterpret_cast<const KeyValuePair*>(
               &_KeyValuePair_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(KeyValuePair& a, KeyValuePair& b) {
    a.Swap(&b);
  }
  inline void Swap(KeyValuePair* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KeyValuePair* New() const final {
    return CreateMaybeMessage<KeyValuePair>(nullptr);
  }

  KeyValuePair* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KeyValuePair>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KeyValuePair& from);
  void MergeFrom(const KeyValuePair& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeyValuePair* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.KeyValuePair";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string key = 1;
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // string value = 2;
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.KeyValuePair)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class TriggerAnnotationID :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.TriggerAnnotationID) */ {
 public:
  TriggerAnnotationID();
  virtual ~TriggerAnnotationID();

  TriggerAnnotationID(const TriggerAnnotationID& from);
  TriggerAnnotationID(TriggerAnnotationID&& from) noexcept
    : TriggerAnnotationID() {
    *this = ::std::move(from);
  }

  inline TriggerAnnotationID& operator=(const TriggerAnnotationID& from) {
    CopyFrom(from);
    return *this;
  }
  inline TriggerAnnotationID& operator=(TriggerAnnotationID&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TriggerAnnotationID& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TriggerAnnotationID* internal_default_instance() {
    return reinterpret_cast<const TriggerAnnotationID*>(
               &_TriggerAnnotationID_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(TriggerAnnotationID& a, TriggerAnnotationID& b) {
    a.Swap(&b);
  }
  inline void Swap(TriggerAnnotationID* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TriggerAnnotationID* New() const final {
    return CreateMaybeMessage<TriggerAnnotationID>(nullptr);
  }

  TriggerAnnotationID* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TriggerAnnotationID>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TriggerAnnotationID& from);
  void MergeFrom(const TriggerAnnotationID& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TriggerAnnotationID* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.TriggerAnnotationID";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.TriggerAnnotationID)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class Trigger :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.Trigger) */ {
 public:
  Trigger();
  virtual ~Trigger();

  Trigger(const Trigger& from);
  Trigger(Trigger&& from) noexcept
    : Trigger() {
    *this = ::std::move(from);
  }

  inline Trigger& operator=(const Trigger& from) {
    CopyFrom(from);
    return *this;
  }
  inline Trigger& operator=(Trigger&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Trigger& default_instance();

  enum CollectionConfigurationCase {
    kTimeDeltaTriggerEvent = 2,
    kDistanceDeltaTriggerEvent = 3,
    kSignalChangeTriggerEvent = 4,
    kSignalTransitionTriggerEvent = 5,
    kGeoRegionTriggerEvent = 6,
    kCount = 7,
    kSignalCollectionNativeFrequency = 8,
    kCollectAfterTriggerEvent = 9,
    COLLECTIONCONFIGURATION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Trigger* internal_default_instance() {
    return reinterpret_cast<const Trigger*>(
               &_Trigger_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(Trigger& a, Trigger& b) {
    a.Swap(&b);
  }
  inline void Swap(Trigger* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Trigger* New() const final {
    return CreateMaybeMessage<Trigger>(nullptr);
  }

  Trigger* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Trigger>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Trigger& from);
  void MergeFrom(const Trigger& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Trigger* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.Trigger";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTriggerAnnotationIdsFieldNumber = 1,
    kTimeDeltaTriggerEventFieldNumber = 2,
    kDistanceDeltaTriggerEventFieldNumber = 3,
    kSignalChangeTriggerEventFieldNumber = 4,
    kSignalTransitionTriggerEventFieldNumber = 5,
    kGeoRegionTriggerEventFieldNumber = 6,
    kCountFieldNumber = 7,
    kSignalCollectionNativeFrequencyFieldNumber = 8,
    kCollectAfterTriggerEventFieldNumber = 9,
  };
  // repeated .data_collection_configuration_request.TriggerAnnotationID trigger_annotation_ids = 1;
  int trigger_annotation_ids_size() const;
  private:
  int _internal_trigger_annotation_ids_size() const;
  public:
  void clear_trigger_annotation_ids();
  ::data_collection_configuration_request::TriggerAnnotationID* mutable_trigger_annotation_ids(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::TriggerAnnotationID >*
      mutable_trigger_annotation_ids();
  private:
  const ::data_collection_configuration_request::TriggerAnnotationID& _internal_trigger_annotation_ids(int index) const;
  ::data_collection_configuration_request::TriggerAnnotationID* _internal_add_trigger_annotation_ids();
  public:
  const ::data_collection_configuration_request::TriggerAnnotationID& trigger_annotation_ids(int index) const;
  ::data_collection_configuration_request::TriggerAnnotationID* add_trigger_annotation_ids();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::TriggerAnnotationID >&
      trigger_annotation_ids() const;

  // .data_collection_configuration_request.TimeDeltaTriggerEvent time_delta_trigger_event = 2;
  bool has_time_delta_trigger_event() const;
  private:
  bool _internal_has_time_delta_trigger_event() const;
  public:
  void clear_time_delta_trigger_event();
  const ::data_collection_configuration_request::TimeDeltaTriggerEvent& time_delta_trigger_event() const;
  ::data_collection_configuration_request::TimeDeltaTriggerEvent* release_time_delta_trigger_event();
  ::data_collection_configuration_request::TimeDeltaTriggerEvent* mutable_time_delta_trigger_event();
  void set_allocated_time_delta_trigger_event(::data_collection_configuration_request::TimeDeltaTriggerEvent* time_delta_trigger_event);
  private:
  const ::data_collection_configuration_request::TimeDeltaTriggerEvent& _internal_time_delta_trigger_event() const;
  ::data_collection_configuration_request::TimeDeltaTriggerEvent* _internal_mutable_time_delta_trigger_event();
  public:

  // .data_collection_configuration_request.DistanceDeltaTriggerEvent distance_delta_trigger_event = 3;
  bool has_distance_delta_trigger_event() const;
  private:
  bool _internal_has_distance_delta_trigger_event() const;
  public:
  void clear_distance_delta_trigger_event();
  const ::data_collection_configuration_request::DistanceDeltaTriggerEvent& distance_delta_trigger_event() const;
  ::data_collection_configuration_request::DistanceDeltaTriggerEvent* release_distance_delta_trigger_event();
  ::data_collection_configuration_request::DistanceDeltaTriggerEvent* mutable_distance_delta_trigger_event();
  void set_allocated_distance_delta_trigger_event(::data_collection_configuration_request::DistanceDeltaTriggerEvent* distance_delta_trigger_event);
  private:
  const ::data_collection_configuration_request::DistanceDeltaTriggerEvent& _internal_distance_delta_trigger_event() const;
  ::data_collection_configuration_request::DistanceDeltaTriggerEvent* _internal_mutable_distance_delta_trigger_event();
  public:

  // .data_collection_configuration_request.SignalChangeTriggerEvent signal_change_trigger_event = 4;
  bool has_signal_change_trigger_event() const;
  private:
  bool _internal_has_signal_change_trigger_event() const;
  public:
  void clear_signal_change_trigger_event();
  const ::data_collection_configuration_request::SignalChangeTriggerEvent& signal_change_trigger_event() const;
  ::data_collection_configuration_request::SignalChangeTriggerEvent* release_signal_change_trigger_event();
  ::data_collection_configuration_request::SignalChangeTriggerEvent* mutable_signal_change_trigger_event();
  void set_allocated_signal_change_trigger_event(::data_collection_configuration_request::SignalChangeTriggerEvent* signal_change_trigger_event);
  private:
  const ::data_collection_configuration_request::SignalChangeTriggerEvent& _internal_signal_change_trigger_event() const;
  ::data_collection_configuration_request::SignalChangeTriggerEvent* _internal_mutable_signal_change_trigger_event();
  public:

  // .data_collection_configuration_request.SignalTransitionTriggerEvent signal_transition_trigger_event = 5;
  bool has_signal_transition_trigger_event() const;
  private:
  bool _internal_has_signal_transition_trigger_event() const;
  public:
  void clear_signal_transition_trigger_event();
  const ::data_collection_configuration_request::SignalTransitionTriggerEvent& signal_transition_trigger_event() const;
  ::data_collection_configuration_request::SignalTransitionTriggerEvent* release_signal_transition_trigger_event();
  ::data_collection_configuration_request::SignalTransitionTriggerEvent* mutable_signal_transition_trigger_event();
  void set_allocated_signal_transition_trigger_event(::data_collection_configuration_request::SignalTransitionTriggerEvent* signal_transition_trigger_event);
  private:
  const ::data_collection_configuration_request::SignalTransitionTriggerEvent& _internal_signal_transition_trigger_event() const;
  ::data_collection_configuration_request::SignalTransitionTriggerEvent* _internal_mutable_signal_transition_trigger_event();
  public:

  // .data_collection_configuration_request.GeoRegionTriggerEvent geo_region_trigger_event = 6;
  bool has_geo_region_trigger_event() const;
  private:
  bool _internal_has_geo_region_trigger_event() const;
  public:
  void clear_geo_region_trigger_event();
  const ::data_collection_configuration_request::GeoRegionTriggerEvent& geo_region_trigger_event() const;
  ::data_collection_configuration_request::GeoRegionTriggerEvent* release_geo_region_trigger_event();
  ::data_collection_configuration_request::GeoRegionTriggerEvent* mutable_geo_region_trigger_event();
  void set_allocated_geo_region_trigger_event(::data_collection_configuration_request::GeoRegionTriggerEvent* geo_region_trigger_event);
  private:
  const ::data_collection_configuration_request::GeoRegionTriggerEvent& _internal_geo_region_trigger_event() const;
  ::data_collection_configuration_request::GeoRegionTriggerEvent* _internal_mutable_geo_region_trigger_event();
  public:

  // .data_collection_configuration_request.SignalCollectionCount count = 7;
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  const ::data_collection_configuration_request::SignalCollectionCount& count() const;
  ::data_collection_configuration_request::SignalCollectionCount* release_count();
  ::data_collection_configuration_request::SignalCollectionCount* mutable_count();
  void set_allocated_count(::data_collection_configuration_request::SignalCollectionCount* count);
  private:
  const ::data_collection_configuration_request::SignalCollectionCount& _internal_count() const;
  ::data_collection_configuration_request::SignalCollectionCount* _internal_mutable_count();
  public:

  // bool signal_collection_native_frequency = 8;
  private:
  bool _internal_has_signal_collection_native_frequency() const;
  public:
  void clear_signal_collection_native_frequency();
  bool signal_collection_native_frequency() const;
  void set_signal_collection_native_frequency(bool value);
  private:
  bool _internal_signal_collection_native_frequency() const;
  void _internal_set_signal_collection_native_frequency(bool value);
  public:

  // .data_collection_configuration_request.CollectAfterTriggerEvent collect_after_trigger_event = 9;
  bool has_collect_after_trigger_event() const;
  private:
  bool _internal_has_collect_after_trigger_event() const;
  public:
  void clear_collect_after_trigger_event();
  const ::data_collection_configuration_request::CollectAfterTriggerEvent& collect_after_trigger_event() const;
  ::data_collection_configuration_request::CollectAfterTriggerEvent* release_collect_after_trigger_event();
  ::data_collection_configuration_request::CollectAfterTriggerEvent* mutable_collect_after_trigger_event();
  void set_allocated_collect_after_trigger_event(::data_collection_configuration_request::CollectAfterTriggerEvent* collect_after_trigger_event);
  private:
  const ::data_collection_configuration_request::CollectAfterTriggerEvent& _internal_collect_after_trigger_event() const;
  ::data_collection_configuration_request::CollectAfterTriggerEvent* _internal_mutable_collect_after_trigger_event();
  public:

  void clear_CollectionConfiguration();
  CollectionConfigurationCase CollectionConfiguration_case() const;
  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.Trigger)
 private:
  class _Internal;
  void set_has_time_delta_trigger_event();
  void set_has_distance_delta_trigger_event();
  void set_has_signal_change_trigger_event();
  void set_has_signal_transition_trigger_event();
  void set_has_geo_region_trigger_event();
  void set_has_count();
  void set_has_signal_collection_native_frequency();
  void set_has_collect_after_trigger_event();

  inline bool has_CollectionConfiguration() const;
  inline void clear_has_CollectionConfiguration();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::TriggerAnnotationID > trigger_annotation_ids_;
  union CollectionConfigurationUnion {
    CollectionConfigurationUnion() {}
    ::data_collection_configuration_request::TimeDeltaTriggerEvent* time_delta_trigger_event_;
    ::data_collection_configuration_request::DistanceDeltaTriggerEvent* distance_delta_trigger_event_;
    ::data_collection_configuration_request::SignalChangeTriggerEvent* signal_change_trigger_event_;
    ::data_collection_configuration_request::SignalTransitionTriggerEvent* signal_transition_trigger_event_;
    ::data_collection_configuration_request::GeoRegionTriggerEvent* geo_region_trigger_event_;
    ::data_collection_configuration_request::SignalCollectionCount* count_;
    bool signal_collection_native_frequency_;
    ::data_collection_configuration_request::CollectAfterTriggerEvent* collect_after_trigger_event_;
  } CollectionConfiguration_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class CollectionAction :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.CollectionAction) */ {
 public:
  CollectionAction();
  virtual ~CollectionAction();

  CollectionAction(const CollectionAction& from);
  CollectionAction(CollectionAction&& from) noexcept
    : CollectionAction() {
    *this = ::std::move(from);
  }

  inline CollectionAction& operator=(const CollectionAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline CollectionAction& operator=(CollectionAction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CollectionAction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CollectionAction* internal_default_instance() {
    return reinterpret_cast<const CollectionAction*>(
               &_CollectionAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CollectionAction& a, CollectionAction& b) {
    a.Swap(&b);
  }
  inline void Swap(CollectionAction* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CollectionAction* New() const final {
    return CreateMaybeMessage<CollectionAction>(nullptr);
  }

  CollectionAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CollectionAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CollectionAction& from);
  void MergeFrom(const CollectionAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CollectionAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.CollectionAction";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCollectionTasksFieldNumber = 1,
    kMinSplitFrequencyFieldNumber = 2,
    kDataPacketizationTriggerFieldNumber = 3,
  };
  // repeated .data_collection_configuration_request.CollectionTask collection_tasks = 1;
  int collection_tasks_size() const;
  private:
  int _internal_collection_tasks_size() const;
  public:
  void clear_collection_tasks();
  ::data_collection_configuration_request::CollectionTask* mutable_collection_tasks(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::CollectionTask >*
      mutable_collection_tasks();
  private:
  const ::data_collection_configuration_request::CollectionTask& _internal_collection_tasks(int index) const;
  ::data_collection_configuration_request::CollectionTask* _internal_add_collection_tasks();
  public:
  const ::data_collection_configuration_request::CollectionTask& collection_tasks(int index) const;
  ::data_collection_configuration_request::CollectionTask* add_collection_tasks();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::CollectionTask >&
      collection_tasks() const;

  // .data_collection_configuration_request.CollectionExtents min_split_frequency = 2;
  bool has_min_split_frequency() const;
  private:
  bool _internal_has_min_split_frequency() const;
  public:
  void clear_min_split_frequency();
  const ::data_collection_configuration_request::CollectionExtents& min_split_frequency() const;
  ::data_collection_configuration_request::CollectionExtents* release_min_split_frequency();
  ::data_collection_configuration_request::CollectionExtents* mutable_min_split_frequency();
  void set_allocated_min_split_frequency(::data_collection_configuration_request::CollectionExtents* min_split_frequency);
  private:
  const ::data_collection_configuration_request::CollectionExtents& _internal_min_split_frequency() const;
  ::data_collection_configuration_request::CollectionExtents* _internal_mutable_min_split_frequency();
  public:

  // .data_collection_configuration_request.CollectionExtents data_packetization_trigger = 3;
  bool has_data_packetization_trigger() const;
  private:
  bool _internal_has_data_packetization_trigger() const;
  public:
  void clear_data_packetization_trigger();
  const ::data_collection_configuration_request::CollectionExtents& data_packetization_trigger() const;
  ::data_collection_configuration_request::CollectionExtents* release_data_packetization_trigger();
  ::data_collection_configuration_request::CollectionExtents* mutable_data_packetization_trigger();
  void set_allocated_data_packetization_trigger(::data_collection_configuration_request::CollectionExtents* data_packetization_trigger);
  private:
  const ::data_collection_configuration_request::CollectionExtents& _internal_data_packetization_trigger() const;
  ::data_collection_configuration_request::CollectionExtents* _internal_mutable_data_packetization_trigger();
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.CollectionAction)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::CollectionTask > collection_tasks_;
  ::data_collection_configuration_request::CollectionExtents* min_split_frequency_;
  ::data_collection_configuration_request::CollectionExtents* data_packetization_trigger_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class StartUpDelay :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.StartUpDelay) */ {
 public:
  StartUpDelay();
  virtual ~StartUpDelay();

  StartUpDelay(const StartUpDelay& from);
  StartUpDelay(StartUpDelay&& from) noexcept
    : StartUpDelay() {
    *this = ::std::move(from);
  }

  inline StartUpDelay& operator=(const StartUpDelay& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartUpDelay& operator=(StartUpDelay&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StartUpDelay& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StartUpDelay* internal_default_instance() {
    return reinterpret_cast<const StartUpDelay*>(
               &_StartUpDelay_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(StartUpDelay& a, StartUpDelay& b) {
    a.Swap(&b);
  }
  inline void Swap(StartUpDelay* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StartUpDelay* New() const final {
    return CreateMaybeMessage<StartUpDelay>(nullptr);
  }

  StartUpDelay* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StartUpDelay>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StartUpDelay& from);
  void MergeFrom(const StartUpDelay& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartUpDelay* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.StartUpDelay";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNoCollectionStartupDistanceMeterMinFieldNumber = 1,
    kNoCollectionStartupDistanceMeterMaxFieldNumber = 2,
    kNoCollectionStartupTimeSecondsMinFieldNumber = 3,
    kNoCollectionStartupTimeSecondsMaxFieldNumber = 4,
  };
  // double no_collection_startup_distance_meter_min = 1;
  void clear_no_collection_startup_distance_meter_min();
  double no_collection_startup_distance_meter_min() const;
  void set_no_collection_startup_distance_meter_min(double value);
  private:
  double _internal_no_collection_startup_distance_meter_min() const;
  void _internal_set_no_collection_startup_distance_meter_min(double value);
  public:

  // double no_collection_startup_distance_meter_max = 2;
  void clear_no_collection_startup_distance_meter_max();
  double no_collection_startup_distance_meter_max() const;
  void set_no_collection_startup_distance_meter_max(double value);
  private:
  double _internal_no_collection_startup_distance_meter_max() const;
  void _internal_set_no_collection_startup_distance_meter_max(double value);
  public:

  // double no_collection_startup_time_seconds_min = 3;
  void clear_no_collection_startup_time_seconds_min();
  double no_collection_startup_time_seconds_min() const;
  void set_no_collection_startup_time_seconds_min(double value);
  private:
  double _internal_no_collection_startup_time_seconds_min() const;
  void _internal_set_no_collection_startup_time_seconds_min(double value);
  public:

  // double no_collection_startup_time_seconds_max = 4;
  void clear_no_collection_startup_time_seconds_max();
  double no_collection_startup_time_seconds_max() const;
  void set_no_collection_startup_time_seconds_max(double value);
  private:
  double _internal_no_collection_startup_time_seconds_max() const;
  void _internal_set_no_collection_startup_time_seconds_max(double value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.StartUpDelay)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double no_collection_startup_distance_meter_min_;
  double no_collection_startup_distance_meter_max_;
  double no_collection_startup_time_seconds_min_;
  double no_collection_startup_time_seconds_max_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class EndPointUncertainty :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.EndPointUncertainty) */ {
 public:
  EndPointUncertainty();
  virtual ~EndPointUncertainty();

  EndPointUncertainty(const EndPointUncertainty& from);
  EndPointUncertainty(EndPointUncertainty&& from) noexcept
    : EndPointUncertainty() {
    *this = ::std::move(from);
  }

  inline EndPointUncertainty& operator=(const EndPointUncertainty& from) {
    CopyFrom(from);
    return *this;
  }
  inline EndPointUncertainty& operator=(EndPointUncertainty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EndPointUncertainty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EndPointUncertainty* internal_default_instance() {
    return reinterpret_cast<const EndPointUncertainty*>(
               &_EndPointUncertainty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(EndPointUncertainty& a, EndPointUncertainty& b) {
    a.Swap(&b);
  }
  inline void Swap(EndPointUncertainty* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EndPointUncertainty* New() const final {
    return CreateMaybeMessage<EndPointUncertainty>(nullptr);
  }

  EndPointUncertainty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EndPointUncertainty>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EndPointUncertainty& from);
  void MergeFrom(const EndPointUncertainty& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EndPointUncertainty* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.EndPointUncertainty";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNoCollectionEndDistanceMeterMinFieldNumber = 1,
    kNoCollectionEndDistanceMeterMaxFieldNumber = 2,
    kNoCollectionEndTimeSecondsMinFieldNumber = 3,
    kNoCollectionEndTimeSecondsMaxFieldNumber = 4,
  };
  // double no_collection_end_distance_meter_min = 1;
  void clear_no_collection_end_distance_meter_min();
  double no_collection_end_distance_meter_min() const;
  void set_no_collection_end_distance_meter_min(double value);
  private:
  double _internal_no_collection_end_distance_meter_min() const;
  void _internal_set_no_collection_end_distance_meter_min(double value);
  public:

  // double no_collection_end_distance_meter_max = 2;
  void clear_no_collection_end_distance_meter_max();
  double no_collection_end_distance_meter_max() const;
  void set_no_collection_end_distance_meter_max(double value);
  private:
  double _internal_no_collection_end_distance_meter_max() const;
  void _internal_set_no_collection_end_distance_meter_max(double value);
  public:

  // double no_collection_end_time_seconds_min = 3;
  void clear_no_collection_end_time_seconds_min();
  double no_collection_end_time_seconds_min() const;
  void set_no_collection_end_time_seconds_min(double value);
  private:
  double _internal_no_collection_end_time_seconds_min() const;
  void _internal_set_no_collection_end_time_seconds_min(double value);
  public:

  // double no_collection_end_time_seconds_max = 4;
  void clear_no_collection_end_time_seconds_max();
  double no_collection_end_time_seconds_max() const;
  void set_no_collection_end_time_seconds_max(double value);
  private:
  double _internal_no_collection_end_time_seconds_max() const;
  void _internal_set_no_collection_end_time_seconds_max(double value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.EndPointUncertainty)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double no_collection_end_distance_meter_min_;
  double no_collection_end_distance_meter_max_;
  double no_collection_end_time_seconds_min_;
  double no_collection_end_time_seconds_max_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class DataRecordingGap :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.DataRecordingGap) */ {
 public:
  DataRecordingGap();
  virtual ~DataRecordingGap();

  DataRecordingGap(const DataRecordingGap& from);
  DataRecordingGap(DataRecordingGap&& from) noexcept
    : DataRecordingGap() {
    *this = ::std::move(from);
  }

  inline DataRecordingGap& operator=(const DataRecordingGap& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataRecordingGap& operator=(DataRecordingGap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DataRecordingGap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataRecordingGap* internal_default_instance() {
    return reinterpret_cast<const DataRecordingGap*>(
               &_DataRecordingGap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(DataRecordingGap& a, DataRecordingGap& b) {
    a.Swap(&b);
  }
  inline void Swap(DataRecordingGap* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataRecordingGap* New() const final {
    return CreateMaybeMessage<DataRecordingGap>(nullptr);
  }

  DataRecordingGap* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataRecordingGap>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DataRecordingGap& from);
  void MergeFrom(const DataRecordingGap& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataRecordingGap* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.DataRecordingGap";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataRecordingGapDistanceMinimumMeterFieldNumber = 1,
    kDataRecordingGapDistanceMaximumMeterFieldNumber = 2,
    kDataRecordingGapTimeMinimumSecondsFieldNumber = 3,
    kDataRecordingGapTimeMaximumSecondsFieldNumber = 4,
  };
  // double data_recording_gap_distance_minimum_meter = 1;
  void clear_data_recording_gap_distance_minimum_meter();
  double data_recording_gap_distance_minimum_meter() const;
  void set_data_recording_gap_distance_minimum_meter(double value);
  private:
  double _internal_data_recording_gap_distance_minimum_meter() const;
  void _internal_set_data_recording_gap_distance_minimum_meter(double value);
  public:

  // double data_recording_gap_distance_maximum_meter = 2;
  void clear_data_recording_gap_distance_maximum_meter();
  double data_recording_gap_distance_maximum_meter() const;
  void set_data_recording_gap_distance_maximum_meter(double value);
  private:
  double _internal_data_recording_gap_distance_maximum_meter() const;
  void _internal_set_data_recording_gap_distance_maximum_meter(double value);
  public:

  // double data_recording_gap_time_minimum_seconds = 3;
  void clear_data_recording_gap_time_minimum_seconds();
  double data_recording_gap_time_minimum_seconds() const;
  void set_data_recording_gap_time_minimum_seconds(double value);
  private:
  double _internal_data_recording_gap_time_minimum_seconds() const;
  void _internal_set_data_recording_gap_time_minimum_seconds(double value);
  public:

  // double data_recording_gap_time_maximum_seconds = 4;
  void clear_data_recording_gap_time_maximum_seconds();
  double data_recording_gap_time_maximum_seconds() const;
  void set_data_recording_gap_time_maximum_seconds(double value);
  private:
  double _internal_data_recording_gap_time_maximum_seconds() const;
  void _internal_set_data_recording_gap_time_maximum_seconds(double value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.DataRecordingGap)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double data_recording_gap_distance_minimum_meter_;
  double data_recording_gap_distance_maximum_meter_;
  double data_recording_gap_time_minimum_seconds_;
  double data_recording_gap_time_maximum_seconds_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class AbsoluteTimeOffset :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.AbsoluteTimeOffset) */ {
 public:
  AbsoluteTimeOffset();
  virtual ~AbsoluteTimeOffset();

  AbsoluteTimeOffset(const AbsoluteTimeOffset& from);
  AbsoluteTimeOffset(AbsoluteTimeOffset&& from) noexcept
    : AbsoluteTimeOffset() {
    *this = ::std::move(from);
  }

  inline AbsoluteTimeOffset& operator=(const AbsoluteTimeOffset& from) {
    CopyFrom(from);
    return *this;
  }
  inline AbsoluteTimeOffset& operator=(AbsoluteTimeOffset&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AbsoluteTimeOffset& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AbsoluteTimeOffset* internal_default_instance() {
    return reinterpret_cast<const AbsoluteTimeOffset*>(
               &_AbsoluteTimeOffset_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(AbsoluteTimeOffset& a, AbsoluteTimeOffset& b) {
    a.Swap(&b);
  }
  inline void Swap(AbsoluteTimeOffset* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AbsoluteTimeOffset* New() const final {
    return CreateMaybeMessage<AbsoluteTimeOffset>(nullptr);
  }

  AbsoluteTimeOffset* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AbsoluteTimeOffset>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AbsoluteTimeOffset& from);
  void MergeFrom(const AbsoluteTimeOffset& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AbsoluteTimeOffset* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.AbsoluteTimeOffset";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAbsoluteTimeOffsetMinimumMillisecondsFieldNumber = 1,
    kAbsoluteTimeOffsetMaximumMillisecondsFieldNumber = 2,
  };
  // int64 absolute_time_offset_minimum_milliseconds = 1;
  void clear_absolute_time_offset_minimum_milliseconds();
  ::PROTOBUF_NAMESPACE_ID::int64 absolute_time_offset_minimum_milliseconds() const;
  void set_absolute_time_offset_minimum_milliseconds(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_absolute_time_offset_minimum_milliseconds() const;
  void _internal_set_absolute_time_offset_minimum_milliseconds(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 absolute_time_offset_maximum_milliseconds = 2;
  void clear_absolute_time_offset_maximum_milliseconds();
  ::PROTOBUF_NAMESPACE_ID::int64 absolute_time_offset_maximum_milliseconds() const;
  void set_absolute_time_offset_maximum_milliseconds(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_absolute_time_offset_maximum_milliseconds() const;
  void _internal_set_absolute_time_offset_maximum_milliseconds(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.AbsoluteTimeOffset)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int64 absolute_time_offset_minimum_milliseconds_;
  ::PROTOBUF_NAMESPACE_ID::int64 absolute_time_offset_maximum_milliseconds_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class CollectionTask :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.CollectionTask) */ {
 public:
  CollectionTask();
  virtual ~CollectionTask();

  CollectionTask(const CollectionTask& from);
  CollectionTask(CollectionTask&& from) noexcept
    : CollectionTask() {
    *this = ::std::move(from);
  }

  inline CollectionTask& operator=(const CollectionTask& from) {
    CopyFrom(from);
    return *this;
  }
  inline CollectionTask& operator=(CollectionTask&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CollectionTask& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CollectionTask* internal_default_instance() {
    return reinterpret_cast<const CollectionTask*>(
               &_CollectionTask_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(CollectionTask& a, CollectionTask& b) {
    a.Swap(&b);
  }
  inline void Swap(CollectionTask* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CollectionTask* New() const final {
    return CreateMaybeMessage<CollectionTask>(nullptr);
  }

  CollectionTask* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CollectionTask>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CollectionTask& from);
  void MergeFrom(const CollectionTask& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CollectionTask* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.CollectionTask";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataPointsFieldNumber = 2,
    kDataPointsConfigurationFieldNumber = 3,
    kTaskIdFieldNumber = 1,
  };
  // repeated .data_collection_configuration_request.Datapoint data_points = 2;
  int data_points_size() const;
  private:
  int _internal_data_points_size() const;
  public:
  void clear_data_points();
  ::data_collection_configuration_request::Datapoint* mutable_data_points(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Datapoint >*
      mutable_data_points();
  private:
  const ::data_collection_configuration_request::Datapoint& _internal_data_points(int index) const;
  ::data_collection_configuration_request::Datapoint* _internal_add_data_points();
  public:
  const ::data_collection_configuration_request::Datapoint& data_points(int index) const;
  ::data_collection_configuration_request::Datapoint* add_data_points();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Datapoint >&
      data_points() const;

  // .data_collection_configuration_request.DatapointsConfiguration data_points_configuration = 3;
  bool has_data_points_configuration() const;
  private:
  bool _internal_has_data_points_configuration() const;
  public:
  void clear_data_points_configuration();
  const ::data_collection_configuration_request::DatapointsConfiguration& data_points_configuration() const;
  ::data_collection_configuration_request::DatapointsConfiguration* release_data_points_configuration();
  ::data_collection_configuration_request::DatapointsConfiguration* mutable_data_points_configuration();
  void set_allocated_data_points_configuration(::data_collection_configuration_request::DatapointsConfiguration* data_points_configuration);
  private:
  const ::data_collection_configuration_request::DatapointsConfiguration& _internal_data_points_configuration() const;
  ::data_collection_configuration_request::DatapointsConfiguration* _internal_mutable_data_points_configuration();
  public:

  // uint32 task_id = 1;
  void clear_task_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 task_id() const;
  void set_task_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_task_id() const;
  void _internal_set_task_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.CollectionTask)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Datapoint > data_points_;
  ::data_collection_configuration_request::DatapointsConfiguration* data_points_configuration_;
  ::PROTOBUF_NAMESPACE_ID::uint32 task_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class ListOfSNA :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.ListOfSNA) */ {
 public:
  ListOfSNA();
  virtual ~ListOfSNA();

  ListOfSNA(const ListOfSNA& from);
  ListOfSNA(ListOfSNA&& from) noexcept
    : ListOfSNA() {
    *this = ::std::move(from);
  }

  inline ListOfSNA& operator=(const ListOfSNA& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListOfSNA& operator=(ListOfSNA&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListOfSNA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListOfSNA* internal_default_instance() {
    return reinterpret_cast<const ListOfSNA*>(
               &_ListOfSNA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(ListOfSNA& a, ListOfSNA& b) {
    a.Swap(&b);
  }
  inline void Swap(ListOfSNA* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListOfSNA* New() const final {
    return CreateMaybeMessage<ListOfSNA>(nullptr);
  }

  ListOfSNA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListOfSNA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListOfSNA& from);
  void MergeFrom(const ListOfSNA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListOfSNA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.ListOfSNA";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueRangeFieldNumber = 1,
    kValueListSNAFieldNumber = 2,
  };
  // repeated .data_collection_configuration_request.ValueRange value_range = 1;
  int value_range_size() const;
  private:
  int _internal_value_range_size() const;
  public:
  void clear_value_range();
  ::data_collection_configuration_request::ValueRange* mutable_value_range(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::ValueRange >*
      mutable_value_range();
  private:
  const ::data_collection_configuration_request::ValueRange& _internal_value_range(int index) const;
  ::data_collection_configuration_request::ValueRange* _internal_add_value_range();
  public:
  const ::data_collection_configuration_request::ValueRange& value_range(int index) const;
  ::data_collection_configuration_request::ValueRange* add_value_range();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::ValueRange >&
      value_range() const;

  // repeated double value_list_SNA = 2;
  int value_list_sna_size() const;
  private:
  int _internal_value_list_sna_size() const;
  public:
  void clear_value_list_sna();
  private:
  double _internal_value_list_sna(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_value_list_sna() const;
  void _internal_add_value_list_sna(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_value_list_sna();
  public:
  double value_list_sna(int index) const;
  void set_value_list_sna(int index, double value);
  void add_value_list_sna(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      value_list_sna() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_value_list_sna();

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.ListOfSNA)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::ValueRange > value_range_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > value_list_sna_;
  mutable std::atomic<int> _value_list_sna_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class RawValueFilter :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.RawValueFilter) */ {
 public:
  RawValueFilter();
  virtual ~RawValueFilter();

  RawValueFilter(const RawValueFilter& from);
  RawValueFilter(RawValueFilter&& from) noexcept
    : RawValueFilter() {
    *this = ::std::move(from);
  }

  inline RawValueFilter& operator=(const RawValueFilter& from) {
    CopyFrom(from);
    return *this;
  }
  inline RawValueFilter& operator=(RawValueFilter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RawValueFilter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RawValueFilter* internal_default_instance() {
    return reinterpret_cast<const RawValueFilter*>(
               &_RawValueFilter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(RawValueFilter& a, RawValueFilter& b) {
    a.Swap(&b);
  }
  inline void Swap(RawValueFilter* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RawValueFilter* New() const final {
    return CreateMaybeMessage<RawValueFilter>(nullptr);
  }

  RawValueFilter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RawValueFilter>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RawValueFilter& from);
  void MergeFrom(const RawValueFilter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RawValueFilter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.RawValueFilter";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueRangeCustomFieldNumber = 1,
    kValueListCustomFieldNumber = 2,
  };
  // repeated .data_collection_configuration_request.ValueRange value_range_custom = 1;
  int value_range_custom_size() const;
  private:
  int _internal_value_range_custom_size() const;
  public:
  void clear_value_range_custom();
  ::data_collection_configuration_request::ValueRange* mutable_value_range_custom(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::ValueRange >*
      mutable_value_range_custom();
  private:
  const ::data_collection_configuration_request::ValueRange& _internal_value_range_custom(int index) const;
  ::data_collection_configuration_request::ValueRange* _internal_add_value_range_custom();
  public:
  const ::data_collection_configuration_request::ValueRange& value_range_custom(int index) const;
  ::data_collection_configuration_request::ValueRange* add_value_range_custom();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::ValueRange >&
      value_range_custom() const;

  // repeated double value_list_custom = 2;
  int value_list_custom_size() const;
  private:
  int _internal_value_list_custom_size() const;
  public:
  void clear_value_list_custom();
  private:
  double _internal_value_list_custom(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_value_list_custom() const;
  void _internal_add_value_list_custom(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_value_list_custom();
  public:
  double value_list_custom(int index) const;
  void set_value_list_custom(int index, double value);
  void add_value_list_custom(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      value_list_custom() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_value_list_custom();

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.RawValueFilter)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::ValueRange > value_range_custom_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > value_list_custom_;
  mutable std::atomic<int> _value_list_custom_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class ValueRange :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.ValueRange) */ {
 public:
  ValueRange();
  virtual ~ValueRange();

  ValueRange(const ValueRange& from);
  ValueRange(ValueRange&& from) noexcept
    : ValueRange() {
    *this = ::std::move(from);
  }

  inline ValueRange& operator=(const ValueRange& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValueRange& operator=(ValueRange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ValueRange& default_instance();

  enum RangeCase {
    kLessThanEqualTo = 1,
    kGreaterThanEqualTo = 2,
    kValueInterval = 3,
    RANGE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ValueRange* internal_default_instance() {
    return reinterpret_cast<const ValueRange*>(
               &_ValueRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(ValueRange& a, ValueRange& b) {
    a.Swap(&b);
  }
  inline void Swap(ValueRange* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ValueRange* New() const final {
    return CreateMaybeMessage<ValueRange>(nullptr);
  }

  ValueRange* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ValueRange>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ValueRange& from);
  void MergeFrom(const ValueRange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ValueRange* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.ValueRange";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLessThanEqualToFieldNumber = 1,
    kGreaterThanEqualToFieldNumber = 2,
    kValueIntervalFieldNumber = 3,
  };
  // double less_than_equal_to = 1;
  private:
  bool _internal_has_less_than_equal_to() const;
  public:
  void clear_less_than_equal_to();
  double less_than_equal_to() const;
  void set_less_than_equal_to(double value);
  private:
  double _internal_less_than_equal_to() const;
  void _internal_set_less_than_equal_to(double value);
  public:

  // double greater_than_equal_to = 2;
  private:
  bool _internal_has_greater_than_equal_to() const;
  public:
  void clear_greater_than_equal_to();
  double greater_than_equal_to() const;
  void set_greater_than_equal_to(double value);
  private:
  double _internal_greater_than_equal_to() const;
  void _internal_set_greater_than_equal_to(double value);
  public:

  // .data_collection_configuration_request.ValueInterval value_interval = 3;
  bool has_value_interval() const;
  private:
  bool _internal_has_value_interval() const;
  public:
  void clear_value_interval();
  const ::data_collection_configuration_request::ValueInterval& value_interval() const;
  ::data_collection_configuration_request::ValueInterval* release_value_interval();
  ::data_collection_configuration_request::ValueInterval* mutable_value_interval();
  void set_allocated_value_interval(::data_collection_configuration_request::ValueInterval* value_interval);
  private:
  const ::data_collection_configuration_request::ValueInterval& _internal_value_interval() const;
  ::data_collection_configuration_request::ValueInterval* _internal_mutable_value_interval();
  public:

  void clear_range();
  RangeCase range_case() const;
  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.ValueRange)
 private:
  class _Internal;
  void set_has_less_than_equal_to();
  void set_has_greater_than_equal_to();
  void set_has_value_interval();

  inline bool has_range() const;
  inline void clear_has_range();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  union RangeUnion {
    RangeUnion() {}
    double less_than_equal_to_;
    double greater_than_equal_to_;
    ::data_collection_configuration_request::ValueInterval* value_interval_;
  } range_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class ValueInterval :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.ValueInterval) */ {
 public:
  ValueInterval();
  virtual ~ValueInterval();

  ValueInterval(const ValueInterval& from);
  ValueInterval(ValueInterval&& from) noexcept
    : ValueInterval() {
    *this = ::std::move(from);
  }

  inline ValueInterval& operator=(const ValueInterval& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValueInterval& operator=(ValueInterval&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ValueInterval& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ValueInterval* internal_default_instance() {
    return reinterpret_cast<const ValueInterval*>(
               &_ValueInterval_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(ValueInterval& a, ValueInterval& b) {
    a.Swap(&b);
  }
  inline void Swap(ValueInterval* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ValueInterval* New() const final {
    return CreateMaybeMessage<ValueInterval>(nullptr);
  }

  ValueInterval* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ValueInterval>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ValueInterval& from);
  void MergeFrom(const ValueInterval& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ValueInterval* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.ValueInterval";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueLowerIncludedFieldNumber = 1,
    kValueUpperIncludedFieldNumber = 2,
  };
  // double value_lower_included = 1;
  void clear_value_lower_included();
  double value_lower_included() const;
  void set_value_lower_included(double value);
  private:
  double _internal_value_lower_included() const;
  void _internal_set_value_lower_included(double value);
  public:

  // double value_upper_included = 2;
  void clear_value_upper_included();
  double value_upper_included() const;
  void set_value_upper_included(double value);
  private:
  double _internal_value_upper_included() const;
  void _internal_set_value_upper_included(double value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.ValueInterval)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double value_lower_included_;
  double value_upper_included_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class Datapoint :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.Datapoint) */ {
 public:
  Datapoint();
  virtual ~Datapoint();

  Datapoint(const Datapoint& from);
  Datapoint(Datapoint&& from) noexcept
    : Datapoint() {
    *this = ::std::move(from);
  }

  inline Datapoint& operator=(const Datapoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline Datapoint& operator=(Datapoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Datapoint& default_instance();

  enum SignalDefinitionCase {
    kDefaultSignal = 1,
    kCanSignal = 2,
    kLinSignal = 3,
    kEthernetSignal = 4,
    kNetworkSignal = 5,
    kInternalSignal = 6,
    kProcessingToolboxSignal = 7,
    kThriftmeSignal = 8,
    kCollectd = 10,
    kEelsource = 19,
    kThriftmeActive = 23,
    SIGNAL_DEFINITION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Datapoint* internal_default_instance() {
    return reinterpret_cast<const Datapoint*>(
               &_Datapoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(Datapoint& a, Datapoint& b) {
    a.Swap(&b);
  }
  inline void Swap(Datapoint* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Datapoint* New() const final {
    return CreateMaybeMessage<Datapoint>(nullptr);
  }

  Datapoint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Datapoint>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Datapoint& from);
  void MergeFrom(const Datapoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Datapoint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.Datapoint";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Datapoint_DataPointValueTypeEnum DataPointValueTypeEnum;
  static constexpr DataPointValueTypeEnum DOUBLE =
    Datapoint_DataPointValueTypeEnum_DOUBLE;
  static constexpr DataPointValueTypeEnum FLOAT =
    Datapoint_DataPointValueTypeEnum_FLOAT;
  static constexpr DataPointValueTypeEnum INT32 =
    Datapoint_DataPointValueTypeEnum_INT32;
  static constexpr DataPointValueTypeEnum INT64 =
    Datapoint_DataPointValueTypeEnum_INT64;
  static constexpr DataPointValueTypeEnum UINT32 =
    Datapoint_DataPointValueTypeEnum_UINT32;
  static constexpr DataPointValueTypeEnum UINT64 =
    Datapoint_DataPointValueTypeEnum_UINT64;
  static constexpr DataPointValueTypeEnum SINT32 =
    Datapoint_DataPointValueTypeEnum_SINT32;
  static constexpr DataPointValueTypeEnum SINT64 =
    Datapoint_DataPointValueTypeEnum_SINT64;
  static constexpr DataPointValueTypeEnum FIXED32 =
    Datapoint_DataPointValueTypeEnum_FIXED32;
  static constexpr DataPointValueTypeEnum FIXED64 =
    Datapoint_DataPointValueTypeEnum_FIXED64;
  static constexpr DataPointValueTypeEnum SFIXED32 =
    Datapoint_DataPointValueTypeEnum_SFIXED32;
  static constexpr DataPointValueTypeEnum SFIXED64 =
    Datapoint_DataPointValueTypeEnum_SFIXED64;
  static constexpr DataPointValueTypeEnum BOOL =
    Datapoint_DataPointValueTypeEnum_BOOL;
  static constexpr DataPointValueTypeEnum STRING =
    Datapoint_DataPointValueTypeEnum_STRING;
  static constexpr DataPointValueTypeEnum BYTES =
    Datapoint_DataPointValueTypeEnum_BYTES;
  static inline bool DataPointValueTypeEnum_IsValid(int value) {
    return Datapoint_DataPointValueTypeEnum_IsValid(value);
  }
  static constexpr DataPointValueTypeEnum DataPointValueTypeEnum_MIN =
    Datapoint_DataPointValueTypeEnum_DataPointValueTypeEnum_MIN;
  static constexpr DataPointValueTypeEnum DataPointValueTypeEnum_MAX =
    Datapoint_DataPointValueTypeEnum_DataPointValueTypeEnum_MAX;
  static constexpr int DataPointValueTypeEnum_ARRAYSIZE =
    Datapoint_DataPointValueTypeEnum_DataPointValueTypeEnum_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  DataPointValueTypeEnum_descriptor() {
    return Datapoint_DataPointValueTypeEnum_descriptor();
  }
  template<typename T>
  static inline const std::string& DataPointValueTypeEnum_Name(T enum_t_value) {
    static_assert(::std::is_same<T, DataPointValueTypeEnum>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function DataPointValueTypeEnum_Name.");
    return Datapoint_DataPointValueTypeEnum_Name(enum_t_value);
  }
  static inline bool DataPointValueTypeEnum_Parse(const std::string& name,
      DataPointValueTypeEnum* value) {
    return Datapoint_DataPointValueTypeEnum_Parse(name, value);
  }

  typedef Datapoint_RelativeDataValueCaptureEnum RelativeDataValueCaptureEnum;
  static constexpr RelativeDataValueCaptureEnum NOT_RELATIVE =
    Datapoint_RelativeDataValueCaptureEnum_NOT_RELATIVE;
  static constexpr RelativeDataValueCaptureEnum RELATIVE_WRT_FILE =
    Datapoint_RelativeDataValueCaptureEnum_RELATIVE_WRT_FILE;
  static constexpr RelativeDataValueCaptureEnum RELATIVE_WRT_RVID =
    Datapoint_RelativeDataValueCaptureEnum_RELATIVE_WRT_RVID;
  static constexpr RelativeDataValueCaptureEnum RELATIVE_WRT_SESSIONID =
    Datapoint_RelativeDataValueCaptureEnum_RELATIVE_WRT_SESSIONID;
  static inline bool RelativeDataValueCaptureEnum_IsValid(int value) {
    return Datapoint_RelativeDataValueCaptureEnum_IsValid(value);
  }
  static constexpr RelativeDataValueCaptureEnum RelativeDataValueCaptureEnum_MIN =
    Datapoint_RelativeDataValueCaptureEnum_RelativeDataValueCaptureEnum_MIN;
  static constexpr RelativeDataValueCaptureEnum RelativeDataValueCaptureEnum_MAX =
    Datapoint_RelativeDataValueCaptureEnum_RelativeDataValueCaptureEnum_MAX;
  static constexpr int RelativeDataValueCaptureEnum_ARRAYSIZE =
    Datapoint_RelativeDataValueCaptureEnum_RelativeDataValueCaptureEnum_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  RelativeDataValueCaptureEnum_descriptor() {
    return Datapoint_RelativeDataValueCaptureEnum_descriptor();
  }
  template<typename T>
  static inline const std::string& RelativeDataValueCaptureEnum_Name(T enum_t_value) {
    static_assert(::std::is_same<T, RelativeDataValueCaptureEnum>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function RelativeDataValueCaptureEnum_Name.");
    return Datapoint_RelativeDataValueCaptureEnum_Name(enum_t_value);
  }
  static inline bool RelativeDataValueCaptureEnum_Parse(const std::string& name,
      RelativeDataValueCaptureEnum* value) {
    return Datapoint_RelativeDataValueCaptureEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kSlugFieldNumber = 18,
    kListOfSNAFieldNumber = 20,
    kRawValueFilterFieldNumber = 22,
    kDataPointFieldTypeFieldNumber = 14,
    kMinNumberOfInstancesFieldNumber = 16,
    kRelativeDataValueCaptureFieldNumber = 17,
    kFilterSnaFieldNumber = 13,
    kFilterRawValueCustomFieldNumber = 21,
    kDefaultSignalFieldNumber = 1,
    kCanSignalFieldNumber = 2,
    kLinSignalFieldNumber = 3,
    kEthernetSignalFieldNumber = 4,
    kNetworkSignalFieldNumber = 5,
    kInternalSignalFieldNumber = 6,
    kProcessingToolboxSignalFieldNumber = 7,
    kThriftmeSignalFieldNumber = 8,
    kCollectdFieldNumber = 10,
    kEelsourceFieldNumber = 19,
    kThriftmeActiveFieldNumber = 23,
  };
  // string slug = 18;
  void clear_slug();
  const std::string& slug() const;
  void set_slug(const std::string& value);
  void set_slug(std::string&& value);
  void set_slug(const char* value);
  void set_slug(const char* value, size_t size);
  std::string* mutable_slug();
  std::string* release_slug();
  void set_allocated_slug(std::string* slug);
  private:
  const std::string& _internal_slug() const;
  void _internal_set_slug(const std::string& value);
  std::string* _internal_mutable_slug();
  public:

  // .data_collection_configuration_request.ListOfSNA list_of_SNA = 20;
  bool has_list_of_sna() const;
  private:
  bool _internal_has_list_of_sna() const;
  public:
  void clear_list_of_sna();
  const ::data_collection_configuration_request::ListOfSNA& list_of_sna() const;
  ::data_collection_configuration_request::ListOfSNA* release_list_of_sna();
  ::data_collection_configuration_request::ListOfSNA* mutable_list_of_sna();
  void set_allocated_list_of_sna(::data_collection_configuration_request::ListOfSNA* list_of_sna);
  private:
  const ::data_collection_configuration_request::ListOfSNA& _internal_list_of_sna() const;
  ::data_collection_configuration_request::ListOfSNA* _internal_mutable_list_of_sna();
  public:

  // .data_collection_configuration_request.RawValueFilter raw_value_filter = 22;
  bool has_raw_value_filter() const;
  private:
  bool _internal_has_raw_value_filter() const;
  public:
  void clear_raw_value_filter();
  const ::data_collection_configuration_request::RawValueFilter& raw_value_filter() const;
  ::data_collection_configuration_request::RawValueFilter* release_raw_value_filter();
  ::data_collection_configuration_request::RawValueFilter* mutable_raw_value_filter();
  void set_allocated_raw_value_filter(::data_collection_configuration_request::RawValueFilter* raw_value_filter);
  private:
  const ::data_collection_configuration_request::RawValueFilter& _internal_raw_value_filter() const;
  ::data_collection_configuration_request::RawValueFilter* _internal_mutable_raw_value_filter();
  public:

  // .data_collection_configuration_request.Datapoint.DataPointValueTypeEnum data_point_field_type = 14;
  void clear_data_point_field_type();
  ::data_collection_configuration_request::Datapoint_DataPointValueTypeEnum data_point_field_type() const;
  void set_data_point_field_type(::data_collection_configuration_request::Datapoint_DataPointValueTypeEnum value);
  private:
  ::data_collection_configuration_request::Datapoint_DataPointValueTypeEnum _internal_data_point_field_type() const;
  void _internal_set_data_point_field_type(::data_collection_configuration_request::Datapoint_DataPointValueTypeEnum value);
  public:

  // uint32 min_number_of_instances = 16;
  void clear_min_number_of_instances();
  ::PROTOBUF_NAMESPACE_ID::uint32 min_number_of_instances() const;
  void set_min_number_of_instances(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_min_number_of_instances() const;
  void _internal_set_min_number_of_instances(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .data_collection_configuration_request.Datapoint.RelativeDataValueCaptureEnum relative_data_value_capture = 17;
  void clear_relative_data_value_capture();
  ::data_collection_configuration_request::Datapoint_RelativeDataValueCaptureEnum relative_data_value_capture() const;
  void set_relative_data_value_capture(::data_collection_configuration_request::Datapoint_RelativeDataValueCaptureEnum value);
  private:
  ::data_collection_configuration_request::Datapoint_RelativeDataValueCaptureEnum _internal_relative_data_value_capture() const;
  void _internal_set_relative_data_value_capture(::data_collection_configuration_request::Datapoint_RelativeDataValueCaptureEnum value);
  public:

  // bool filter_sna = 13;
  void clear_filter_sna();
  bool filter_sna() const;
  void set_filter_sna(bool value);
  private:
  bool _internal_filter_sna() const;
  void _internal_set_filter_sna(bool value);
  public:

  // bool filter_raw_value_custom = 21;
  void clear_filter_raw_value_custom();
  bool filter_raw_value_custom() const;
  void set_filter_raw_value_custom(bool value);
  private:
  bool _internal_filter_raw_value_custom() const;
  void _internal_set_filter_raw_value_custom(bool value);
  public:

  // .signal_source_definition.DefaultSource default_signal = 1;
  bool has_default_signal() const;
  private:
  bool _internal_has_default_signal() const;
  public:
  void clear_default_signal();
  const ::signal_source_definition::DefaultSource& default_signal() const;
  ::signal_source_definition::DefaultSource* release_default_signal();
  ::signal_source_definition::DefaultSource* mutable_default_signal();
  void set_allocated_default_signal(::signal_source_definition::DefaultSource* default_signal);
  private:
  const ::signal_source_definition::DefaultSource& _internal_default_signal() const;
  ::signal_source_definition::DefaultSource* _internal_mutable_default_signal();
  public:

  // .signal_source_definition.CanSource can_signal = 2;
  bool has_can_signal() const;
  private:
  bool _internal_has_can_signal() const;
  public:
  void clear_can_signal();
  const ::signal_source_definition::CanSource& can_signal() const;
  ::signal_source_definition::CanSource* release_can_signal();
  ::signal_source_definition::CanSource* mutable_can_signal();
  void set_allocated_can_signal(::signal_source_definition::CanSource* can_signal);
  private:
  const ::signal_source_definition::CanSource& _internal_can_signal() const;
  ::signal_source_definition::CanSource* _internal_mutable_can_signal();
  public:

  // .signal_source_definition.LinSource lin_signal = 3;
  bool has_lin_signal() const;
  private:
  bool _internal_has_lin_signal() const;
  public:
  void clear_lin_signal();
  const ::signal_source_definition::LinSource& lin_signal() const;
  ::signal_source_definition::LinSource* release_lin_signal();
  ::signal_source_definition::LinSource* mutable_lin_signal();
  void set_allocated_lin_signal(::signal_source_definition::LinSource* lin_signal);
  private:
  const ::signal_source_definition::LinSource& _internal_lin_signal() const;
  ::signal_source_definition::LinSource* _internal_mutable_lin_signal();
  public:

  // .signal_source_definition.EthernetSource ethernet_signal = 4;
  bool has_ethernet_signal() const;
  private:
  bool _internal_has_ethernet_signal() const;
  public:
  void clear_ethernet_signal();
  const ::signal_source_definition::EthernetSource& ethernet_signal() const;
  ::signal_source_definition::EthernetSource* release_ethernet_signal();
  ::signal_source_definition::EthernetSource* mutable_ethernet_signal();
  void set_allocated_ethernet_signal(::signal_source_definition::EthernetSource* ethernet_signal);
  private:
  const ::signal_source_definition::EthernetSource& _internal_ethernet_signal() const;
  ::signal_source_definition::EthernetSource* _internal_mutable_ethernet_signal();
  public:

  // .signal_source_definition.NetworkSource network_signal = 5;
  bool has_network_signal() const;
  private:
  bool _internal_has_network_signal() const;
  public:
  void clear_network_signal();
  const ::signal_source_definition::NetworkSource& network_signal() const;
  ::signal_source_definition::NetworkSource* release_network_signal();
  ::signal_source_definition::NetworkSource* mutable_network_signal();
  void set_allocated_network_signal(::signal_source_definition::NetworkSource* network_signal);
  private:
  const ::signal_source_definition::NetworkSource& _internal_network_signal() const;
  ::signal_source_definition::NetworkSource* _internal_mutable_network_signal();
  public:

  // .signal_source_definition.InternalSource internal_signal = 6;
  bool has_internal_signal() const;
  private:
  bool _internal_has_internal_signal() const;
  public:
  void clear_internal_signal();
  const ::signal_source_definition::InternalSource& internal_signal() const;
  ::signal_source_definition::InternalSource* release_internal_signal();
  ::signal_source_definition::InternalSource* mutable_internal_signal();
  void set_allocated_internal_signal(::signal_source_definition::InternalSource* internal_signal);
  private:
  const ::signal_source_definition::InternalSource& _internal_internal_signal() const;
  ::signal_source_definition::InternalSource* _internal_mutable_internal_signal();
  public:

  // .data_collection_configuration_request.Processing_Toolbox_Definition processing_toolbox_signal = 7;
  bool has_processing_toolbox_signal() const;
  private:
  bool _internal_has_processing_toolbox_signal() const;
  public:
  void clear_processing_toolbox_signal();
  const ::data_collection_configuration_request::Processing_Toolbox_Definition& processing_toolbox_signal() const;
  ::data_collection_configuration_request::Processing_Toolbox_Definition* release_processing_toolbox_signal();
  ::data_collection_configuration_request::Processing_Toolbox_Definition* mutable_processing_toolbox_signal();
  void set_allocated_processing_toolbox_signal(::data_collection_configuration_request::Processing_Toolbox_Definition* processing_toolbox_signal);
  private:
  const ::data_collection_configuration_request::Processing_Toolbox_Definition& _internal_processing_toolbox_signal() const;
  ::data_collection_configuration_request::Processing_Toolbox_Definition* _internal_mutable_processing_toolbox_signal();
  public:

  // .signal_source_definition.ThriftmeSource thriftme_signal = 8;
  bool has_thriftme_signal() const;
  private:
  bool _internal_has_thriftme_signal() const;
  public:
  void clear_thriftme_signal();
  const ::signal_source_definition::ThriftmeSource& thriftme_signal() const;
  ::signal_source_definition::ThriftmeSource* release_thriftme_signal();
  ::signal_source_definition::ThriftmeSource* mutable_thriftme_signal();
  void set_allocated_thriftme_signal(::signal_source_definition::ThriftmeSource* thriftme_signal);
  private:
  const ::signal_source_definition::ThriftmeSource& _internal_thriftme_signal() const;
  ::signal_source_definition::ThriftmeSource* _internal_mutable_thriftme_signal();
  public:

  // .signal_source_definition.CollectdSource collectd = 10;
  bool has_collectd() const;
  private:
  bool _internal_has_collectd() const;
  public:
  void clear_collectd();
  const ::signal_source_definition::CollectdSource& collectd() const;
  ::signal_source_definition::CollectdSource* release_collectd();
  ::signal_source_definition::CollectdSource* mutable_collectd();
  void set_allocated_collectd(::signal_source_definition::CollectdSource* collectd);
  private:
  const ::signal_source_definition::CollectdSource& _internal_collectd() const;
  ::signal_source_definition::CollectdSource* _internal_mutable_collectd();
  public:

  // .signal_source_definition.EELSource eelsource = 19;
  bool has_eelsource() const;
  private:
  bool _internal_has_eelsource() const;
  public:
  void clear_eelsource();
  const ::signal_source_definition::EELSource& eelsource() const;
  ::signal_source_definition::EELSource* release_eelsource();
  ::signal_source_definition::EELSource* mutable_eelsource();
  void set_allocated_eelsource(::signal_source_definition::EELSource* eelsource);
  private:
  const ::signal_source_definition::EELSource& _internal_eelsource() const;
  ::signal_source_definition::EELSource* _internal_mutable_eelsource();
  public:

  // .signal_source_definition.ThriftmeSourceActive thriftme_active = 23;
  bool has_thriftme_active() const;
  private:
  bool _internal_has_thriftme_active() const;
  public:
  void clear_thriftme_active();
  const ::signal_source_definition::ThriftmeSourceActive& thriftme_active() const;
  ::signal_source_definition::ThriftmeSourceActive* release_thriftme_active();
  ::signal_source_definition::ThriftmeSourceActive* mutable_thriftme_active();
  void set_allocated_thriftme_active(::signal_source_definition::ThriftmeSourceActive* thriftme_active);
  private:
  const ::signal_source_definition::ThriftmeSourceActive& _internal_thriftme_active() const;
  ::signal_source_definition::ThriftmeSourceActive* _internal_mutable_thriftme_active();
  public:

  void clear_signal_definition();
  SignalDefinitionCase signal_definition_case() const;
  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.Datapoint)
 private:
  class _Internal;
  void set_has_default_signal();
  void set_has_can_signal();
  void set_has_lin_signal();
  void set_has_ethernet_signal();
  void set_has_network_signal();
  void set_has_internal_signal();
  void set_has_processing_toolbox_signal();
  void set_has_thriftme_signal();
  void set_has_collectd();
  void set_has_eelsource();
  void set_has_thriftme_active();

  inline bool has_signal_definition() const;
  inline void clear_has_signal_definition();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr slug_;
  ::data_collection_configuration_request::ListOfSNA* list_of_sna_;
  ::data_collection_configuration_request::RawValueFilter* raw_value_filter_;
  int data_point_field_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 min_number_of_instances_;
  int relative_data_value_capture_;
  bool filter_sna_;
  bool filter_raw_value_custom_;
  union SignalDefinitionUnion {
    SignalDefinitionUnion() {}
    ::signal_source_definition::DefaultSource* default_signal_;
    ::signal_source_definition::CanSource* can_signal_;
    ::signal_source_definition::LinSource* lin_signal_;
    ::signal_source_definition::EthernetSource* ethernet_signal_;
    ::signal_source_definition::NetworkSource* network_signal_;
    ::signal_source_definition::InternalSource* internal_signal_;
    ::data_collection_configuration_request::Processing_Toolbox_Definition* processing_toolbox_signal_;
    ::signal_source_definition::ThriftmeSource* thriftme_signal_;
    ::signal_source_definition::CollectdSource* collectd_;
    ::signal_source_definition::EELSource* eelsource_;
    ::signal_source_definition::ThriftmeSourceActive* thriftme_active_;
  } signal_definition_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class Processing_Toolbox_Definition :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.Processing_Toolbox_Definition) */ {
 public:
  Processing_Toolbox_Definition();
  virtual ~Processing_Toolbox_Definition();

  Processing_Toolbox_Definition(const Processing_Toolbox_Definition& from);
  Processing_Toolbox_Definition(Processing_Toolbox_Definition&& from) noexcept
    : Processing_Toolbox_Definition() {
    *this = ::std::move(from);
  }

  inline Processing_Toolbox_Definition& operator=(const Processing_Toolbox_Definition& from) {
    CopyFrom(from);
    return *this;
  }
  inline Processing_Toolbox_Definition& operator=(Processing_Toolbox_Definition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Processing_Toolbox_Definition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Processing_Toolbox_Definition* internal_default_instance() {
    return reinterpret_cast<const Processing_Toolbox_Definition*>(
               &_Processing_Toolbox_Definition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(Processing_Toolbox_Definition& a, Processing_Toolbox_Definition& b) {
    a.Swap(&b);
  }
  inline void Swap(Processing_Toolbox_Definition* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Processing_Toolbox_Definition* New() const final {
    return CreateMaybeMessage<Processing_Toolbox_Definition>(nullptr);
  }

  Processing_Toolbox_Definition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Processing_Toolbox_Definition>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Processing_Toolbox_Definition& from);
  void MergeFrom(const Processing_Toolbox_Definition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Processing_Toolbox_Definition* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.Processing_Toolbox_Definition";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kToolInputParameterFieldNumber = 2,
    kProcessingToolboxSignalDefFieldNumber = 1,
  };
  // repeated .data_collection_configuration_request.ToolInputParameter tool_input_parameter = 2;
  int tool_input_parameter_size() const;
  private:
  int _internal_tool_input_parameter_size() const;
  public:
  void clear_tool_input_parameter();
  ::data_collection_configuration_request::ToolInputParameter* mutable_tool_input_parameter(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::ToolInputParameter >*
      mutable_tool_input_parameter();
  private:
  const ::data_collection_configuration_request::ToolInputParameter& _internal_tool_input_parameter(int index) const;
  ::data_collection_configuration_request::ToolInputParameter* _internal_add_tool_input_parameter();
  public:
  const ::data_collection_configuration_request::ToolInputParameter& tool_input_parameter(int index) const;
  ::data_collection_configuration_request::ToolInputParameter* add_tool_input_parameter();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::ToolInputParameter >&
      tool_input_parameter() const;

  // .signal_source_definition.ProcessingToolboxSource processing_toolbox_signal_def = 1;
  bool has_processing_toolbox_signal_def() const;
  private:
  bool _internal_has_processing_toolbox_signal_def() const;
  public:
  void clear_processing_toolbox_signal_def();
  const ::signal_source_definition::ProcessingToolboxSource& processing_toolbox_signal_def() const;
  ::signal_source_definition::ProcessingToolboxSource* release_processing_toolbox_signal_def();
  ::signal_source_definition::ProcessingToolboxSource* mutable_processing_toolbox_signal_def();
  void set_allocated_processing_toolbox_signal_def(::signal_source_definition::ProcessingToolboxSource* processing_toolbox_signal_def);
  private:
  const ::signal_source_definition::ProcessingToolboxSource& _internal_processing_toolbox_signal_def() const;
  ::signal_source_definition::ProcessingToolboxSource* _internal_mutable_processing_toolbox_signal_def();
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.Processing_Toolbox_Definition)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::ToolInputParameter > tool_input_parameter_;
  ::signal_source_definition::ProcessingToolboxSource* processing_toolbox_signal_def_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class ToolInputParameter :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.ToolInputParameter) */ {
 public:
  ToolInputParameter();
  virtual ~ToolInputParameter();

  ToolInputParameter(const ToolInputParameter& from);
  ToolInputParameter(ToolInputParameter&& from) noexcept
    : ToolInputParameter() {
    *this = ::std::move(from);
  }

  inline ToolInputParameter& operator=(const ToolInputParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ToolInputParameter& operator=(ToolInputParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ToolInputParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ToolInputParameter* internal_default_instance() {
    return reinterpret_cast<const ToolInputParameter*>(
               &_ToolInputParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(ToolInputParameter& a, ToolInputParameter& b) {
    a.Swap(&b);
  }
  inline void Swap(ToolInputParameter* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ToolInputParameter* New() const final {
    return CreateMaybeMessage<ToolInputParameter>(nullptr);
  }

  ToolInputParameter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ToolInputParameter>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ToolInputParameter& from);
  void MergeFrom(const ToolInputParameter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ToolInputParameter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.ToolInputParameter";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDprFieldNumber = 3,
    kInputFieldNumber = 1,
    kDataPointsConfigurationFieldNumber = 4,
    kDpiTypeFieldNumber = 2,
  };
  // string dpr = 3;
  void clear_dpr();
  const std::string& dpr() const;
  void set_dpr(const std::string& value);
  void set_dpr(std::string&& value);
  void set_dpr(const char* value);
  void set_dpr(const char* value, size_t size);
  std::string* mutable_dpr();
  std::string* release_dpr();
  void set_allocated_dpr(std::string* dpr);
  private:
  const std::string& _internal_dpr() const;
  void _internal_set_dpr(const std::string& value);
  std::string* _internal_mutable_dpr();
  public:

  // .data_collection_configuration_request.Datapoint input = 1;
  bool has_input() const;
  private:
  bool _internal_has_input() const;
  public:
  void clear_input();
  const ::data_collection_configuration_request::Datapoint& input() const;
  ::data_collection_configuration_request::Datapoint* release_input();
  ::data_collection_configuration_request::Datapoint* mutable_input();
  void set_allocated_input(::data_collection_configuration_request::Datapoint* input);
  private:
  const ::data_collection_configuration_request::Datapoint& _internal_input() const;
  ::data_collection_configuration_request::Datapoint* _internal_mutable_input();
  public:

  // .data_collection_configuration_request.DatapointsConfiguration data_points_configuration = 4;
  bool has_data_points_configuration() const;
  private:
  bool _internal_has_data_points_configuration() const;
  public:
  void clear_data_points_configuration();
  const ::data_collection_configuration_request::DatapointsConfiguration& data_points_configuration() const;
  ::data_collection_configuration_request::DatapointsConfiguration* release_data_points_configuration();
  ::data_collection_configuration_request::DatapointsConfiguration* mutable_data_points_configuration();
  void set_allocated_data_points_configuration(::data_collection_configuration_request::DatapointsConfiguration* data_points_configuration);
  private:
  const ::data_collection_configuration_request::DatapointsConfiguration& _internal_data_points_configuration() const;
  ::data_collection_configuration_request::DatapointsConfiguration* _internal_mutable_data_points_configuration();
  public:

  // int32 dpi_type = 2;
  void clear_dpi_type();
  ::PROTOBUF_NAMESPACE_ID::int32 dpi_type() const;
  void set_dpi_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dpi_type() const;
  void _internal_set_dpi_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.ToolInputParameter)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dpr_;
  ::data_collection_configuration_request::Datapoint* input_;
  ::data_collection_configuration_request::DatapointsConfiguration* data_points_configuration_;
  ::PROTOBUF_NAMESPACE_ID::int32 dpi_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class DatapointsConfiguration :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.DatapointsConfiguration) */ {
 public:
  DatapointsConfiguration();
  virtual ~DatapointsConfiguration();

  DatapointsConfiguration(const DatapointsConfiguration& from);
  DatapointsConfiguration(DatapointsConfiguration&& from) noexcept
    : DatapointsConfiguration() {
    *this = ::std::move(from);
  }

  inline DatapointsConfiguration& operator=(const DatapointsConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  inline DatapointsConfiguration& operator=(DatapointsConfiguration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DatapointsConfiguration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DatapointsConfiguration* internal_default_instance() {
    return reinterpret_cast<const DatapointsConfiguration*>(
               &_DatapointsConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(DatapointsConfiguration& a, DatapointsConfiguration& b) {
    a.Swap(&b);
  }
  inline void Swap(DatapointsConfiguration* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DatapointsConfiguration* New() const final {
    return CreateMaybeMessage<DatapointsConfiguration>(nullptr);
  }

  DatapointsConfiguration* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DatapointsConfiguration>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DatapointsConfiguration& from);
  void MergeFrom(const DatapointsConfiguration& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DatapointsConfiguration* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.DatapointsConfiguration";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventTriggerFieldNumber = 1,
    kCollectionTriggerOperatorFieldNumber = 2,
  };
  // repeated .data_collection_configuration_request.Trigger event_trigger = 1;
  int event_trigger_size() const;
  private:
  int _internal_event_trigger_size() const;
  public:
  void clear_event_trigger();
  ::data_collection_configuration_request::Trigger* mutable_event_trigger(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Trigger >*
      mutable_event_trigger();
  private:
  const ::data_collection_configuration_request::Trigger& _internal_event_trigger(int index) const;
  ::data_collection_configuration_request::Trigger* _internal_add_event_trigger();
  public:
  const ::data_collection_configuration_request::Trigger& event_trigger(int index) const;
  ::data_collection_configuration_request::Trigger* add_event_trigger();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Trigger >&
      event_trigger() const;

  // .data_collection_configuration_request.LogicalOperatorEnum collection_trigger_operator = 2;
  void clear_collection_trigger_operator();
  ::data_collection_configuration_request::LogicalOperatorEnum collection_trigger_operator() const;
  void set_collection_trigger_operator(::data_collection_configuration_request::LogicalOperatorEnum value);
  private:
  ::data_collection_configuration_request::LogicalOperatorEnum _internal_collection_trigger_operator() const;
  void _internal_set_collection_trigger_operator(::data_collection_configuration_request::LogicalOperatorEnum value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.DatapointsConfiguration)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Trigger > event_trigger_;
  int collection_trigger_operator_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class RvidEffectivePeriod :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.RvidEffectivePeriod) */ {
 public:
  RvidEffectivePeriod();
  virtual ~RvidEffectivePeriod();

  RvidEffectivePeriod(const RvidEffectivePeriod& from);
  RvidEffectivePeriod(RvidEffectivePeriod&& from) noexcept
    : RvidEffectivePeriod() {
    *this = ::std::move(from);
  }

  inline RvidEffectivePeriod& operator=(const RvidEffectivePeriod& from) {
    CopyFrom(from);
    return *this;
  }
  inline RvidEffectivePeriod& operator=(RvidEffectivePeriod&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RvidEffectivePeriod& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RvidEffectivePeriod* internal_default_instance() {
    return reinterpret_cast<const RvidEffectivePeriod*>(
               &_RvidEffectivePeriod_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(RvidEffectivePeriod& a, RvidEffectivePeriod& b) {
    a.Swap(&b);
  }
  inline void Swap(RvidEffectivePeriod* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RvidEffectivePeriod* New() const final {
    return CreateMaybeMessage<RvidEffectivePeriod>(nullptr);
  }

  RvidEffectivePeriod* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RvidEffectivePeriod>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RvidEffectivePeriod& from);
  void MergeFrom(const RvidEffectivePeriod& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RvidEffectivePeriod* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.RvidEffectivePeriod";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRvidEffectivePeriodRangeMinSecondsFieldNumber = 1,
    kRvidEffectivePeriodRangeMaxSecondsFieldNumber = 2,
  };
  // uint32 rvid_effective_period_range_min_seconds = 1;
  void clear_rvid_effective_period_range_min_seconds();
  ::PROTOBUF_NAMESPACE_ID::uint32 rvid_effective_period_range_min_seconds() const;
  void set_rvid_effective_period_range_min_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rvid_effective_period_range_min_seconds() const;
  void _internal_set_rvid_effective_period_range_min_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 rvid_effective_period_range_max_seconds = 2;
  void clear_rvid_effective_period_range_max_seconds();
  ::PROTOBUF_NAMESPACE_ID::uint32 rvid_effective_period_range_max_seconds() const;
  void set_rvid_effective_period_range_max_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rvid_effective_period_range_max_seconds() const;
  void _internal_set_rvid_effective_period_range_max_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.RvidEffectivePeriod)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rvid_effective_period_range_min_seconds_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rvid_effective_period_range_max_seconds_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class DataPackageTimeToLive :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.DataPackageTimeToLive) */ {
 public:
  DataPackageTimeToLive();
  virtual ~DataPackageTimeToLive();

  DataPackageTimeToLive(const DataPackageTimeToLive& from);
  DataPackageTimeToLive(DataPackageTimeToLive&& from) noexcept
    : DataPackageTimeToLive() {
    *this = ::std::move(from);
  }

  inline DataPackageTimeToLive& operator=(const DataPackageTimeToLive& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataPackageTimeToLive& operator=(DataPackageTimeToLive&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DataPackageTimeToLive& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataPackageTimeToLive* internal_default_instance() {
    return reinterpret_cast<const DataPackageTimeToLive*>(
               &_DataPackageTimeToLive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(DataPackageTimeToLive& a, DataPackageTimeToLive& b) {
    a.Swap(&b);
  }
  inline void Swap(DataPackageTimeToLive* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataPackageTimeToLive* New() const final {
    return CreateMaybeMessage<DataPackageTimeToLive>(nullptr);
  }

  DataPackageTimeToLive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataPackageTimeToLive>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DataPackageTimeToLive& from);
  void MergeFrom(const DataPackageTimeToLive& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataPackageTimeToLive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.DataPackageTimeToLive";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataPackageTimeToLiveMinSFieldNumber = 1,
    kDataPackageTimeToLiveMaxSFieldNumber = 2,
  };
  // uint32 data_package_time_to_live_min_s = 1;
  void clear_data_package_time_to_live_min_s();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_package_time_to_live_min_s() const;
  void set_data_package_time_to_live_min_s(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_package_time_to_live_min_s() const;
  void _internal_set_data_package_time_to_live_min_s(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_package_time_to_live_max_s = 2;
  void clear_data_package_time_to_live_max_s();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_package_time_to_live_max_s() const;
  void set_data_package_time_to_live_max_s(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_package_time_to_live_max_s() const;
  void _internal_set_data_package_time_to_live_max_s(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.DataPackageTimeToLive)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_package_time_to_live_min_s_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_package_time_to_live_max_s_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class DataCollectionJob_JobConfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.DataCollectionJob.JobConfig) */ {
 public:
  DataCollectionJob_JobConfig();
  virtual ~DataCollectionJob_JobConfig();

  DataCollectionJob_JobConfig(const DataCollectionJob_JobConfig& from);
  DataCollectionJob_JobConfig(DataCollectionJob_JobConfig&& from) noexcept
    : DataCollectionJob_JobConfig() {
    *this = ::std::move(from);
  }

  inline DataCollectionJob_JobConfig& operator=(const DataCollectionJob_JobConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataCollectionJob_JobConfig& operator=(DataCollectionJob_JobConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DataCollectionJob_JobConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataCollectionJob_JobConfig* internal_default_instance() {
    return reinterpret_cast<const DataCollectionJob_JobConfig*>(
               &_DataCollectionJob_JobConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(DataCollectionJob_JobConfig& a, DataCollectionJob_JobConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(DataCollectionJob_JobConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataCollectionJob_JobConfig* New() const final {
    return CreateMaybeMessage<DataCollectionJob_JobConfig>(nullptr);
  }

  DataCollectionJob_JobConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataCollectionJob_JobConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DataCollectionJob_JobConfig& from);
  void MergeFrom(const DataCollectionJob_JobConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataCollectionJob_JobConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.DataCollectionJob.JobConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDevicePropertiesFieldNumber = 26,
    kDebugInformationFieldNumber = 27,
    kJobUuidFieldNumber = 1,
    kRvidEffectivePeriodRangeFieldNumber = 2,
    kStartupDelayFieldNumber = 13,
    kEndPointUncertainityFieldNumber = 14,
    kDataRecordingGapFieldNumber = 15,
    kAbsoluteTimeOffsetFieldNumber = 16,
    kJobFormatVersionFieldNumber = 17,
    kDataPackageTimeToLiveSFieldNumber = 28,
    kNossgAllowedFieldNumber = 3,
    kActiveThriftIntervalMsFieldNumber = 5,
    kActiveThriftRetryMsFieldNumber = 6,
    kActiveThriftConnectTimeoutMsFieldNumber = 7,
    kActiveThriftResponseTimeoutMsFieldNumber = 8,
    kUploadIntervalFieldNumber = 9,
    kStfBufferSizeFieldNumber = 10,
    kEnableActiveThriftFieldNumber = 4,
    kRecordVinFieldNumber = 11,
    kPersistRequestFieldNumber = 12,
    kRecordTzoffsetFieldNumber = 19,
    kRelativeTimeStampCaptureFieldNumber = 18,
    kRecordFileCounterFieldNumber = 20,
    kRecordSessionIdFieldNumber = 21,
    kRecordRvidFieldNumber = 22,
    kRecordEcuInfoFieldNumber = 23,
    kRecordMarketInfoFieldNumber = 24,
    kJobPriorityFieldNumber = 25,
    kUploadChannelFieldNumber = 29,
  };
  // repeated .request_format.data_types.KeyValuePair device_properties = 26;
  int device_properties_size() const;
  private:
  int _internal_device_properties_size() const;
  public:
  void clear_device_properties();
  ::request_format::data_types::KeyValuePair* mutable_device_properties(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::request_format::data_types::KeyValuePair >*
      mutable_device_properties();
  private:
  const ::request_format::data_types::KeyValuePair& _internal_device_properties(int index) const;
  ::request_format::data_types::KeyValuePair* _internal_add_device_properties();
  public:
  const ::request_format::data_types::KeyValuePair& device_properties(int index) const;
  ::request_format::data_types::KeyValuePair* add_device_properties();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::request_format::data_types::KeyValuePair >&
      device_properties() const;

  // repeated .request_format.data_types.KeyValuePair debug_information = 27;
  int debug_information_size() const;
  private:
  int _internal_debug_information_size() const;
  public:
  void clear_debug_information();
  ::request_format::data_types::KeyValuePair* mutable_debug_information(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::request_format::data_types::KeyValuePair >*
      mutable_debug_information();
  private:
  const ::request_format::data_types::KeyValuePair& _internal_debug_information(int index) const;
  ::request_format::data_types::KeyValuePair* _internal_add_debug_information();
  public:
  const ::request_format::data_types::KeyValuePair& debug_information(int index) const;
  ::request_format::data_types::KeyValuePair* add_debug_information();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::request_format::data_types::KeyValuePair >&
      debug_information() const;

  // string job_uuid = 1;
  void clear_job_uuid();
  const std::string& job_uuid() const;
  void set_job_uuid(const std::string& value);
  void set_job_uuid(std::string&& value);
  void set_job_uuid(const char* value);
  void set_job_uuid(const char* value, size_t size);
  std::string* mutable_job_uuid();
  std::string* release_job_uuid();
  void set_allocated_job_uuid(std::string* job_uuid);
  private:
  const std::string& _internal_job_uuid() const;
  void _internal_set_job_uuid(const std::string& value);
  std::string* _internal_mutable_job_uuid();
  public:

  // .data_collection_configuration_request.RvidEffectivePeriod rvid_effective_period_range = 2;
  bool has_rvid_effective_period_range() const;
  private:
  bool _internal_has_rvid_effective_period_range() const;
  public:
  void clear_rvid_effective_period_range();
  const ::data_collection_configuration_request::RvidEffectivePeriod& rvid_effective_period_range() const;
  ::data_collection_configuration_request::RvidEffectivePeriod* release_rvid_effective_period_range();
  ::data_collection_configuration_request::RvidEffectivePeriod* mutable_rvid_effective_period_range();
  void set_allocated_rvid_effective_period_range(::data_collection_configuration_request::RvidEffectivePeriod* rvid_effective_period_range);
  private:
  const ::data_collection_configuration_request::RvidEffectivePeriod& _internal_rvid_effective_period_range() const;
  ::data_collection_configuration_request::RvidEffectivePeriod* _internal_mutable_rvid_effective_period_range();
  public:

  // .data_collection_configuration_request.StartUpDelay startup_delay = 13;
  bool has_startup_delay() const;
  private:
  bool _internal_has_startup_delay() const;
  public:
  void clear_startup_delay();
  const ::data_collection_configuration_request::StartUpDelay& startup_delay() const;
  ::data_collection_configuration_request::StartUpDelay* release_startup_delay();
  ::data_collection_configuration_request::StartUpDelay* mutable_startup_delay();
  void set_allocated_startup_delay(::data_collection_configuration_request::StartUpDelay* startup_delay);
  private:
  const ::data_collection_configuration_request::StartUpDelay& _internal_startup_delay() const;
  ::data_collection_configuration_request::StartUpDelay* _internal_mutable_startup_delay();
  public:

  // .data_collection_configuration_request.EndPointUncertainty end_point_uncertainity = 14;
  bool has_end_point_uncertainity() const;
  private:
  bool _internal_has_end_point_uncertainity() const;
  public:
  void clear_end_point_uncertainity();
  const ::data_collection_configuration_request::EndPointUncertainty& end_point_uncertainity() const;
  ::data_collection_configuration_request::EndPointUncertainty* release_end_point_uncertainity();
  ::data_collection_configuration_request::EndPointUncertainty* mutable_end_point_uncertainity();
  void set_allocated_end_point_uncertainity(::data_collection_configuration_request::EndPointUncertainty* end_point_uncertainity);
  private:
  const ::data_collection_configuration_request::EndPointUncertainty& _internal_end_point_uncertainity() const;
  ::data_collection_configuration_request::EndPointUncertainty* _internal_mutable_end_point_uncertainity();
  public:

  // .data_collection_configuration_request.DataRecordingGap data_recording_gap = 15;
  bool has_data_recording_gap() const;
  private:
  bool _internal_has_data_recording_gap() const;
  public:
  void clear_data_recording_gap();
  const ::data_collection_configuration_request::DataRecordingGap& data_recording_gap() const;
  ::data_collection_configuration_request::DataRecordingGap* release_data_recording_gap();
  ::data_collection_configuration_request::DataRecordingGap* mutable_data_recording_gap();
  void set_allocated_data_recording_gap(::data_collection_configuration_request::DataRecordingGap* data_recording_gap);
  private:
  const ::data_collection_configuration_request::DataRecordingGap& _internal_data_recording_gap() const;
  ::data_collection_configuration_request::DataRecordingGap* _internal_mutable_data_recording_gap();
  public:

  // .data_collection_configuration_request.AbsoluteTimeOffset absolute_time_offset = 16;
  bool has_absolute_time_offset() const;
  private:
  bool _internal_has_absolute_time_offset() const;
  public:
  void clear_absolute_time_offset();
  const ::data_collection_configuration_request::AbsoluteTimeOffset& absolute_time_offset() const;
  ::data_collection_configuration_request::AbsoluteTimeOffset* release_absolute_time_offset();
  ::data_collection_configuration_request::AbsoluteTimeOffset* mutable_absolute_time_offset();
  void set_allocated_absolute_time_offset(::data_collection_configuration_request::AbsoluteTimeOffset* absolute_time_offset);
  private:
  const ::data_collection_configuration_request::AbsoluteTimeOffset& _internal_absolute_time_offset() const;
  ::data_collection_configuration_request::AbsoluteTimeOffset* _internal_mutable_absolute_time_offset();
  public:

  // .data_collection_configuration_request.Version job_format_version = 17;
  bool has_job_format_version() const;
  private:
  bool _internal_has_job_format_version() const;
  public:
  void clear_job_format_version();
  const ::data_collection_configuration_request::Version& job_format_version() const;
  ::data_collection_configuration_request::Version* release_job_format_version();
  ::data_collection_configuration_request::Version* mutable_job_format_version();
  void set_allocated_job_format_version(::data_collection_configuration_request::Version* job_format_version);
  private:
  const ::data_collection_configuration_request::Version& _internal_job_format_version() const;
  ::data_collection_configuration_request::Version* _internal_mutable_job_format_version();
  public:

  // .data_collection_configuration_request.DataPackageTimeToLive data_package_time_to_live_s = 28;
  bool has_data_package_time_to_live_s() const;
  private:
  bool _internal_has_data_package_time_to_live_s() const;
  public:
  void clear_data_package_time_to_live_s();
  const ::data_collection_configuration_request::DataPackageTimeToLive& data_package_time_to_live_s() const;
  ::data_collection_configuration_request::DataPackageTimeToLive* release_data_package_time_to_live_s();
  ::data_collection_configuration_request::DataPackageTimeToLive* mutable_data_package_time_to_live_s();
  void set_allocated_data_package_time_to_live_s(::data_collection_configuration_request::DataPackageTimeToLive* data_package_time_to_live_s);
  private:
  const ::data_collection_configuration_request::DataPackageTimeToLive& _internal_data_package_time_to_live_s() const;
  ::data_collection_configuration_request::DataPackageTimeToLive* _internal_mutable_data_package_time_to_live_s();
  public:

  // uint32 nossg_allowed = 3;
  void clear_nossg_allowed();
  ::PROTOBUF_NAMESPACE_ID::uint32 nossg_allowed() const;
  void set_nossg_allowed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_nossg_allowed() const;
  void _internal_set_nossg_allowed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 active_thrift_interval_ms = 5;
  void clear_active_thrift_interval_ms();
  ::PROTOBUF_NAMESPACE_ID::uint32 active_thrift_interval_ms() const;
  void set_active_thrift_interval_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_active_thrift_interval_ms() const;
  void _internal_set_active_thrift_interval_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 active_thrift_retry_ms = 6;
  void clear_active_thrift_retry_ms();
  ::PROTOBUF_NAMESPACE_ID::uint32 active_thrift_retry_ms() const;
  void set_active_thrift_retry_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_active_thrift_retry_ms() const;
  void _internal_set_active_thrift_retry_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 active_thrift_connect_timeout_ms = 7;
  void clear_active_thrift_connect_timeout_ms();
  ::PROTOBUF_NAMESPACE_ID::uint32 active_thrift_connect_timeout_ms() const;
  void set_active_thrift_connect_timeout_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_active_thrift_connect_timeout_ms() const;
  void _internal_set_active_thrift_connect_timeout_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 active_thrift_response_timeout_ms = 8;
  void clear_active_thrift_response_timeout_ms();
  ::PROTOBUF_NAMESPACE_ID::uint32 active_thrift_response_timeout_ms() const;
  void set_active_thrift_response_timeout_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_active_thrift_response_timeout_ms() const;
  void _internal_set_active_thrift_response_timeout_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 upload_interval = 9;
  void clear_upload_interval();
  ::PROTOBUF_NAMESPACE_ID::uint32 upload_interval() const;
  void set_upload_interval(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_upload_interval() const;
  void _internal_set_upload_interval(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 stf_buffer_size = 10;
  void clear_stf_buffer_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 stf_buffer_size() const;
  void set_stf_buffer_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stf_buffer_size() const;
  void _internal_set_stf_buffer_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool enable_active_thrift = 4;
  void clear_enable_active_thrift();
  bool enable_active_thrift() const;
  void set_enable_active_thrift(bool value);
  private:
  bool _internal_enable_active_thrift() const;
  void _internal_set_enable_active_thrift(bool value);
  public:

  // bool record_vin = 11;
  void clear_record_vin();
  bool record_vin() const;
  void set_record_vin(bool value);
  private:
  bool _internal_record_vin() const;
  void _internal_set_record_vin(bool value);
  public:

  // bool persist_request = 12;
  void clear_persist_request();
  bool persist_request() const;
  void set_persist_request(bool value);
  private:
  bool _internal_persist_request() const;
  void _internal_set_persist_request(bool value);
  public:

  // bool record_tzoffset = 19;
  void clear_record_tzoffset();
  bool record_tzoffset() const;
  void set_record_tzoffset(bool value);
  private:
  bool _internal_record_tzoffset() const;
  void _internal_set_record_tzoffset(bool value);
  public:

  // .data_collection_configuration_request.RelativeTimeStampCaptureEnum relative_time_stamp_capture = 18;
  void clear_relative_time_stamp_capture();
  ::data_collection_configuration_request::RelativeTimeStampCaptureEnum relative_time_stamp_capture() const;
  void set_relative_time_stamp_capture(::data_collection_configuration_request::RelativeTimeStampCaptureEnum value);
  private:
  ::data_collection_configuration_request::RelativeTimeStampCaptureEnum _internal_relative_time_stamp_capture() const;
  void _internal_set_relative_time_stamp_capture(::data_collection_configuration_request::RelativeTimeStampCaptureEnum value);
  public:

  // bool record_file_counter = 20;
  void clear_record_file_counter();
  bool record_file_counter() const;
  void set_record_file_counter(bool value);
  private:
  bool _internal_record_file_counter() const;
  void _internal_set_record_file_counter(bool value);
  public:

  // bool record_session_id = 21;
  void clear_record_session_id();
  bool record_session_id() const;
  void set_record_session_id(bool value);
  private:
  bool _internal_record_session_id() const;
  void _internal_set_record_session_id(bool value);
  public:

  // bool record_rvid = 22;
  void clear_record_rvid();
  bool record_rvid() const;
  void set_record_rvid(bool value);
  private:
  bool _internal_record_rvid() const;
  void _internal_set_record_rvid(bool value);
  public:

  // bool record_ecu_info = 23;
  void clear_record_ecu_info();
  bool record_ecu_info() const;
  void set_record_ecu_info(bool value);
  private:
  bool _internal_record_ecu_info() const;
  void _internal_set_record_ecu_info(bool value);
  public:

  // bool record_market_info = 24;
  void clear_record_market_info();
  bool record_market_info() const;
  void set_record_market_info(bool value);
  private:
  bool _internal_record_market_info() const;
  void _internal_set_record_market_info(bool value);
  public:

  // uint32 job_priority = 25;
  void clear_job_priority();
  ::PROTOBUF_NAMESPACE_ID::uint32 job_priority() const;
  void set_job_priority(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_job_priority() const;
  void _internal_set_job_priority(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .data_collection_configuration_request.UploadChannel upload_channel = 29;
  void clear_upload_channel();
  ::data_collection_configuration_request::UploadChannel upload_channel() const;
  void set_upload_channel(::data_collection_configuration_request::UploadChannel value);
  private:
  ::data_collection_configuration_request::UploadChannel _internal_upload_channel() const;
  void _internal_set_upload_channel(::data_collection_configuration_request::UploadChannel value);
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.DataCollectionJob.JobConfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::request_format::data_types::KeyValuePair > device_properties_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::request_format::data_types::KeyValuePair > debug_information_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr job_uuid_;
  ::data_collection_configuration_request::RvidEffectivePeriod* rvid_effective_period_range_;
  ::data_collection_configuration_request::StartUpDelay* startup_delay_;
  ::data_collection_configuration_request::EndPointUncertainty* end_point_uncertainity_;
  ::data_collection_configuration_request::DataRecordingGap* data_recording_gap_;
  ::data_collection_configuration_request::AbsoluteTimeOffset* absolute_time_offset_;
  ::data_collection_configuration_request::Version* job_format_version_;
  ::data_collection_configuration_request::DataPackageTimeToLive* data_package_time_to_live_s_;
  ::PROTOBUF_NAMESPACE_ID::uint32 nossg_allowed_;
  ::PROTOBUF_NAMESPACE_ID::uint32 active_thrift_interval_ms_;
  ::PROTOBUF_NAMESPACE_ID::uint32 active_thrift_retry_ms_;
  ::PROTOBUF_NAMESPACE_ID::uint32 active_thrift_connect_timeout_ms_;
  ::PROTOBUF_NAMESPACE_ID::uint32 active_thrift_response_timeout_ms_;
  ::PROTOBUF_NAMESPACE_ID::uint32 upload_interval_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stf_buffer_size_;
  bool enable_active_thrift_;
  bool record_vin_;
  bool persist_request_;
  bool record_tzoffset_;
  int relative_time_stamp_capture_;
  bool record_file_counter_;
  bool record_session_id_;
  bool record_rvid_;
  bool record_ecu_info_;
  bool record_market_info_;
  ::PROTOBUF_NAMESPACE_ID::uint32 job_priority_;
  int upload_channel_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// -------------------------------------------------------------------

class DataCollectionJob :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:data_collection_configuration_request.DataCollectionJob) */ {
 public:
  DataCollectionJob();
  virtual ~DataCollectionJob();

  DataCollectionJob(const DataCollectionJob& from);
  DataCollectionJob(DataCollectionJob&& from) noexcept
    : DataCollectionJob() {
    *this = ::std::move(from);
  }

  inline DataCollectionJob& operator=(const DataCollectionJob& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataCollectionJob& operator=(DataCollectionJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DataCollectionJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataCollectionJob* internal_default_instance() {
    return reinterpret_cast<const DataCollectionJob*>(
               &_DataCollectionJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(DataCollectionJob& a, DataCollectionJob& b) {
    a.Swap(&b);
  }
  inline void Swap(DataCollectionJob* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataCollectionJob* New() const final {
    return CreateMaybeMessage<DataCollectionJob>(nullptr);
  }

  DataCollectionJob* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataCollectionJob>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DataCollectionJob& from);
  void MergeFrom(const DataCollectionJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataCollectionJob* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "data_collection_configuration_request.DataCollectionJob";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto);
    return ::descriptor_table_data_5fcollection_5fconfiguration_5frequest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef DataCollectionJob_JobConfig JobConfig;

  // accessors -------------------------------------------------------

  enum : int {
    kJobConfigFieldNumber = 1,
    kValidityRestrictionsFieldNumber = 2,
    kActionFieldNumber = 3,
    kTerminationConditionsFieldNumber = 4,
  };
  // .data_collection_configuration_request.DataCollectionJob.JobConfig job_config = 1;
  bool has_job_config() const;
  private:
  bool _internal_has_job_config() const;
  public:
  void clear_job_config();
  const ::data_collection_configuration_request::DataCollectionJob_JobConfig& job_config() const;
  ::data_collection_configuration_request::DataCollectionJob_JobConfig* release_job_config();
  ::data_collection_configuration_request::DataCollectionJob_JobConfig* mutable_job_config();
  void set_allocated_job_config(::data_collection_configuration_request::DataCollectionJob_JobConfig* job_config);
  private:
  const ::data_collection_configuration_request::DataCollectionJob_JobConfig& _internal_job_config() const;
  ::data_collection_configuration_request::DataCollectionJob_JobConfig* _internal_mutable_job_config();
  public:

  // .data_collection_configuration_request.JobValidityRestrictions validity_restrictions = 2;
  bool has_validity_restrictions() const;
  private:
  bool _internal_has_validity_restrictions() const;
  public:
  void clear_validity_restrictions();
  const ::data_collection_configuration_request::JobValidityRestrictions& validity_restrictions() const;
  ::data_collection_configuration_request::JobValidityRestrictions* release_validity_restrictions();
  ::data_collection_configuration_request::JobValidityRestrictions* mutable_validity_restrictions();
  void set_allocated_validity_restrictions(::data_collection_configuration_request::JobValidityRestrictions* validity_restrictions);
  private:
  const ::data_collection_configuration_request::JobValidityRestrictions& _internal_validity_restrictions() const;
  ::data_collection_configuration_request::JobValidityRestrictions* _internal_mutable_validity_restrictions();
  public:

  // .data_collection_configuration_request.CollectionAction action = 3;
  bool has_action() const;
  private:
  bool _internal_has_action() const;
  public:
  void clear_action();
  const ::data_collection_configuration_request::CollectionAction& action() const;
  ::data_collection_configuration_request::CollectionAction* release_action();
  ::data_collection_configuration_request::CollectionAction* mutable_action();
  void set_allocated_action(::data_collection_configuration_request::CollectionAction* action);
  private:
  const ::data_collection_configuration_request::CollectionAction& _internal_action() const;
  ::data_collection_configuration_request::CollectionAction* _internal_mutable_action();
  public:

  // .data_collection_configuration_request.JobTerminationConditions termination_conditions = 4;
  bool has_termination_conditions() const;
  private:
  bool _internal_has_termination_conditions() const;
  public:
  void clear_termination_conditions();
  const ::data_collection_configuration_request::JobTerminationConditions& termination_conditions() const;
  ::data_collection_configuration_request::JobTerminationConditions* release_termination_conditions();
  ::data_collection_configuration_request::JobTerminationConditions* mutable_termination_conditions();
  void set_allocated_termination_conditions(::data_collection_configuration_request::JobTerminationConditions* termination_conditions);
  private:
  const ::data_collection_configuration_request::JobTerminationConditions& _internal_termination_conditions() const;
  ::data_collection_configuration_request::JobTerminationConditions* _internal_mutable_termination_conditions();
  public:

  // @@protoc_insertion_point(class_scope:data_collection_configuration_request.DataCollectionJob)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::data_collection_configuration_request::DataCollectionJob_JobConfig* job_config_;
  ::data_collection_configuration_request::JobValidityRestrictions* validity_restrictions_;
  ::data_collection_configuration_request::CollectionAction* action_;
  ::data_collection_configuration_request::JobTerminationConditions* termination_conditions_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5fcollection_5fconfiguration_5frequest_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Version

// uint32 major = 1;
inline void Version::clear_major() {
  major_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Version::_internal_major() const {
  return major_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Version::major() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Version.major)
  return _internal_major();
}
inline void Version::_internal_set_major(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  major_ = value;
}
inline void Version::set_major(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_major(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.Version.major)
}

// uint32 minor = 2;
inline void Version::clear_minor() {
  minor_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Version::_internal_minor() const {
  return minor_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Version::minor() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Version.minor)
  return _internal_minor();
}
inline void Version::_internal_set_minor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  minor_ = value;
}
inline void Version::set_minor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_minor(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.Version.minor)
}

// uint32 patch = 3;
inline void Version::clear_patch() {
  patch_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Version::_internal_patch() const {
  return patch_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Version::patch() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Version.patch)
  return _internal_patch();
}
inline void Version::_internal_set_patch(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  patch_ = value;
}
inline void Version::set_patch(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_patch(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.Version.patch)
}

// string name = 4;
inline void Version::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Version::name() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Version.name)
  return _internal_name();
}
inline void Version::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.Version.name)
}
inline std::string* Version::mutable_name() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Version.name)
  return _internal_mutable_name();
}
inline const std::string& Version::_internal_name() const {
  return name_.GetNoArena();
}
inline void Version::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Version::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:data_collection_configuration_request.Version.name)
}
inline void Version::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_collection_configuration_request.Version.name)
}
inline void Version::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_collection_configuration_request.Version.name)
}
inline std::string* Version::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Version::release_name() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Version.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Version::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.Version.name)
}

// -------------------------------------------------------------------

// CollectionExtents

// uint64 count = 1;
inline void CollectionExtents::clear_count() {
  count_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CollectionExtents::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CollectionExtents::count() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CollectionExtents.count)
  return _internal_count();
}
inline void CollectionExtents::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  count_ = value;
}
inline void CollectionExtents::set_count(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.CollectionExtents.count)
}

// uint64 size_byte = 2;
inline void CollectionExtents::clear_size_byte() {
  size_byte_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CollectionExtents::_internal_size_byte() const {
  return size_byte_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CollectionExtents::size_byte() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CollectionExtents.size_byte)
  return _internal_size_byte();
}
inline void CollectionExtents::_internal_set_size_byte(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  size_byte_ = value;
}
inline void CollectionExtents::set_size_byte(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_size_byte(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.CollectionExtents.size_byte)
}

// uint64 path_length_m = 3;
inline void CollectionExtents::clear_path_length_m() {
  path_length_m_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CollectionExtents::_internal_path_length_m() const {
  return path_length_m_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CollectionExtents::path_length_m() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CollectionExtents.path_length_m)
  return _internal_path_length_m();
}
inline void CollectionExtents::_internal_set_path_length_m(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  path_length_m_ = value;
}
inline void CollectionExtents::set_path_length_m(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_path_length_m(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.CollectionExtents.path_length_m)
}

// uint64 path_duration_s = 4;
inline void CollectionExtents::clear_path_duration_s() {
  path_duration_s_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CollectionExtents::_internal_path_duration_s() const {
  return path_duration_s_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CollectionExtents::path_duration_s() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CollectionExtents.path_duration_s)
  return _internal_path_duration_s();
}
inline void CollectionExtents::_internal_set_path_duration_s(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  path_duration_s_ = value;
}
inline void CollectionExtents::set_path_duration_s(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_path_duration_s(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.CollectionExtents.path_duration_s)
}

// repeated .data_collection_configuration_request.Trigger by_trigger = 5;
inline int CollectionExtents::_internal_by_trigger_size() const {
  return by_trigger_.size();
}
inline int CollectionExtents::by_trigger_size() const {
  return _internal_by_trigger_size();
}
inline void CollectionExtents::clear_by_trigger() {
  by_trigger_.Clear();
}
inline ::data_collection_configuration_request::Trigger* CollectionExtents::mutable_by_trigger(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.CollectionExtents.by_trigger)
  return by_trigger_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Trigger >*
CollectionExtents::mutable_by_trigger() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.CollectionExtents.by_trigger)
  return &by_trigger_;
}
inline const ::data_collection_configuration_request::Trigger& CollectionExtents::_internal_by_trigger(int index) const {
  return by_trigger_.Get(index);
}
inline const ::data_collection_configuration_request::Trigger& CollectionExtents::by_trigger(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CollectionExtents.by_trigger)
  return _internal_by_trigger(index);
}
inline ::data_collection_configuration_request::Trigger* CollectionExtents::_internal_add_by_trigger() {
  return by_trigger_.Add();
}
inline ::data_collection_configuration_request::Trigger* CollectionExtents::add_by_trigger() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.CollectionExtents.by_trigger)
  return _internal_add_by_trigger();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Trigger >&
CollectionExtents::by_trigger() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.CollectionExtents.by_trigger)
  return by_trigger_;
}

// -------------------------------------------------------------------

// TimestampInterval

// -------------------------------------------------------------------

// Uint32Range

// uint32 min_value = 1;
inline void Uint32Range::clear_min_value() {
  min_value_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Uint32Range::_internal_min_value() const {
  return min_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Uint32Range::min_value() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Uint32Range.min_value)
  return _internal_min_value();
}
inline void Uint32Range::_internal_set_min_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  min_value_ = value;
}
inline void Uint32Range::set_min_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_min_value(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.Uint32Range.min_value)
}

// uint32 max_value = 2;
inline void Uint32Range::clear_max_value() {
  max_value_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Uint32Range::_internal_max_value() const {
  return max_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Uint32Range::max_value() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Uint32Range.max_value)
  return _internal_max_value();
}
inline void Uint32Range::_internal_set_max_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  max_value_ = value;
}
inline void Uint32Range::set_max_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_max_value(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.Uint32Range.max_value)
}

// -------------------------------------------------------------------

// GeoLocation

// double latitude_deg = 1;
inline void GeoLocation::clear_latitude_deg() {
  latitude_deg_ = 0;
}
inline double GeoLocation::_internal_latitude_deg() const {
  return latitude_deg_;
}
inline double GeoLocation::latitude_deg() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.GeoLocation.latitude_deg)
  return _internal_latitude_deg();
}
inline void GeoLocation::_internal_set_latitude_deg(double value) {
  
  latitude_deg_ = value;
}
inline void GeoLocation::set_latitude_deg(double value) {
  _internal_set_latitude_deg(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.GeoLocation.latitude_deg)
}

// double longitude_deg = 2;
inline void GeoLocation::clear_longitude_deg() {
  longitude_deg_ = 0;
}
inline double GeoLocation::_internal_longitude_deg() const {
  return longitude_deg_;
}
inline double GeoLocation::longitude_deg() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.GeoLocation.longitude_deg)
  return _internal_longitude_deg();
}
inline void GeoLocation::_internal_set_longitude_deg(double value) {
  
  longitude_deg_ = value;
}
inline void GeoLocation::set_longitude_deg(double value) {
  _internal_set_longitude_deg(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.GeoLocation.longitude_deg)
}

// -------------------------------------------------------------------

// GeoRectangle

// .data_collection_configuration_request.GeoLocation top_left = 1;
inline bool GeoRectangle::_internal_has_top_left() const {
  return this != internal_default_instance() && top_left_ != nullptr;
}
inline bool GeoRectangle::has_top_left() const {
  return _internal_has_top_left();
}
inline void GeoRectangle::clear_top_left() {
  if (GetArenaNoVirtual() == nullptr && top_left_ != nullptr) {
    delete top_left_;
  }
  top_left_ = nullptr;
}
inline const ::data_collection_configuration_request::GeoLocation& GeoRectangle::_internal_top_left() const {
  const ::data_collection_configuration_request::GeoLocation* p = top_left_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::GeoLocation*>(
      &::data_collection_configuration_request::_GeoLocation_default_instance_);
}
inline const ::data_collection_configuration_request::GeoLocation& GeoRectangle::top_left() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.GeoRectangle.top_left)
  return _internal_top_left();
}
inline ::data_collection_configuration_request::GeoLocation* GeoRectangle::release_top_left() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.GeoRectangle.top_left)
  
  ::data_collection_configuration_request::GeoLocation* temp = top_left_;
  top_left_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::GeoLocation* GeoRectangle::_internal_mutable_top_left() {
  
  if (top_left_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::GeoLocation>(GetArenaNoVirtual());
    top_left_ = p;
  }
  return top_left_;
}
inline ::data_collection_configuration_request::GeoLocation* GeoRectangle::mutable_top_left() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.GeoRectangle.top_left)
  return _internal_mutable_top_left();
}
inline void GeoRectangle::set_allocated_top_left(::data_collection_configuration_request::GeoLocation* top_left) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete top_left_;
  }
  if (top_left) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      top_left = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, top_left, submessage_arena);
    }
    
  } else {
    
  }
  top_left_ = top_left;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.GeoRectangle.top_left)
}

// .data_collection_configuration_request.GeoLocation bottom_right = 2;
inline bool GeoRectangle::_internal_has_bottom_right() const {
  return this != internal_default_instance() && bottom_right_ != nullptr;
}
inline bool GeoRectangle::has_bottom_right() const {
  return _internal_has_bottom_right();
}
inline void GeoRectangle::clear_bottom_right() {
  if (GetArenaNoVirtual() == nullptr && bottom_right_ != nullptr) {
    delete bottom_right_;
  }
  bottom_right_ = nullptr;
}
inline const ::data_collection_configuration_request::GeoLocation& GeoRectangle::_internal_bottom_right() const {
  const ::data_collection_configuration_request::GeoLocation* p = bottom_right_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::GeoLocation*>(
      &::data_collection_configuration_request::_GeoLocation_default_instance_);
}
inline const ::data_collection_configuration_request::GeoLocation& GeoRectangle::bottom_right() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.GeoRectangle.bottom_right)
  return _internal_bottom_right();
}
inline ::data_collection_configuration_request::GeoLocation* GeoRectangle::release_bottom_right() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.GeoRectangle.bottom_right)
  
  ::data_collection_configuration_request::GeoLocation* temp = bottom_right_;
  bottom_right_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::GeoLocation* GeoRectangle::_internal_mutable_bottom_right() {
  
  if (bottom_right_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::GeoLocation>(GetArenaNoVirtual());
    bottom_right_ = p;
  }
  return bottom_right_;
}
inline ::data_collection_configuration_request::GeoLocation* GeoRectangle::mutable_bottom_right() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.GeoRectangle.bottom_right)
  return _internal_mutable_bottom_right();
}
inline void GeoRectangle::set_allocated_bottom_right(::data_collection_configuration_request::GeoLocation* bottom_right) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete bottom_right_;
  }
  if (bottom_right) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bottom_right = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bottom_right, submessage_arena);
    }
    
  } else {
    
  }
  bottom_right_ = bottom_right;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.GeoRectangle.bottom_right)
}

// -------------------------------------------------------------------

// GeoCircle

// .data_collection_configuration_request.GeoLocation center = 1;
inline bool GeoCircle::_internal_has_center() const {
  return this != internal_default_instance() && center_ != nullptr;
}
inline bool GeoCircle::has_center() const {
  return _internal_has_center();
}
inline void GeoCircle::clear_center() {
  if (GetArenaNoVirtual() == nullptr && center_ != nullptr) {
    delete center_;
  }
  center_ = nullptr;
}
inline const ::data_collection_configuration_request::GeoLocation& GeoCircle::_internal_center() const {
  const ::data_collection_configuration_request::GeoLocation* p = center_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::GeoLocation*>(
      &::data_collection_configuration_request::_GeoLocation_default_instance_);
}
inline const ::data_collection_configuration_request::GeoLocation& GeoCircle::center() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.GeoCircle.center)
  return _internal_center();
}
inline ::data_collection_configuration_request::GeoLocation* GeoCircle::release_center() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.GeoCircle.center)
  
  ::data_collection_configuration_request::GeoLocation* temp = center_;
  center_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::GeoLocation* GeoCircle::_internal_mutable_center() {
  
  if (center_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::GeoLocation>(GetArenaNoVirtual());
    center_ = p;
  }
  return center_;
}
inline ::data_collection_configuration_request::GeoLocation* GeoCircle::mutable_center() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.GeoCircle.center)
  return _internal_mutable_center();
}
inline void GeoCircle::set_allocated_center(::data_collection_configuration_request::GeoLocation* center) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete center_;
  }
  if (center) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      center = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, center, submessage_arena);
    }
    
  } else {
    
  }
  center_ = center;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.GeoCircle.center)
}

// double radius_m = 2;
inline void GeoCircle::clear_radius_m() {
  radius_m_ = 0;
}
inline double GeoCircle::_internal_radius_m() const {
  return radius_m_;
}
inline double GeoCircle::radius_m() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.GeoCircle.radius_m)
  return _internal_radius_m();
}
inline void GeoCircle::_internal_set_radius_m(double value) {
  
  radius_m_ = value;
}
inline void GeoCircle::set_radius_m(double value) {
  _internal_set_radius_m(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.GeoCircle.radius_m)
}

// -------------------------------------------------------------------

// GeoPolygon

// repeated .data_collection_configuration_request.GeoLocation points = 1;
inline int GeoPolygon::_internal_points_size() const {
  return points_.size();
}
inline int GeoPolygon::points_size() const {
  return _internal_points_size();
}
inline void GeoPolygon::clear_points() {
  points_.Clear();
}
inline ::data_collection_configuration_request::GeoLocation* GeoPolygon::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.GeoPolygon.points)
  return points_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoLocation >*
GeoPolygon::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.GeoPolygon.points)
  return &points_;
}
inline const ::data_collection_configuration_request::GeoLocation& GeoPolygon::_internal_points(int index) const {
  return points_.Get(index);
}
inline const ::data_collection_configuration_request::GeoLocation& GeoPolygon::points(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.GeoPolygon.points)
  return _internal_points(index);
}
inline ::data_collection_configuration_request::GeoLocation* GeoPolygon::_internal_add_points() {
  return points_.Add();
}
inline ::data_collection_configuration_request::GeoLocation* GeoPolygon::add_points() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.GeoPolygon.points)
  return _internal_add_points();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoLocation >&
GeoPolygon::points() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.GeoPolygon.points)
  return points_;
}

// -------------------------------------------------------------------

// GeoCorridor

// repeated .data_collection_configuration_request.GeoLocation center_line = 1;
inline int GeoCorridor::_internal_center_line_size() const {
  return center_line_.size();
}
inline int GeoCorridor::center_line_size() const {
  return _internal_center_line_size();
}
inline void GeoCorridor::clear_center_line() {
  center_line_.Clear();
}
inline ::data_collection_configuration_request::GeoLocation* GeoCorridor::mutable_center_line(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.GeoCorridor.center_line)
  return center_line_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoLocation >*
GeoCorridor::mutable_center_line() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.GeoCorridor.center_line)
  return &center_line_;
}
inline const ::data_collection_configuration_request::GeoLocation& GeoCorridor::_internal_center_line(int index) const {
  return center_line_.Get(index);
}
inline const ::data_collection_configuration_request::GeoLocation& GeoCorridor::center_line(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.GeoCorridor.center_line)
  return _internal_center_line(index);
}
inline ::data_collection_configuration_request::GeoLocation* GeoCorridor::_internal_add_center_line() {
  return center_line_.Add();
}
inline ::data_collection_configuration_request::GeoLocation* GeoCorridor::add_center_line() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.GeoCorridor.center_line)
  return _internal_add_center_line();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoLocation >&
GeoCorridor::center_line() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.GeoCorridor.center_line)
  return center_line_;
}

// double width_m = 2;
inline void GeoCorridor::clear_width_m() {
  width_m_ = 0;
}
inline double GeoCorridor::_internal_width_m() const {
  return width_m_;
}
inline double GeoCorridor::width_m() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.GeoCorridor.width_m)
  return _internal_width_m();
}
inline void GeoCorridor::_internal_set_width_m(double value) {
  
  width_m_ = value;
}
inline void GeoCorridor::set_width_m(double value) {
  _internal_set_width_m(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.GeoCorridor.width_m)
}

// -------------------------------------------------------------------

// CompositeTimeRange

// repeated .data_collection_configuration_request.TimestampInterval date_range = 1;
inline int CompositeTimeRange::_internal_date_range_size() const {
  return date_range_.size();
}
inline int CompositeTimeRange::date_range_size() const {
  return _internal_date_range_size();
}
inline void CompositeTimeRange::clear_date_range() {
  date_range_.Clear();
}
inline ::data_collection_configuration_request::TimestampInterval* CompositeTimeRange::mutable_date_range(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.CompositeTimeRange.date_range)
  return date_range_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::TimestampInterval >*
CompositeTimeRange::mutable_date_range() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.CompositeTimeRange.date_range)
  return &date_range_;
}
inline const ::data_collection_configuration_request::TimestampInterval& CompositeTimeRange::_internal_date_range(int index) const {
  return date_range_.Get(index);
}
inline const ::data_collection_configuration_request::TimestampInterval& CompositeTimeRange::date_range(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CompositeTimeRange.date_range)
  return _internal_date_range(index);
}
inline ::data_collection_configuration_request::TimestampInterval* CompositeTimeRange::_internal_add_date_range() {
  return date_range_.Add();
}
inline ::data_collection_configuration_request::TimestampInterval* CompositeTimeRange::add_date_range() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.CompositeTimeRange.date_range)
  return _internal_add_date_range();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::TimestampInterval >&
CompositeTimeRange::date_range() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.CompositeTimeRange.date_range)
  return date_range_;
}

// repeated .data_collection_configuration_request.CompositeTimeRange.WeekdayEnum weekday = 2;
inline int CompositeTimeRange::_internal_weekday_size() const {
  return weekday_.size();
}
inline int CompositeTimeRange::weekday_size() const {
  return _internal_weekday_size();
}
inline void CompositeTimeRange::clear_weekday() {
  weekday_.Clear();
}
inline ::data_collection_configuration_request::CompositeTimeRange_WeekdayEnum CompositeTimeRange::_internal_weekday(int index) const {
  return static_cast< ::data_collection_configuration_request::CompositeTimeRange_WeekdayEnum >(weekday_.Get(index));
}
inline ::data_collection_configuration_request::CompositeTimeRange_WeekdayEnum CompositeTimeRange::weekday(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CompositeTimeRange.weekday)
  return _internal_weekday(index);
}
inline void CompositeTimeRange::set_weekday(int index, ::data_collection_configuration_request::CompositeTimeRange_WeekdayEnum value) {
  weekday_.Set(index, value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.CompositeTimeRange.weekday)
}
inline void CompositeTimeRange::_internal_add_weekday(::data_collection_configuration_request::CompositeTimeRange_WeekdayEnum value) {
  weekday_.Add(value);
}
inline void CompositeTimeRange::add_weekday(::data_collection_configuration_request::CompositeTimeRange_WeekdayEnum value) {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.CompositeTimeRange.weekday)
  _internal_add_weekday(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
CompositeTimeRange::weekday() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.CompositeTimeRange.weekday)
  return weekday_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
CompositeTimeRange::_internal_mutable_weekday() {
  return &weekday_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
CompositeTimeRange::mutable_weekday() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.CompositeTimeRange.weekday)
  return _internal_mutable_weekday();
}

// repeated .data_collection_configuration_request.Uint32Range time_of_the_day_range = 3;
inline int CompositeTimeRange::_internal_time_of_the_day_range_size() const {
  return time_of_the_day_range_.size();
}
inline int CompositeTimeRange::time_of_the_day_range_size() const {
  return _internal_time_of_the_day_range_size();
}
inline void CompositeTimeRange::clear_time_of_the_day_range() {
  time_of_the_day_range_.Clear();
}
inline ::data_collection_configuration_request::Uint32Range* CompositeTimeRange::mutable_time_of_the_day_range(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.CompositeTimeRange.time_of_the_day_range)
  return time_of_the_day_range_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Uint32Range >*
CompositeTimeRange::mutable_time_of_the_day_range() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.CompositeTimeRange.time_of_the_day_range)
  return &time_of_the_day_range_;
}
inline const ::data_collection_configuration_request::Uint32Range& CompositeTimeRange::_internal_time_of_the_day_range(int index) const {
  return time_of_the_day_range_.Get(index);
}
inline const ::data_collection_configuration_request::Uint32Range& CompositeTimeRange::time_of_the_day_range(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CompositeTimeRange.time_of_the_day_range)
  return _internal_time_of_the_day_range(index);
}
inline ::data_collection_configuration_request::Uint32Range* CompositeTimeRange::_internal_add_time_of_the_day_range() {
  return time_of_the_day_range_.Add();
}
inline ::data_collection_configuration_request::Uint32Range* CompositeTimeRange::add_time_of_the_day_range() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.CompositeTimeRange.time_of_the_day_range)
  return _internal_add_time_of_the_day_range();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Uint32Range >&
CompositeTimeRange::time_of_the_day_range() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.CompositeTimeRange.time_of_the_day_range)
  return time_of_the_day_range_;
}

// -------------------------------------------------------------------

// CompositeLocation

// repeated .data_collection_configuration_request.GeoCircle geo_circles = 1;
inline int CompositeLocation::_internal_geo_circles_size() const {
  return geo_circles_.size();
}
inline int CompositeLocation::geo_circles_size() const {
  return _internal_geo_circles_size();
}
inline void CompositeLocation::clear_geo_circles() {
  geo_circles_.Clear();
}
inline ::data_collection_configuration_request::GeoCircle* CompositeLocation::mutable_geo_circles(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.CompositeLocation.geo_circles)
  return geo_circles_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoCircle >*
CompositeLocation::mutable_geo_circles() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.CompositeLocation.geo_circles)
  return &geo_circles_;
}
inline const ::data_collection_configuration_request::GeoCircle& CompositeLocation::_internal_geo_circles(int index) const {
  return geo_circles_.Get(index);
}
inline const ::data_collection_configuration_request::GeoCircle& CompositeLocation::geo_circles(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CompositeLocation.geo_circles)
  return _internal_geo_circles(index);
}
inline ::data_collection_configuration_request::GeoCircle* CompositeLocation::_internal_add_geo_circles() {
  return geo_circles_.Add();
}
inline ::data_collection_configuration_request::GeoCircle* CompositeLocation::add_geo_circles() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.CompositeLocation.geo_circles)
  return _internal_add_geo_circles();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoCircle >&
CompositeLocation::geo_circles() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.CompositeLocation.geo_circles)
  return geo_circles_;
}

// repeated .data_collection_configuration_request.GeoRectangle geo_rectangles = 2;
inline int CompositeLocation::_internal_geo_rectangles_size() const {
  return geo_rectangles_.size();
}
inline int CompositeLocation::geo_rectangles_size() const {
  return _internal_geo_rectangles_size();
}
inline void CompositeLocation::clear_geo_rectangles() {
  geo_rectangles_.Clear();
}
inline ::data_collection_configuration_request::GeoRectangle* CompositeLocation::mutable_geo_rectangles(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.CompositeLocation.geo_rectangles)
  return geo_rectangles_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoRectangle >*
CompositeLocation::mutable_geo_rectangles() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.CompositeLocation.geo_rectangles)
  return &geo_rectangles_;
}
inline const ::data_collection_configuration_request::GeoRectangle& CompositeLocation::_internal_geo_rectangles(int index) const {
  return geo_rectangles_.Get(index);
}
inline const ::data_collection_configuration_request::GeoRectangle& CompositeLocation::geo_rectangles(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CompositeLocation.geo_rectangles)
  return _internal_geo_rectangles(index);
}
inline ::data_collection_configuration_request::GeoRectangle* CompositeLocation::_internal_add_geo_rectangles() {
  return geo_rectangles_.Add();
}
inline ::data_collection_configuration_request::GeoRectangle* CompositeLocation::add_geo_rectangles() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.CompositeLocation.geo_rectangles)
  return _internal_add_geo_rectangles();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoRectangle >&
CompositeLocation::geo_rectangles() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.CompositeLocation.geo_rectangles)
  return geo_rectangles_;
}

// repeated .data_collection_configuration_request.GeoPolygon geo_polygons = 3;
inline int CompositeLocation::_internal_geo_polygons_size() const {
  return geo_polygons_.size();
}
inline int CompositeLocation::geo_polygons_size() const {
  return _internal_geo_polygons_size();
}
inline void CompositeLocation::clear_geo_polygons() {
  geo_polygons_.Clear();
}
inline ::data_collection_configuration_request::GeoPolygon* CompositeLocation::mutable_geo_polygons(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.CompositeLocation.geo_polygons)
  return geo_polygons_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoPolygon >*
CompositeLocation::mutable_geo_polygons() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.CompositeLocation.geo_polygons)
  return &geo_polygons_;
}
inline const ::data_collection_configuration_request::GeoPolygon& CompositeLocation::_internal_geo_polygons(int index) const {
  return geo_polygons_.Get(index);
}
inline const ::data_collection_configuration_request::GeoPolygon& CompositeLocation::geo_polygons(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CompositeLocation.geo_polygons)
  return _internal_geo_polygons(index);
}
inline ::data_collection_configuration_request::GeoPolygon* CompositeLocation::_internal_add_geo_polygons() {
  return geo_polygons_.Add();
}
inline ::data_collection_configuration_request::GeoPolygon* CompositeLocation::add_geo_polygons() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.CompositeLocation.geo_polygons)
  return _internal_add_geo_polygons();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoPolygon >&
CompositeLocation::geo_polygons() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.CompositeLocation.geo_polygons)
  return geo_polygons_;
}

// repeated .data_collection_configuration_request.GeoCorridor geo_corridors = 4;
inline int CompositeLocation::_internal_geo_corridors_size() const {
  return geo_corridors_.size();
}
inline int CompositeLocation::geo_corridors_size() const {
  return _internal_geo_corridors_size();
}
inline void CompositeLocation::clear_geo_corridors() {
  geo_corridors_.Clear();
}
inline ::data_collection_configuration_request::GeoCorridor* CompositeLocation::mutable_geo_corridors(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.CompositeLocation.geo_corridors)
  return geo_corridors_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoCorridor >*
CompositeLocation::mutable_geo_corridors() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.CompositeLocation.geo_corridors)
  return &geo_corridors_;
}
inline const ::data_collection_configuration_request::GeoCorridor& CompositeLocation::_internal_geo_corridors(int index) const {
  return geo_corridors_.Get(index);
}
inline const ::data_collection_configuration_request::GeoCorridor& CompositeLocation::geo_corridors(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CompositeLocation.geo_corridors)
  return _internal_geo_corridors(index);
}
inline ::data_collection_configuration_request::GeoCorridor* CompositeLocation::_internal_add_geo_corridors() {
  return geo_corridors_.Add();
}
inline ::data_collection_configuration_request::GeoCorridor* CompositeLocation::add_geo_corridors() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.CompositeLocation.geo_corridors)
  return _internal_add_geo_corridors();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::GeoCorridor >&
CompositeLocation::geo_corridors() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.CompositeLocation.geo_corridors)
  return geo_corridors_;
}

// -------------------------------------------------------------------

// MapRestriction_RoadAttribute

// repeated .data_collection_configuration_request.MapRestriction.RoadAttributeEnum road_type = 1;
inline int MapRestriction_RoadAttribute::_internal_road_type_size() const {
  return road_type_.size();
}
inline int MapRestriction_RoadAttribute::road_type_size() const {
  return _internal_road_type_size();
}
inline void MapRestriction_RoadAttribute::clear_road_type() {
  road_type_.Clear();
}
inline ::data_collection_configuration_request::MapRestriction_RoadAttributeEnum MapRestriction_RoadAttribute::_internal_road_type(int index) const {
  return static_cast< ::data_collection_configuration_request::MapRestriction_RoadAttributeEnum >(road_type_.Get(index));
}
inline ::data_collection_configuration_request::MapRestriction_RoadAttributeEnum MapRestriction_RoadAttribute::road_type(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.MapRestriction.RoadAttribute.road_type)
  return _internal_road_type(index);
}
inline void MapRestriction_RoadAttribute::set_road_type(int index, ::data_collection_configuration_request::MapRestriction_RoadAttributeEnum value) {
  road_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.MapRestriction.RoadAttribute.road_type)
}
inline void MapRestriction_RoadAttribute::_internal_add_road_type(::data_collection_configuration_request::MapRestriction_RoadAttributeEnum value) {
  road_type_.Add(value);
}
inline void MapRestriction_RoadAttribute::add_road_type(::data_collection_configuration_request::MapRestriction_RoadAttributeEnum value) {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.MapRestriction.RoadAttribute.road_type)
  _internal_add_road_type(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
MapRestriction_RoadAttribute::road_type() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.MapRestriction.RoadAttribute.road_type)
  return road_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
MapRestriction_RoadAttribute::_internal_mutable_road_type() {
  return &road_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
MapRestriction_RoadAttribute::mutable_road_type() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.MapRestriction.RoadAttribute.road_type)
  return _internal_mutable_road_type();
}

// .data_collection_configuration_request.LogicalOperatorEnum road_type_operator = 2;
inline void MapRestriction_RoadAttribute::clear_road_type_operator() {
  road_type_operator_ = 0;
}
inline ::data_collection_configuration_request::LogicalOperatorEnum MapRestriction_RoadAttribute::_internal_road_type_operator() const {
  return static_cast< ::data_collection_configuration_request::LogicalOperatorEnum >(road_type_operator_);
}
inline ::data_collection_configuration_request::LogicalOperatorEnum MapRestriction_RoadAttribute::road_type_operator() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.MapRestriction.RoadAttribute.road_type_operator)
  return _internal_road_type_operator();
}
inline void MapRestriction_RoadAttribute::_internal_set_road_type_operator(::data_collection_configuration_request::LogicalOperatorEnum value) {
  
  road_type_operator_ = value;
}
inline void MapRestriction_RoadAttribute::set_road_type_operator(::data_collection_configuration_request::LogicalOperatorEnum value) {
  _internal_set_road_type_operator(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.MapRestriction.RoadAttribute.road_type_operator)
}

// -------------------------------------------------------------------

// MapRestriction_FunctionalRoadClassRange

// uint32 min_value = 1;
inline void MapRestriction_FunctionalRoadClassRange::clear_min_value() {
  min_value_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapRestriction_FunctionalRoadClassRange::_internal_min_value() const {
  return min_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapRestriction_FunctionalRoadClassRange::min_value() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.MapRestriction.FunctionalRoadClassRange.min_value)
  return _internal_min_value();
}
inline void MapRestriction_FunctionalRoadClassRange::_internal_set_min_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  min_value_ = value;
}
inline void MapRestriction_FunctionalRoadClassRange::set_min_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_min_value(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.MapRestriction.FunctionalRoadClassRange.min_value)
}

// uint32 max_value = 2;
inline void MapRestriction_FunctionalRoadClassRange::clear_max_value() {
  max_value_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapRestriction_FunctionalRoadClassRange::_internal_max_value() const {
  return max_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapRestriction_FunctionalRoadClassRange::max_value() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.MapRestriction.FunctionalRoadClassRange.max_value)
  return _internal_max_value();
}
inline void MapRestriction_FunctionalRoadClassRange::_internal_set_max_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  max_value_ = value;
}
inline void MapRestriction_FunctionalRoadClassRange::set_max_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_max_value(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.MapRestriction.FunctionalRoadClassRange.max_value)
}

// -------------------------------------------------------------------

// MapRestriction

// .data_collection_configuration_request.MapRestriction.RoadAttribute road_attribute = 1;
inline bool MapRestriction::_internal_has_road_attribute() const {
  return this != internal_default_instance() && road_attribute_ != nullptr;
}
inline bool MapRestriction::has_road_attribute() const {
  return _internal_has_road_attribute();
}
inline void MapRestriction::clear_road_attribute() {
  if (GetArenaNoVirtual() == nullptr && road_attribute_ != nullptr) {
    delete road_attribute_;
  }
  road_attribute_ = nullptr;
}
inline const ::data_collection_configuration_request::MapRestriction_RoadAttribute& MapRestriction::_internal_road_attribute() const {
  const ::data_collection_configuration_request::MapRestriction_RoadAttribute* p = road_attribute_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::MapRestriction_RoadAttribute*>(
      &::data_collection_configuration_request::_MapRestriction_RoadAttribute_default_instance_);
}
inline const ::data_collection_configuration_request::MapRestriction_RoadAttribute& MapRestriction::road_attribute() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.MapRestriction.road_attribute)
  return _internal_road_attribute();
}
inline ::data_collection_configuration_request::MapRestriction_RoadAttribute* MapRestriction::release_road_attribute() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.MapRestriction.road_attribute)
  
  ::data_collection_configuration_request::MapRestriction_RoadAttribute* temp = road_attribute_;
  road_attribute_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::MapRestriction_RoadAttribute* MapRestriction::_internal_mutable_road_attribute() {
  
  if (road_attribute_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::MapRestriction_RoadAttribute>(GetArenaNoVirtual());
    road_attribute_ = p;
  }
  return road_attribute_;
}
inline ::data_collection_configuration_request::MapRestriction_RoadAttribute* MapRestriction::mutable_road_attribute() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.MapRestriction.road_attribute)
  return _internal_mutable_road_attribute();
}
inline void MapRestriction::set_allocated_road_attribute(::data_collection_configuration_request::MapRestriction_RoadAttribute* road_attribute) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete road_attribute_;
  }
  if (road_attribute) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      road_attribute = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, road_attribute, submessage_arena);
    }
    
  } else {
    
  }
  road_attribute_ = road_attribute;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.MapRestriction.road_attribute)
}

// repeated .data_collection_configuration_request.MapRestriction.FunctionalRoadClassRange functional_road_class_range = 2;
inline int MapRestriction::_internal_functional_road_class_range_size() const {
  return functional_road_class_range_.size();
}
inline int MapRestriction::functional_road_class_range_size() const {
  return _internal_functional_road_class_range_size();
}
inline void MapRestriction::clear_functional_road_class_range() {
  functional_road_class_range_.Clear();
}
inline ::data_collection_configuration_request::MapRestriction_FunctionalRoadClassRange* MapRestriction::mutable_functional_road_class_range(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.MapRestriction.functional_road_class_range)
  return functional_road_class_range_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::MapRestriction_FunctionalRoadClassRange >*
MapRestriction::mutable_functional_road_class_range() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.MapRestriction.functional_road_class_range)
  return &functional_road_class_range_;
}
inline const ::data_collection_configuration_request::MapRestriction_FunctionalRoadClassRange& MapRestriction::_internal_functional_road_class_range(int index) const {
  return functional_road_class_range_.Get(index);
}
inline const ::data_collection_configuration_request::MapRestriction_FunctionalRoadClassRange& MapRestriction::functional_road_class_range(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.MapRestriction.functional_road_class_range)
  return _internal_functional_road_class_range(index);
}
inline ::data_collection_configuration_request::MapRestriction_FunctionalRoadClassRange* MapRestriction::_internal_add_functional_road_class_range() {
  return functional_road_class_range_.Add();
}
inline ::data_collection_configuration_request::MapRestriction_FunctionalRoadClassRange* MapRestriction::add_functional_road_class_range() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.MapRestriction.functional_road_class_range)
  return _internal_add_functional_road_class_range();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::MapRestriction_FunctionalRoadClassRange >&
MapRestriction::functional_road_class_range() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.MapRestriction.functional_road_class_range)
  return functional_road_class_range_;
}

// repeated string whitelist_country_codes = 3;
inline int MapRestriction::_internal_whitelist_country_codes_size() const {
  return whitelist_country_codes_.size();
}
inline int MapRestriction::whitelist_country_codes_size() const {
  return _internal_whitelist_country_codes_size();
}
inline void MapRestriction::clear_whitelist_country_codes() {
  whitelist_country_codes_.Clear();
}
inline std::string* MapRestriction::add_whitelist_country_codes() {
  // @@protoc_insertion_point(field_add_mutable:data_collection_configuration_request.MapRestriction.whitelist_country_codes)
  return _internal_add_whitelist_country_codes();
}
inline const std::string& MapRestriction::_internal_whitelist_country_codes(int index) const {
  return whitelist_country_codes_.Get(index);
}
inline const std::string& MapRestriction::whitelist_country_codes(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.MapRestriction.whitelist_country_codes)
  return _internal_whitelist_country_codes(index);
}
inline std::string* MapRestriction::mutable_whitelist_country_codes(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.MapRestriction.whitelist_country_codes)
  return whitelist_country_codes_.Mutable(index);
}
inline void MapRestriction::set_whitelist_country_codes(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.MapRestriction.whitelist_country_codes)
  whitelist_country_codes_.Mutable(index)->assign(value);
}
inline void MapRestriction::set_whitelist_country_codes(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.MapRestriction.whitelist_country_codes)
  whitelist_country_codes_.Mutable(index)->assign(std::move(value));
}
inline void MapRestriction::set_whitelist_country_codes(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  whitelist_country_codes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:data_collection_configuration_request.MapRestriction.whitelist_country_codes)
}
inline void MapRestriction::set_whitelist_country_codes(int index, const char* value, size_t size) {
  whitelist_country_codes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:data_collection_configuration_request.MapRestriction.whitelist_country_codes)
}
inline std::string* MapRestriction::_internal_add_whitelist_country_codes() {
  return whitelist_country_codes_.Add();
}
inline void MapRestriction::add_whitelist_country_codes(const std::string& value) {
  whitelist_country_codes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.MapRestriction.whitelist_country_codes)
}
inline void MapRestriction::add_whitelist_country_codes(std::string&& value) {
  whitelist_country_codes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.MapRestriction.whitelist_country_codes)
}
inline void MapRestriction::add_whitelist_country_codes(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  whitelist_country_codes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:data_collection_configuration_request.MapRestriction.whitelist_country_codes)
}
inline void MapRestriction::add_whitelist_country_codes(const char* value, size_t size) {
  whitelist_country_codes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:data_collection_configuration_request.MapRestriction.whitelist_country_codes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MapRestriction::whitelist_country_codes() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.MapRestriction.whitelist_country_codes)
  return whitelist_country_codes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
MapRestriction::mutable_whitelist_country_codes() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.MapRestriction.whitelist_country_codes)
  return &whitelist_country_codes_;
}

// repeated string blacklist_country_codes = 4;
inline int MapRestriction::_internal_blacklist_country_codes_size() const {
  return blacklist_country_codes_.size();
}
inline int MapRestriction::blacklist_country_codes_size() const {
  return _internal_blacklist_country_codes_size();
}
inline void MapRestriction::clear_blacklist_country_codes() {
  blacklist_country_codes_.Clear();
}
inline std::string* MapRestriction::add_blacklist_country_codes() {
  // @@protoc_insertion_point(field_add_mutable:data_collection_configuration_request.MapRestriction.blacklist_country_codes)
  return _internal_add_blacklist_country_codes();
}
inline const std::string& MapRestriction::_internal_blacklist_country_codes(int index) const {
  return blacklist_country_codes_.Get(index);
}
inline const std::string& MapRestriction::blacklist_country_codes(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.MapRestriction.blacklist_country_codes)
  return _internal_blacklist_country_codes(index);
}
inline std::string* MapRestriction::mutable_blacklist_country_codes(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.MapRestriction.blacklist_country_codes)
  return blacklist_country_codes_.Mutable(index);
}
inline void MapRestriction::set_blacklist_country_codes(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.MapRestriction.blacklist_country_codes)
  blacklist_country_codes_.Mutable(index)->assign(value);
}
inline void MapRestriction::set_blacklist_country_codes(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.MapRestriction.blacklist_country_codes)
  blacklist_country_codes_.Mutable(index)->assign(std::move(value));
}
inline void MapRestriction::set_blacklist_country_codes(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  blacklist_country_codes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:data_collection_configuration_request.MapRestriction.blacklist_country_codes)
}
inline void MapRestriction::set_blacklist_country_codes(int index, const char* value, size_t size) {
  blacklist_country_codes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:data_collection_configuration_request.MapRestriction.blacklist_country_codes)
}
inline std::string* MapRestriction::_internal_add_blacklist_country_codes() {
  return blacklist_country_codes_.Add();
}
inline void MapRestriction::add_blacklist_country_codes(const std::string& value) {
  blacklist_country_codes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.MapRestriction.blacklist_country_codes)
}
inline void MapRestriction::add_blacklist_country_codes(std::string&& value) {
  blacklist_country_codes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.MapRestriction.blacklist_country_codes)
}
inline void MapRestriction::add_blacklist_country_codes(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  blacklist_country_codes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:data_collection_configuration_request.MapRestriction.blacklist_country_codes)
}
inline void MapRestriction::add_blacklist_country_codes(const char* value, size_t size) {
  blacklist_country_codes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:data_collection_configuration_request.MapRestriction.blacklist_country_codes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MapRestriction::blacklist_country_codes() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.MapRestriction.blacklist_country_codes)
  return blacklist_country_codes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
MapRestriction::mutable_blacklist_country_codes() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.MapRestriction.blacklist_country_codes)
  return &blacklist_country_codes_;
}

// bool ignore_if_not_supported = 5;
inline void MapRestriction::clear_ignore_if_not_supported() {
  ignore_if_not_supported_ = false;
}
inline bool MapRestriction::_internal_ignore_if_not_supported() const {
  return ignore_if_not_supported_;
}
inline bool MapRestriction::ignore_if_not_supported() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.MapRestriction.ignore_if_not_supported)
  return _internal_ignore_if_not_supported();
}
inline void MapRestriction::_internal_set_ignore_if_not_supported(bool value) {
  
  ignore_if_not_supported_ = value;
}
inline void MapRestriction::set_ignore_if_not_supported(bool value) {
  _internal_set_ignore_if_not_supported(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.MapRestriction.ignore_if_not_supported)
}

// -------------------------------------------------------------------

// SystemStates

// .data_collection_configuration_request.System_States state = 1;
inline void SystemStates::clear_state() {
  state_ = 0;
}
inline ::data_collection_configuration_request::System_States SystemStates::_internal_state() const {
  return static_cast< ::data_collection_configuration_request::System_States >(state_);
}
inline ::data_collection_configuration_request::System_States SystemStates::state() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.SystemStates.state)
  return _internal_state();
}
inline void SystemStates::_internal_set_state(::data_collection_configuration_request::System_States value) {
  
  state_ = value;
}
inline void SystemStates::set_state(::data_collection_configuration_request::System_States value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.SystemStates.state)
}

// -------------------------------------------------------------------

// JobValidityRestrictions

// repeated .data_collection_configuration_request.CompositeTimeRange time_restrictions = 1;
inline int JobValidityRestrictions::_internal_time_restrictions_size() const {
  return time_restrictions_.size();
}
inline int JobValidityRestrictions::time_restrictions_size() const {
  return _internal_time_restrictions_size();
}
inline void JobValidityRestrictions::clear_time_restrictions() {
  time_restrictions_.Clear();
}
inline ::data_collection_configuration_request::CompositeTimeRange* JobValidityRestrictions::mutable_time_restrictions(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.JobValidityRestrictions.time_restrictions)
  return time_restrictions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::CompositeTimeRange >*
JobValidityRestrictions::mutable_time_restrictions() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.JobValidityRestrictions.time_restrictions)
  return &time_restrictions_;
}
inline const ::data_collection_configuration_request::CompositeTimeRange& JobValidityRestrictions::_internal_time_restrictions(int index) const {
  return time_restrictions_.Get(index);
}
inline const ::data_collection_configuration_request::CompositeTimeRange& JobValidityRestrictions::time_restrictions(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.JobValidityRestrictions.time_restrictions)
  return _internal_time_restrictions(index);
}
inline ::data_collection_configuration_request::CompositeTimeRange* JobValidityRestrictions::_internal_add_time_restrictions() {
  return time_restrictions_.Add();
}
inline ::data_collection_configuration_request::CompositeTimeRange* JobValidityRestrictions::add_time_restrictions() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.JobValidityRestrictions.time_restrictions)
  return _internal_add_time_restrictions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::CompositeTimeRange >&
JobValidityRestrictions::time_restrictions() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.JobValidityRestrictions.time_restrictions)
  return time_restrictions_;
}

// .data_collection_configuration_request.CompositeLocation spatial_restrictions = 2;
inline bool JobValidityRestrictions::_internal_has_spatial_restrictions() const {
  return this != internal_default_instance() && spatial_restrictions_ != nullptr;
}
inline bool JobValidityRestrictions::has_spatial_restrictions() const {
  return _internal_has_spatial_restrictions();
}
inline void JobValidityRestrictions::clear_spatial_restrictions() {
  if (GetArenaNoVirtual() == nullptr && spatial_restrictions_ != nullptr) {
    delete spatial_restrictions_;
  }
  spatial_restrictions_ = nullptr;
}
inline const ::data_collection_configuration_request::CompositeLocation& JobValidityRestrictions::_internal_spatial_restrictions() const {
  const ::data_collection_configuration_request::CompositeLocation* p = spatial_restrictions_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::CompositeLocation*>(
      &::data_collection_configuration_request::_CompositeLocation_default_instance_);
}
inline const ::data_collection_configuration_request::CompositeLocation& JobValidityRestrictions::spatial_restrictions() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.JobValidityRestrictions.spatial_restrictions)
  return _internal_spatial_restrictions();
}
inline ::data_collection_configuration_request::CompositeLocation* JobValidityRestrictions::release_spatial_restrictions() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.JobValidityRestrictions.spatial_restrictions)
  
  ::data_collection_configuration_request::CompositeLocation* temp = spatial_restrictions_;
  spatial_restrictions_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::CompositeLocation* JobValidityRestrictions::_internal_mutable_spatial_restrictions() {
  
  if (spatial_restrictions_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::CompositeLocation>(GetArenaNoVirtual());
    spatial_restrictions_ = p;
  }
  return spatial_restrictions_;
}
inline ::data_collection_configuration_request::CompositeLocation* JobValidityRestrictions::mutable_spatial_restrictions() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.JobValidityRestrictions.spatial_restrictions)
  return _internal_mutable_spatial_restrictions();
}
inline void JobValidityRestrictions::set_allocated_spatial_restrictions(::data_collection_configuration_request::CompositeLocation* spatial_restrictions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete spatial_restrictions_;
  }
  if (spatial_restrictions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      spatial_restrictions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spatial_restrictions, submessage_arena);
    }
    
  } else {
    
  }
  spatial_restrictions_ = spatial_restrictions;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.JobValidityRestrictions.spatial_restrictions)
}

// repeated .data_collection_configuration_request.MapRestriction map_restrictions = 3;
inline int JobValidityRestrictions::_internal_map_restrictions_size() const {
  return map_restrictions_.size();
}
inline int JobValidityRestrictions::map_restrictions_size() const {
  return _internal_map_restrictions_size();
}
inline void JobValidityRestrictions::clear_map_restrictions() {
  map_restrictions_.Clear();
}
inline ::data_collection_configuration_request::MapRestriction* JobValidityRestrictions::mutable_map_restrictions(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.JobValidityRestrictions.map_restrictions)
  return map_restrictions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::MapRestriction >*
JobValidityRestrictions::mutable_map_restrictions() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.JobValidityRestrictions.map_restrictions)
  return &map_restrictions_;
}
inline const ::data_collection_configuration_request::MapRestriction& JobValidityRestrictions::_internal_map_restrictions(int index) const {
  return map_restrictions_.Get(index);
}
inline const ::data_collection_configuration_request::MapRestriction& JobValidityRestrictions::map_restrictions(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.JobValidityRestrictions.map_restrictions)
  return _internal_map_restrictions(index);
}
inline ::data_collection_configuration_request::MapRestriction* JobValidityRestrictions::_internal_add_map_restrictions() {
  return map_restrictions_.Add();
}
inline ::data_collection_configuration_request::MapRestriction* JobValidityRestrictions::add_map_restrictions() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.JobValidityRestrictions.map_restrictions)
  return _internal_add_map_restrictions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::MapRestriction >&
JobValidityRestrictions::map_restrictions() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.JobValidityRestrictions.map_restrictions)
  return map_restrictions_;
}

// repeated .data_collection_configuration_request.SystemStates invalid_collection_states = 4;
inline int JobValidityRestrictions::_internal_invalid_collection_states_size() const {
  return invalid_collection_states_.size();
}
inline int JobValidityRestrictions::invalid_collection_states_size() const {
  return _internal_invalid_collection_states_size();
}
inline void JobValidityRestrictions::clear_invalid_collection_states() {
  invalid_collection_states_.Clear();
}
inline ::data_collection_configuration_request::SystemStates* JobValidityRestrictions::mutable_invalid_collection_states(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.JobValidityRestrictions.invalid_collection_states)
  return invalid_collection_states_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::SystemStates >*
JobValidityRestrictions::mutable_invalid_collection_states() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.JobValidityRestrictions.invalid_collection_states)
  return &invalid_collection_states_;
}
inline const ::data_collection_configuration_request::SystemStates& JobValidityRestrictions::_internal_invalid_collection_states(int index) const {
  return invalid_collection_states_.Get(index);
}
inline const ::data_collection_configuration_request::SystemStates& JobValidityRestrictions::invalid_collection_states(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.JobValidityRestrictions.invalid_collection_states)
  return _internal_invalid_collection_states(index);
}
inline ::data_collection_configuration_request::SystemStates* JobValidityRestrictions::_internal_add_invalid_collection_states() {
  return invalid_collection_states_.Add();
}
inline ::data_collection_configuration_request::SystemStates* JobValidityRestrictions::add_invalid_collection_states() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.JobValidityRestrictions.invalid_collection_states)
  return _internal_add_invalid_collection_states();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::SystemStates >&
JobValidityRestrictions::invalid_collection_states() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.JobValidityRestrictions.invalid_collection_states)
  return invalid_collection_states_;
}

// -------------------------------------------------------------------

// JobTerminationConditions

// repeated .data_collection_configuration_request.CompositeTimeRange time_conditions = 1;
inline int JobTerminationConditions::_internal_time_conditions_size() const {
  return time_conditions_.size();
}
inline int JobTerminationConditions::time_conditions_size() const {
  return _internal_time_conditions_size();
}
inline void JobTerminationConditions::clear_time_conditions() {
  time_conditions_.Clear();
}
inline ::data_collection_configuration_request::CompositeTimeRange* JobTerminationConditions::mutable_time_conditions(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.JobTerminationConditions.time_conditions)
  return time_conditions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::CompositeTimeRange >*
JobTerminationConditions::mutable_time_conditions() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.JobTerminationConditions.time_conditions)
  return &time_conditions_;
}
inline const ::data_collection_configuration_request::CompositeTimeRange& JobTerminationConditions::_internal_time_conditions(int index) const {
  return time_conditions_.Get(index);
}
inline const ::data_collection_configuration_request::CompositeTimeRange& JobTerminationConditions::time_conditions(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.JobTerminationConditions.time_conditions)
  return _internal_time_conditions(index);
}
inline ::data_collection_configuration_request::CompositeTimeRange* JobTerminationConditions::_internal_add_time_conditions() {
  return time_conditions_.Add();
}
inline ::data_collection_configuration_request::CompositeTimeRange* JobTerminationConditions::add_time_conditions() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.JobTerminationConditions.time_conditions)
  return _internal_add_time_conditions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::CompositeTimeRange >&
JobTerminationConditions::time_conditions() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.JobTerminationConditions.time_conditions)
  return time_conditions_;
}

// .data_collection_configuration_request.CompositeLocation spatial_conditions = 2;
inline bool JobTerminationConditions::_internal_has_spatial_conditions() const {
  return this != internal_default_instance() && spatial_conditions_ != nullptr;
}
inline bool JobTerminationConditions::has_spatial_conditions() const {
  return _internal_has_spatial_conditions();
}
inline void JobTerminationConditions::clear_spatial_conditions() {
  if (GetArenaNoVirtual() == nullptr && spatial_conditions_ != nullptr) {
    delete spatial_conditions_;
  }
  spatial_conditions_ = nullptr;
}
inline const ::data_collection_configuration_request::CompositeLocation& JobTerminationConditions::_internal_spatial_conditions() const {
  const ::data_collection_configuration_request::CompositeLocation* p = spatial_conditions_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::CompositeLocation*>(
      &::data_collection_configuration_request::_CompositeLocation_default_instance_);
}
inline const ::data_collection_configuration_request::CompositeLocation& JobTerminationConditions::spatial_conditions() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.JobTerminationConditions.spatial_conditions)
  return _internal_spatial_conditions();
}
inline ::data_collection_configuration_request::CompositeLocation* JobTerminationConditions::release_spatial_conditions() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.JobTerminationConditions.spatial_conditions)
  
  ::data_collection_configuration_request::CompositeLocation* temp = spatial_conditions_;
  spatial_conditions_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::CompositeLocation* JobTerminationConditions::_internal_mutable_spatial_conditions() {
  
  if (spatial_conditions_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::CompositeLocation>(GetArenaNoVirtual());
    spatial_conditions_ = p;
  }
  return spatial_conditions_;
}
inline ::data_collection_configuration_request::CompositeLocation* JobTerminationConditions::mutable_spatial_conditions() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.JobTerminationConditions.spatial_conditions)
  return _internal_mutable_spatial_conditions();
}
inline void JobTerminationConditions::set_allocated_spatial_conditions(::data_collection_configuration_request::CompositeLocation* spatial_conditions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete spatial_conditions_;
  }
  if (spatial_conditions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      spatial_conditions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spatial_conditions, submessage_arena);
    }
    
  } else {
    
  }
  spatial_conditions_ = spatial_conditions;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.JobTerminationConditions.spatial_conditions)
}

// repeated .logical_expression.LogicalExpression signal_value_condition = 3;
inline int JobTerminationConditions::_internal_signal_value_condition_size() const {
  return signal_value_condition_.size();
}
inline int JobTerminationConditions::signal_value_condition_size() const {
  return _internal_signal_value_condition_size();
}
inline ::logical_expression::LogicalExpression* JobTerminationConditions::mutable_signal_value_condition(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.JobTerminationConditions.signal_value_condition)
  return signal_value_condition_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::logical_expression::LogicalExpression >*
JobTerminationConditions::mutable_signal_value_condition() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.JobTerminationConditions.signal_value_condition)
  return &signal_value_condition_;
}
inline const ::logical_expression::LogicalExpression& JobTerminationConditions::_internal_signal_value_condition(int index) const {
  return signal_value_condition_.Get(index);
}
inline const ::logical_expression::LogicalExpression& JobTerminationConditions::signal_value_condition(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.JobTerminationConditions.signal_value_condition)
  return _internal_signal_value_condition(index);
}
inline ::logical_expression::LogicalExpression* JobTerminationConditions::_internal_add_signal_value_condition() {
  return signal_value_condition_.Add();
}
inline ::logical_expression::LogicalExpression* JobTerminationConditions::add_signal_value_condition() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.JobTerminationConditions.signal_value_condition)
  return _internal_add_signal_value_condition();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::logical_expression::LogicalExpression >&
JobTerminationConditions::signal_value_condition() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.JobTerminationConditions.signal_value_condition)
  return signal_value_condition_;
}

// .data_collection_configuration_request.CollectionExtents extents = 4;
inline bool JobTerminationConditions::_internal_has_extents() const {
  return this != internal_default_instance() && extents_ != nullptr;
}
inline bool JobTerminationConditions::has_extents() const {
  return _internal_has_extents();
}
inline void JobTerminationConditions::clear_extents() {
  if (GetArenaNoVirtual() == nullptr && extents_ != nullptr) {
    delete extents_;
  }
  extents_ = nullptr;
}
inline const ::data_collection_configuration_request::CollectionExtents& JobTerminationConditions::_internal_extents() const {
  const ::data_collection_configuration_request::CollectionExtents* p = extents_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::CollectionExtents*>(
      &::data_collection_configuration_request::_CollectionExtents_default_instance_);
}
inline const ::data_collection_configuration_request::CollectionExtents& JobTerminationConditions::extents() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.JobTerminationConditions.extents)
  return _internal_extents();
}
inline ::data_collection_configuration_request::CollectionExtents* JobTerminationConditions::release_extents() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.JobTerminationConditions.extents)
  
  ::data_collection_configuration_request::CollectionExtents* temp = extents_;
  extents_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::CollectionExtents* JobTerminationConditions::_internal_mutable_extents() {
  
  if (extents_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::CollectionExtents>(GetArenaNoVirtual());
    extents_ = p;
  }
  return extents_;
}
inline ::data_collection_configuration_request::CollectionExtents* JobTerminationConditions::mutable_extents() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.JobTerminationConditions.extents)
  return _internal_mutable_extents();
}
inline void JobTerminationConditions::set_allocated_extents(::data_collection_configuration_request::CollectionExtents* extents) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete extents_;
  }
  if (extents) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      extents = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, extents, submessage_arena);
    }
    
  } else {
    
  }
  extents_ = extents;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.JobTerminationConditions.extents)
}

// -------------------------------------------------------------------

// TimeDeltaTriggerEvent

// .data_collection_configuration_request.TimeDeltaTriggerEvent.TimeTriggerType type = 1;
inline void TimeDeltaTriggerEvent::clear_type() {
  type_ = 0;
}
inline ::data_collection_configuration_request::TimeDeltaTriggerEvent_TimeTriggerType TimeDeltaTriggerEvent::_internal_type() const {
  return static_cast< ::data_collection_configuration_request::TimeDeltaTriggerEvent_TimeTriggerType >(type_);
}
inline ::data_collection_configuration_request::TimeDeltaTriggerEvent_TimeTriggerType TimeDeltaTriggerEvent::type() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.TimeDeltaTriggerEvent.type)
  return _internal_type();
}
inline void TimeDeltaTriggerEvent::_internal_set_type(::data_collection_configuration_request::TimeDeltaTriggerEvent_TimeTriggerType value) {
  
  type_ = value;
}
inline void TimeDeltaTriggerEvent::set_type(::data_collection_configuration_request::TimeDeltaTriggerEvent_TimeTriggerType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.TimeDeltaTriggerEvent.type)
}

// uint32 time_delta_milliseconds = 2;
inline void TimeDeltaTriggerEvent::clear_time_delta_milliseconds() {
  time_delta_milliseconds_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeDeltaTriggerEvent::_internal_time_delta_milliseconds() const {
  return time_delta_milliseconds_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeDeltaTriggerEvent::time_delta_milliseconds() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.TimeDeltaTriggerEvent.time_delta_milliseconds)
  return _internal_time_delta_milliseconds();
}
inline void TimeDeltaTriggerEvent::_internal_set_time_delta_milliseconds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  time_delta_milliseconds_ = value;
}
inline void TimeDeltaTriggerEvent::set_time_delta_milliseconds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time_delta_milliseconds(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.TimeDeltaTriggerEvent.time_delta_milliseconds)
}

// -------------------------------------------------------------------

// DistanceDeltaTriggerEvent

// uint32 distance_delta_meters = 1;
inline void DistanceDeltaTriggerEvent::clear_distance_delta_meters() {
  distance_delta_meters_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DistanceDeltaTriggerEvent::_internal_distance_delta_meters() const {
  return distance_delta_meters_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DistanceDeltaTriggerEvent::distance_delta_meters() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DistanceDeltaTriggerEvent.distance_delta_meters)
  return _internal_distance_delta_meters();
}
inline void DistanceDeltaTriggerEvent::_internal_set_distance_delta_meters(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  distance_delta_meters_ = value;
}
inline void DistanceDeltaTriggerEvent::set_distance_delta_meters(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_distance_delta_meters(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DistanceDeltaTriggerEvent.distance_delta_meters)
}

// -------------------------------------------------------------------

// SignalChangeTriggerEvent

// bool on_signal_change = 1;
inline void SignalChangeTriggerEvent::clear_on_signal_change() {
  on_signal_change_ = false;
}
inline bool SignalChangeTriggerEvent::_internal_on_signal_change() const {
  return on_signal_change_;
}
inline bool SignalChangeTriggerEvent::on_signal_change() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.SignalChangeTriggerEvent.on_signal_change)
  return _internal_on_signal_change();
}
inline void SignalChangeTriggerEvent::_internal_set_on_signal_change(bool value) {
  
  on_signal_change_ = value;
}
inline void SignalChangeTriggerEvent::set_on_signal_change(bool value) {
  _internal_set_on_signal_change(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.SignalChangeTriggerEvent.on_signal_change)
}

// .signal_source_definition.DefaultSource default_signal = 2;
inline bool SignalChangeTriggerEvent::_internal_has_default_signal() const {
  return signal_definition_case() == kDefaultSignal;
}
inline bool SignalChangeTriggerEvent::has_default_signal() const {
  return _internal_has_default_signal();
}
inline void SignalChangeTriggerEvent::set_has_default_signal() {
  _oneof_case_[0] = kDefaultSignal;
}
inline ::signal_source_definition::DefaultSource* SignalChangeTriggerEvent::release_default_signal() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.SignalChangeTriggerEvent.default_signal)
  if (_internal_has_default_signal()) {
    clear_has_signal_definition();
      ::signal_source_definition::DefaultSource* temp = signal_definition_.default_signal_;
    signal_definition_.default_signal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::signal_source_definition::DefaultSource& SignalChangeTriggerEvent::_internal_default_signal() const {
  return _internal_has_default_signal()
      ? *signal_definition_.default_signal_
      : *reinterpret_cast< ::signal_source_definition::DefaultSource*>(&::signal_source_definition::_DefaultSource_default_instance_);
}
inline const ::signal_source_definition::DefaultSource& SignalChangeTriggerEvent::default_signal() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.SignalChangeTriggerEvent.default_signal)
  return _internal_default_signal();
}
inline ::signal_source_definition::DefaultSource* SignalChangeTriggerEvent::_internal_mutable_default_signal() {
  if (!_internal_has_default_signal()) {
    clear_signal_definition();
    set_has_default_signal();
    signal_definition_.default_signal_ = CreateMaybeMessage< ::signal_source_definition::DefaultSource >(
        GetArenaNoVirtual());
  }
  return signal_definition_.default_signal_;
}
inline ::signal_source_definition::DefaultSource* SignalChangeTriggerEvent::mutable_default_signal() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.SignalChangeTriggerEvent.default_signal)
  return _internal_mutable_default_signal();
}

// .signal_source_definition.CanSource can_signal = 3;
inline bool SignalChangeTriggerEvent::_internal_has_can_signal() const {
  return signal_definition_case() == kCanSignal;
}
inline bool SignalChangeTriggerEvent::has_can_signal() const {
  return _internal_has_can_signal();
}
inline void SignalChangeTriggerEvent::set_has_can_signal() {
  _oneof_case_[0] = kCanSignal;
}
inline ::signal_source_definition::CanSource* SignalChangeTriggerEvent::release_can_signal() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.SignalChangeTriggerEvent.can_signal)
  if (_internal_has_can_signal()) {
    clear_has_signal_definition();
      ::signal_source_definition::CanSource* temp = signal_definition_.can_signal_;
    signal_definition_.can_signal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::signal_source_definition::CanSource& SignalChangeTriggerEvent::_internal_can_signal() const {
  return _internal_has_can_signal()
      ? *signal_definition_.can_signal_
      : *reinterpret_cast< ::signal_source_definition::CanSource*>(&::signal_source_definition::_CanSource_default_instance_);
}
inline const ::signal_source_definition::CanSource& SignalChangeTriggerEvent::can_signal() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.SignalChangeTriggerEvent.can_signal)
  return _internal_can_signal();
}
inline ::signal_source_definition::CanSource* SignalChangeTriggerEvent::_internal_mutable_can_signal() {
  if (!_internal_has_can_signal()) {
    clear_signal_definition();
    set_has_can_signal();
    signal_definition_.can_signal_ = CreateMaybeMessage< ::signal_source_definition::CanSource >(
        GetArenaNoVirtual());
  }
  return signal_definition_.can_signal_;
}
inline ::signal_source_definition::CanSource* SignalChangeTriggerEvent::mutable_can_signal() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.SignalChangeTriggerEvent.can_signal)
  return _internal_mutable_can_signal();
}

// .signal_source_definition.LinSource lin_signal = 4;
inline bool SignalChangeTriggerEvent::_internal_has_lin_signal() const {
  return signal_definition_case() == kLinSignal;
}
inline bool SignalChangeTriggerEvent::has_lin_signal() const {
  return _internal_has_lin_signal();
}
inline void SignalChangeTriggerEvent::set_has_lin_signal() {
  _oneof_case_[0] = kLinSignal;
}
inline ::signal_source_definition::LinSource* SignalChangeTriggerEvent::release_lin_signal() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.SignalChangeTriggerEvent.lin_signal)
  if (_internal_has_lin_signal()) {
    clear_has_signal_definition();
      ::signal_source_definition::LinSource* temp = signal_definition_.lin_signal_;
    signal_definition_.lin_signal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::signal_source_definition::LinSource& SignalChangeTriggerEvent::_internal_lin_signal() const {
  return _internal_has_lin_signal()
      ? *signal_definition_.lin_signal_
      : *reinterpret_cast< ::signal_source_definition::LinSource*>(&::signal_source_definition::_LinSource_default_instance_);
}
inline const ::signal_source_definition::LinSource& SignalChangeTriggerEvent::lin_signal() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.SignalChangeTriggerEvent.lin_signal)
  return _internal_lin_signal();
}
inline ::signal_source_definition::LinSource* SignalChangeTriggerEvent::_internal_mutable_lin_signal() {
  if (!_internal_has_lin_signal()) {
    clear_signal_definition();
    set_has_lin_signal();
    signal_definition_.lin_signal_ = CreateMaybeMessage< ::signal_source_definition::LinSource >(
        GetArenaNoVirtual());
  }
  return signal_definition_.lin_signal_;
}
inline ::signal_source_definition::LinSource* SignalChangeTriggerEvent::mutable_lin_signal() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.SignalChangeTriggerEvent.lin_signal)
  return _internal_mutable_lin_signal();
}

// .signal_source_definition.EthernetSource ethernet_signal = 5;
inline bool SignalChangeTriggerEvent::_internal_has_ethernet_signal() const {
  return signal_definition_case() == kEthernetSignal;
}
inline bool SignalChangeTriggerEvent::has_ethernet_signal() const {
  return _internal_has_ethernet_signal();
}
inline void SignalChangeTriggerEvent::set_has_ethernet_signal() {
  _oneof_case_[0] = kEthernetSignal;
}
inline ::signal_source_definition::EthernetSource* SignalChangeTriggerEvent::release_ethernet_signal() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.SignalChangeTriggerEvent.ethernet_signal)
  if (_internal_has_ethernet_signal()) {
    clear_has_signal_definition();
      ::signal_source_definition::EthernetSource* temp = signal_definition_.ethernet_signal_;
    signal_definition_.ethernet_signal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::signal_source_definition::EthernetSource& SignalChangeTriggerEvent::_internal_ethernet_signal() const {
  return _internal_has_ethernet_signal()
      ? *signal_definition_.ethernet_signal_
      : *reinterpret_cast< ::signal_source_definition::EthernetSource*>(&::signal_source_definition::_EthernetSource_default_instance_);
}
inline const ::signal_source_definition::EthernetSource& SignalChangeTriggerEvent::ethernet_signal() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.SignalChangeTriggerEvent.ethernet_signal)
  return _internal_ethernet_signal();
}
inline ::signal_source_definition::EthernetSource* SignalChangeTriggerEvent::_internal_mutable_ethernet_signal() {
  if (!_internal_has_ethernet_signal()) {
    clear_signal_definition();
    set_has_ethernet_signal();
    signal_definition_.ethernet_signal_ = CreateMaybeMessage< ::signal_source_definition::EthernetSource >(
        GetArenaNoVirtual());
  }
  return signal_definition_.ethernet_signal_;
}
inline ::signal_source_definition::EthernetSource* SignalChangeTriggerEvent::mutable_ethernet_signal() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.SignalChangeTriggerEvent.ethernet_signal)
  return _internal_mutable_ethernet_signal();
}

// .signal_source_definition.NetworkSource network_signal = 6;
inline bool SignalChangeTriggerEvent::_internal_has_network_signal() const {
  return signal_definition_case() == kNetworkSignal;
}
inline bool SignalChangeTriggerEvent::has_network_signal() const {
  return _internal_has_network_signal();
}
inline void SignalChangeTriggerEvent::set_has_network_signal() {
  _oneof_case_[0] = kNetworkSignal;
}
inline ::signal_source_definition::NetworkSource* SignalChangeTriggerEvent::release_network_signal() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.SignalChangeTriggerEvent.network_signal)
  if (_internal_has_network_signal()) {
    clear_has_signal_definition();
      ::signal_source_definition::NetworkSource* temp = signal_definition_.network_signal_;
    signal_definition_.network_signal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::signal_source_definition::NetworkSource& SignalChangeTriggerEvent::_internal_network_signal() const {
  return _internal_has_network_signal()
      ? *signal_definition_.network_signal_
      : *reinterpret_cast< ::signal_source_definition::NetworkSource*>(&::signal_source_definition::_NetworkSource_default_instance_);
}
inline const ::signal_source_definition::NetworkSource& SignalChangeTriggerEvent::network_signal() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.SignalChangeTriggerEvent.network_signal)
  return _internal_network_signal();
}
inline ::signal_source_definition::NetworkSource* SignalChangeTriggerEvent::_internal_mutable_network_signal() {
  if (!_internal_has_network_signal()) {
    clear_signal_definition();
    set_has_network_signal();
    signal_definition_.network_signal_ = CreateMaybeMessage< ::signal_source_definition::NetworkSource >(
        GetArenaNoVirtual());
  }
  return signal_definition_.network_signal_;
}
inline ::signal_source_definition::NetworkSource* SignalChangeTriggerEvent::mutable_network_signal() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.SignalChangeTriggerEvent.network_signal)
  return _internal_mutable_network_signal();
}

// .signal_source_definition.InternalSource internal_signal = 7;
inline bool SignalChangeTriggerEvent::_internal_has_internal_signal() const {
  return signal_definition_case() == kInternalSignal;
}
inline bool SignalChangeTriggerEvent::has_internal_signal() const {
  return _internal_has_internal_signal();
}
inline void SignalChangeTriggerEvent::set_has_internal_signal() {
  _oneof_case_[0] = kInternalSignal;
}
inline ::signal_source_definition::InternalSource* SignalChangeTriggerEvent::release_internal_signal() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.SignalChangeTriggerEvent.internal_signal)
  if (_internal_has_internal_signal()) {
    clear_has_signal_definition();
      ::signal_source_definition::InternalSource* temp = signal_definition_.internal_signal_;
    signal_definition_.internal_signal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::signal_source_definition::InternalSource& SignalChangeTriggerEvent::_internal_internal_signal() const {
  return _internal_has_internal_signal()
      ? *signal_definition_.internal_signal_
      : *reinterpret_cast< ::signal_source_definition::InternalSource*>(&::signal_source_definition::_InternalSource_default_instance_);
}
inline const ::signal_source_definition::InternalSource& SignalChangeTriggerEvent::internal_signal() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.SignalChangeTriggerEvent.internal_signal)
  return _internal_internal_signal();
}
inline ::signal_source_definition::InternalSource* SignalChangeTriggerEvent::_internal_mutable_internal_signal() {
  if (!_internal_has_internal_signal()) {
    clear_signal_definition();
    set_has_internal_signal();
    signal_definition_.internal_signal_ = CreateMaybeMessage< ::signal_source_definition::InternalSource >(
        GetArenaNoVirtual());
  }
  return signal_definition_.internal_signal_;
}
inline ::signal_source_definition::InternalSource* SignalChangeTriggerEvent::mutable_internal_signal() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.SignalChangeTriggerEvent.internal_signal)
  return _internal_mutable_internal_signal();
}

// .signal_source_definition.ProcessingToolboxSource processing_toolbox_signal = 8;
inline bool SignalChangeTriggerEvent::_internal_has_processing_toolbox_signal() const {
  return signal_definition_case() == kProcessingToolboxSignal;
}
inline bool SignalChangeTriggerEvent::has_processing_toolbox_signal() const {
  return _internal_has_processing_toolbox_signal();
}
inline void SignalChangeTriggerEvent::set_has_processing_toolbox_signal() {
  _oneof_case_[0] = kProcessingToolboxSignal;
}
inline ::signal_source_definition::ProcessingToolboxSource* SignalChangeTriggerEvent::release_processing_toolbox_signal() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.SignalChangeTriggerEvent.processing_toolbox_signal)
  if (_internal_has_processing_toolbox_signal()) {
    clear_has_signal_definition();
      ::signal_source_definition::ProcessingToolboxSource* temp = signal_definition_.processing_toolbox_signal_;
    signal_definition_.processing_toolbox_signal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::signal_source_definition::ProcessingToolboxSource& SignalChangeTriggerEvent::_internal_processing_toolbox_signal() const {
  return _internal_has_processing_toolbox_signal()
      ? *signal_definition_.processing_toolbox_signal_
      : *reinterpret_cast< ::signal_source_definition::ProcessingToolboxSource*>(&::signal_source_definition::_ProcessingToolboxSource_default_instance_);
}
inline const ::signal_source_definition::ProcessingToolboxSource& SignalChangeTriggerEvent::processing_toolbox_signal() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.SignalChangeTriggerEvent.processing_toolbox_signal)
  return _internal_processing_toolbox_signal();
}
inline ::signal_source_definition::ProcessingToolboxSource* SignalChangeTriggerEvent::_internal_mutable_processing_toolbox_signal() {
  if (!_internal_has_processing_toolbox_signal()) {
    clear_signal_definition();
    set_has_processing_toolbox_signal();
    signal_definition_.processing_toolbox_signal_ = CreateMaybeMessage< ::signal_source_definition::ProcessingToolboxSource >(
        GetArenaNoVirtual());
  }
  return signal_definition_.processing_toolbox_signal_;
}
inline ::signal_source_definition::ProcessingToolboxSource* SignalChangeTriggerEvent::mutable_processing_toolbox_signal() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.SignalChangeTriggerEvent.processing_toolbox_signal)
  return _internal_mutable_processing_toolbox_signal();
}

// .signal_source_definition.ThriftmeSource thriftme_signal = 9;
inline bool SignalChangeTriggerEvent::_internal_has_thriftme_signal() const {
  return signal_definition_case() == kThriftmeSignal;
}
inline bool SignalChangeTriggerEvent::has_thriftme_signal() const {
  return _internal_has_thriftme_signal();
}
inline void SignalChangeTriggerEvent::set_has_thriftme_signal() {
  _oneof_case_[0] = kThriftmeSignal;
}
inline ::signal_source_definition::ThriftmeSource* SignalChangeTriggerEvent::release_thriftme_signal() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.SignalChangeTriggerEvent.thriftme_signal)
  if (_internal_has_thriftme_signal()) {
    clear_has_signal_definition();
      ::signal_source_definition::ThriftmeSource* temp = signal_definition_.thriftme_signal_;
    signal_definition_.thriftme_signal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::signal_source_definition::ThriftmeSource& SignalChangeTriggerEvent::_internal_thriftme_signal() const {
  return _internal_has_thriftme_signal()
      ? *signal_definition_.thriftme_signal_
      : *reinterpret_cast< ::signal_source_definition::ThriftmeSource*>(&::signal_source_definition::_ThriftmeSource_default_instance_);
}
inline const ::signal_source_definition::ThriftmeSource& SignalChangeTriggerEvent::thriftme_signal() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.SignalChangeTriggerEvent.thriftme_signal)
  return _internal_thriftme_signal();
}
inline ::signal_source_definition::ThriftmeSource* SignalChangeTriggerEvent::_internal_mutable_thriftme_signal() {
  if (!_internal_has_thriftme_signal()) {
    clear_signal_definition();
    set_has_thriftme_signal();
    signal_definition_.thriftme_signal_ = CreateMaybeMessage< ::signal_source_definition::ThriftmeSource >(
        GetArenaNoVirtual());
  }
  return signal_definition_.thriftme_signal_;
}
inline ::signal_source_definition::ThriftmeSource* SignalChangeTriggerEvent::mutable_thriftme_signal() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.SignalChangeTriggerEvent.thriftme_signal)
  return _internal_mutable_thriftme_signal();
}

inline bool SignalChangeTriggerEvent::has_signal_definition() const {
  return signal_definition_case() != SIGNAL_DEFINITION_NOT_SET;
}
inline void SignalChangeTriggerEvent::clear_has_signal_definition() {
  _oneof_case_[0] = SIGNAL_DEFINITION_NOT_SET;
}
inline SignalChangeTriggerEvent::SignalDefinitionCase SignalChangeTriggerEvent::signal_definition_case() const {
  return SignalChangeTriggerEvent::SignalDefinitionCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// SignalTransitionTriggerEvent

// repeated .logical_expression.LogicalExpression logical_expression = 1;
inline int SignalTransitionTriggerEvent::_internal_logical_expression_size() const {
  return logical_expression_.size();
}
inline int SignalTransitionTriggerEvent::logical_expression_size() const {
  return _internal_logical_expression_size();
}
inline ::logical_expression::LogicalExpression* SignalTransitionTriggerEvent::mutable_logical_expression(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.SignalTransitionTriggerEvent.logical_expression)
  return logical_expression_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::logical_expression::LogicalExpression >*
SignalTransitionTriggerEvent::mutable_logical_expression() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.SignalTransitionTriggerEvent.logical_expression)
  return &logical_expression_;
}
inline const ::logical_expression::LogicalExpression& SignalTransitionTriggerEvent::_internal_logical_expression(int index) const {
  return logical_expression_.Get(index);
}
inline const ::logical_expression::LogicalExpression& SignalTransitionTriggerEvent::logical_expression(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.SignalTransitionTriggerEvent.logical_expression)
  return _internal_logical_expression(index);
}
inline ::logical_expression::LogicalExpression* SignalTransitionTriggerEvent::_internal_add_logical_expression() {
  return logical_expression_.Add();
}
inline ::logical_expression::LogicalExpression* SignalTransitionTriggerEvent::add_logical_expression() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.SignalTransitionTriggerEvent.logical_expression)
  return _internal_add_logical_expression();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::logical_expression::LogicalExpression >&
SignalTransitionTriggerEvent::logical_expression() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.SignalTransitionTriggerEvent.logical_expression)
  return logical_expression_;
}

// -------------------------------------------------------------------

// SignalCollectionCount

// uint32 count = 1;
inline void SignalCollectionCount::clear_count() {
  count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SignalCollectionCount::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SignalCollectionCount::count() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.SignalCollectionCount.count)
  return _internal_count();
}
inline void SignalCollectionCount::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  count_ = value;
}
inline void SignalCollectionCount::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.SignalCollectionCount.count)
}

// -------------------------------------------------------------------

// GeoRegionTriggerEvent

// .data_collection_configuration_request.CompositeLocation geo_area = 1;
inline bool GeoRegionTriggerEvent::_internal_has_geo_area() const {
  return this != internal_default_instance() && geo_area_ != nullptr;
}
inline bool GeoRegionTriggerEvent::has_geo_area() const {
  return _internal_has_geo_area();
}
inline void GeoRegionTriggerEvent::clear_geo_area() {
  if (GetArenaNoVirtual() == nullptr && geo_area_ != nullptr) {
    delete geo_area_;
  }
  geo_area_ = nullptr;
}
inline const ::data_collection_configuration_request::CompositeLocation& GeoRegionTriggerEvent::_internal_geo_area() const {
  const ::data_collection_configuration_request::CompositeLocation* p = geo_area_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::CompositeLocation*>(
      &::data_collection_configuration_request::_CompositeLocation_default_instance_);
}
inline const ::data_collection_configuration_request::CompositeLocation& GeoRegionTriggerEvent::geo_area() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.GeoRegionTriggerEvent.geo_area)
  return _internal_geo_area();
}
inline ::data_collection_configuration_request::CompositeLocation* GeoRegionTriggerEvent::release_geo_area() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.GeoRegionTriggerEvent.geo_area)
  
  ::data_collection_configuration_request::CompositeLocation* temp = geo_area_;
  geo_area_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::CompositeLocation* GeoRegionTriggerEvent::_internal_mutable_geo_area() {
  
  if (geo_area_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::CompositeLocation>(GetArenaNoVirtual());
    geo_area_ = p;
  }
  return geo_area_;
}
inline ::data_collection_configuration_request::CompositeLocation* GeoRegionTriggerEvent::mutable_geo_area() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.GeoRegionTriggerEvent.geo_area)
  return _internal_mutable_geo_area();
}
inline void GeoRegionTriggerEvent::set_allocated_geo_area(::data_collection_configuration_request::CompositeLocation* geo_area) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete geo_area_;
  }
  if (geo_area) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      geo_area = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, geo_area, submessage_arena);
    }
    
  } else {
    
  }
  geo_area_ = geo_area;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.GeoRegionTriggerEvent.geo_area)
}

// .data_collection_configuration_request.GeoAction geo_action = 2;
inline bool GeoRegionTriggerEvent::_internal_has_geo_action() const {
  return this != internal_default_instance() && geo_action_ != nullptr;
}
inline bool GeoRegionTriggerEvent::has_geo_action() const {
  return _internal_has_geo_action();
}
inline void GeoRegionTriggerEvent::clear_geo_action() {
  if (GetArenaNoVirtual() == nullptr && geo_action_ != nullptr) {
    delete geo_action_;
  }
  geo_action_ = nullptr;
}
inline const ::data_collection_configuration_request::GeoAction& GeoRegionTriggerEvent::_internal_geo_action() const {
  const ::data_collection_configuration_request::GeoAction* p = geo_action_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::GeoAction*>(
      &::data_collection_configuration_request::_GeoAction_default_instance_);
}
inline const ::data_collection_configuration_request::GeoAction& GeoRegionTriggerEvent::geo_action() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.GeoRegionTriggerEvent.geo_action)
  return _internal_geo_action();
}
inline ::data_collection_configuration_request::GeoAction* GeoRegionTriggerEvent::release_geo_action() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.GeoRegionTriggerEvent.geo_action)
  
  ::data_collection_configuration_request::GeoAction* temp = geo_action_;
  geo_action_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::GeoAction* GeoRegionTriggerEvent::_internal_mutable_geo_action() {
  
  if (geo_action_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::GeoAction>(GetArenaNoVirtual());
    geo_action_ = p;
  }
  return geo_action_;
}
inline ::data_collection_configuration_request::GeoAction* GeoRegionTriggerEvent::mutable_geo_action() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.GeoRegionTriggerEvent.geo_action)
  return _internal_mutable_geo_action();
}
inline void GeoRegionTriggerEvent::set_allocated_geo_action(::data_collection_configuration_request::GeoAction* geo_action) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete geo_action_;
  }
  if (geo_action) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      geo_action = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, geo_action, submessage_arena);
    }
    
  } else {
    
  }
  geo_action_ = geo_action;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.GeoRegionTriggerEvent.geo_action)
}

// -------------------------------------------------------------------

// CollectAfterTriggerEvent

// double collect_after_distance_meter_min = 1;
inline void CollectAfterTriggerEvent::clear_collect_after_distance_meter_min() {
  collect_after_distance_meter_min_ = 0;
}
inline double CollectAfterTriggerEvent::_internal_collect_after_distance_meter_min() const {
  return collect_after_distance_meter_min_;
}
inline double CollectAfterTriggerEvent::collect_after_distance_meter_min() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CollectAfterTriggerEvent.collect_after_distance_meter_min)
  return _internal_collect_after_distance_meter_min();
}
inline void CollectAfterTriggerEvent::_internal_set_collect_after_distance_meter_min(double value) {
  
  collect_after_distance_meter_min_ = value;
}
inline void CollectAfterTriggerEvent::set_collect_after_distance_meter_min(double value) {
  _internal_set_collect_after_distance_meter_min(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.CollectAfterTriggerEvent.collect_after_distance_meter_min)
}

// double collect_after_distance_meter_max = 2;
inline void CollectAfterTriggerEvent::clear_collect_after_distance_meter_max() {
  collect_after_distance_meter_max_ = 0;
}
inline double CollectAfterTriggerEvent::_internal_collect_after_distance_meter_max() const {
  return collect_after_distance_meter_max_;
}
inline double CollectAfterTriggerEvent::collect_after_distance_meter_max() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CollectAfterTriggerEvent.collect_after_distance_meter_max)
  return _internal_collect_after_distance_meter_max();
}
inline void CollectAfterTriggerEvent::_internal_set_collect_after_distance_meter_max(double value) {
  
  collect_after_distance_meter_max_ = value;
}
inline void CollectAfterTriggerEvent::set_collect_after_distance_meter_max(double value) {
  _internal_set_collect_after_distance_meter_max(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.CollectAfterTriggerEvent.collect_after_distance_meter_max)
}

// double collect_after_time_seconds_min = 3;
inline void CollectAfterTriggerEvent::clear_collect_after_time_seconds_min() {
  collect_after_time_seconds_min_ = 0;
}
inline double CollectAfterTriggerEvent::_internal_collect_after_time_seconds_min() const {
  return collect_after_time_seconds_min_;
}
inline double CollectAfterTriggerEvent::collect_after_time_seconds_min() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CollectAfterTriggerEvent.collect_after_time_seconds_min)
  return _internal_collect_after_time_seconds_min();
}
inline void CollectAfterTriggerEvent::_internal_set_collect_after_time_seconds_min(double value) {
  
  collect_after_time_seconds_min_ = value;
}
inline void CollectAfterTriggerEvent::set_collect_after_time_seconds_min(double value) {
  _internal_set_collect_after_time_seconds_min(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.CollectAfterTriggerEvent.collect_after_time_seconds_min)
}

// double collect_after_time_seconds_max = 4;
inline void CollectAfterTriggerEvent::clear_collect_after_time_seconds_max() {
  collect_after_time_seconds_max_ = 0;
}
inline double CollectAfterTriggerEvent::_internal_collect_after_time_seconds_max() const {
  return collect_after_time_seconds_max_;
}
inline double CollectAfterTriggerEvent::collect_after_time_seconds_max() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CollectAfterTriggerEvent.collect_after_time_seconds_max)
  return _internal_collect_after_time_seconds_max();
}
inline void CollectAfterTriggerEvent::_internal_set_collect_after_time_seconds_max(double value) {
  
  collect_after_time_seconds_max_ = value;
}
inline void CollectAfterTriggerEvent::set_collect_after_time_seconds_max(double value) {
  _internal_set_collect_after_time_seconds_max(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.CollectAfterTriggerEvent.collect_after_time_seconds_max)
}

// -------------------------------------------------------------------

// GeoAction

// bool on_entry = 1;
inline void GeoAction::clear_on_entry() {
  on_entry_ = false;
}
inline bool GeoAction::_internal_on_entry() const {
  return on_entry_;
}
inline bool GeoAction::on_entry() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.GeoAction.on_entry)
  return _internal_on_entry();
}
inline void GeoAction::_internal_set_on_entry(bool value) {
  
  on_entry_ = value;
}
inline void GeoAction::set_on_entry(bool value) {
  _internal_set_on_entry(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.GeoAction.on_entry)
}

// bool on_exit = 2;
inline void GeoAction::clear_on_exit() {
  on_exit_ = false;
}
inline bool GeoAction::_internal_on_exit() const {
  return on_exit_;
}
inline bool GeoAction::on_exit() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.GeoAction.on_exit)
  return _internal_on_exit();
}
inline void GeoAction::_internal_set_on_exit(bool value) {
  
  on_exit_ = value;
}
inline void GeoAction::set_on_exit(bool value) {
  _internal_set_on_exit(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.GeoAction.on_exit)
}

// bool collect_while_inside = 3;
inline void GeoAction::clear_collect_while_inside() {
  collect_while_inside_ = false;
}
inline bool GeoAction::_internal_collect_while_inside() const {
  return collect_while_inside_;
}
inline bool GeoAction::collect_while_inside() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.GeoAction.collect_while_inside)
  return _internal_collect_while_inside();
}
inline void GeoAction::_internal_set_collect_while_inside(bool value) {
  
  collect_while_inside_ = value;
}
inline void GeoAction::set_collect_while_inside(bool value) {
  _internal_set_collect_while_inside(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.GeoAction.collect_while_inside)
}

// bool collect_while_outside = 4;
inline void GeoAction::clear_collect_while_outside() {
  collect_while_outside_ = false;
}
inline bool GeoAction::_internal_collect_while_outside() const {
  return collect_while_outside_;
}
inline bool GeoAction::collect_while_outside() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.GeoAction.collect_while_outside)
  return _internal_collect_while_outside();
}
inline void GeoAction::_internal_set_collect_while_outside(bool value) {
  
  collect_while_outside_ = value;
}
inline void GeoAction::set_collect_while_outside(bool value) {
  _internal_set_collect_while_outside(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.GeoAction.collect_while_outside)
}

// -------------------------------------------------------------------

// KeyValuePair

// string key = 1;
inline void KeyValuePair::clear_key() {
  key_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& KeyValuePair::key() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.KeyValuePair.key)
  return _internal_key();
}
inline void KeyValuePair::set_key(const std::string& value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.KeyValuePair.key)
}
inline std::string* KeyValuePair::mutable_key() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.KeyValuePair.key)
  return _internal_mutable_key();
}
inline const std::string& KeyValuePair::_internal_key() const {
  return key_.GetNoArena();
}
inline void KeyValuePair::_internal_set_key(const std::string& value) {
  
  key_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void KeyValuePair::set_key(std::string&& value) {
  
  key_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:data_collection_configuration_request.KeyValuePair.key)
}
inline void KeyValuePair::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_collection_configuration_request.KeyValuePair.key)
}
inline void KeyValuePair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_collection_configuration_request.KeyValuePair.key)
}
inline std::string* KeyValuePair::_internal_mutable_key() {
  
  return key_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* KeyValuePair::release_key() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.KeyValuePair.key)
  
  return key_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void KeyValuePair::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.KeyValuePair.key)
}

// string value = 2;
inline void KeyValuePair::clear_value() {
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& KeyValuePair::value() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.KeyValuePair.value)
  return _internal_value();
}
inline void KeyValuePair::set_value(const std::string& value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.KeyValuePair.value)
}
inline std::string* KeyValuePair::mutable_value() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.KeyValuePair.value)
  return _internal_mutable_value();
}
inline const std::string& KeyValuePair::_internal_value() const {
  return value_.GetNoArena();
}
inline void KeyValuePair::_internal_set_value(const std::string& value) {
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void KeyValuePair::set_value(std::string&& value) {
  
  value_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:data_collection_configuration_request.KeyValuePair.value)
}
inline void KeyValuePair::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_collection_configuration_request.KeyValuePair.value)
}
inline void KeyValuePair::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_collection_configuration_request.KeyValuePair.value)
}
inline std::string* KeyValuePair::_internal_mutable_value() {
  
  return value_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* KeyValuePair::release_value() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.KeyValuePair.value)
  
  return value_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void KeyValuePair::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.KeyValuePair.value)
}

// -------------------------------------------------------------------

// TriggerAnnotationID

// uint32 id = 1;
inline void TriggerAnnotationID::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TriggerAnnotationID::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TriggerAnnotationID::id() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.TriggerAnnotationID.id)
  return _internal_id();
}
inline void TriggerAnnotationID::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void TriggerAnnotationID::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.TriggerAnnotationID.id)
}

// -------------------------------------------------------------------

// Trigger

// repeated .data_collection_configuration_request.TriggerAnnotationID trigger_annotation_ids = 1;
inline int Trigger::_internal_trigger_annotation_ids_size() const {
  return trigger_annotation_ids_.size();
}
inline int Trigger::trigger_annotation_ids_size() const {
  return _internal_trigger_annotation_ids_size();
}
inline void Trigger::clear_trigger_annotation_ids() {
  trigger_annotation_ids_.Clear();
}
inline ::data_collection_configuration_request::TriggerAnnotationID* Trigger::mutable_trigger_annotation_ids(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Trigger.trigger_annotation_ids)
  return trigger_annotation_ids_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::TriggerAnnotationID >*
Trigger::mutable_trigger_annotation_ids() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.Trigger.trigger_annotation_ids)
  return &trigger_annotation_ids_;
}
inline const ::data_collection_configuration_request::TriggerAnnotationID& Trigger::_internal_trigger_annotation_ids(int index) const {
  return trigger_annotation_ids_.Get(index);
}
inline const ::data_collection_configuration_request::TriggerAnnotationID& Trigger::trigger_annotation_ids(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Trigger.trigger_annotation_ids)
  return _internal_trigger_annotation_ids(index);
}
inline ::data_collection_configuration_request::TriggerAnnotationID* Trigger::_internal_add_trigger_annotation_ids() {
  return trigger_annotation_ids_.Add();
}
inline ::data_collection_configuration_request::TriggerAnnotationID* Trigger::add_trigger_annotation_ids() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.Trigger.trigger_annotation_ids)
  return _internal_add_trigger_annotation_ids();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::TriggerAnnotationID >&
Trigger::trigger_annotation_ids() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.Trigger.trigger_annotation_ids)
  return trigger_annotation_ids_;
}

// .data_collection_configuration_request.TimeDeltaTriggerEvent time_delta_trigger_event = 2;
inline bool Trigger::_internal_has_time_delta_trigger_event() const {
  return CollectionConfiguration_case() == kTimeDeltaTriggerEvent;
}
inline bool Trigger::has_time_delta_trigger_event() const {
  return _internal_has_time_delta_trigger_event();
}
inline void Trigger::set_has_time_delta_trigger_event() {
  _oneof_case_[0] = kTimeDeltaTriggerEvent;
}
inline void Trigger::clear_time_delta_trigger_event() {
  if (_internal_has_time_delta_trigger_event()) {
    delete CollectionConfiguration_.time_delta_trigger_event_;
    clear_has_CollectionConfiguration();
  }
}
inline ::data_collection_configuration_request::TimeDeltaTriggerEvent* Trigger::release_time_delta_trigger_event() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Trigger.time_delta_trigger_event)
  if (_internal_has_time_delta_trigger_event()) {
    clear_has_CollectionConfiguration();
      ::data_collection_configuration_request::TimeDeltaTriggerEvent* temp = CollectionConfiguration_.time_delta_trigger_event_;
    CollectionConfiguration_.time_delta_trigger_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::data_collection_configuration_request::TimeDeltaTriggerEvent& Trigger::_internal_time_delta_trigger_event() const {
  return _internal_has_time_delta_trigger_event()
      ? *CollectionConfiguration_.time_delta_trigger_event_
      : *reinterpret_cast< ::data_collection_configuration_request::TimeDeltaTriggerEvent*>(&::data_collection_configuration_request::_TimeDeltaTriggerEvent_default_instance_);
}
inline const ::data_collection_configuration_request::TimeDeltaTriggerEvent& Trigger::time_delta_trigger_event() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Trigger.time_delta_trigger_event)
  return _internal_time_delta_trigger_event();
}
inline ::data_collection_configuration_request::TimeDeltaTriggerEvent* Trigger::_internal_mutable_time_delta_trigger_event() {
  if (!_internal_has_time_delta_trigger_event()) {
    clear_CollectionConfiguration();
    set_has_time_delta_trigger_event();
    CollectionConfiguration_.time_delta_trigger_event_ = CreateMaybeMessage< ::data_collection_configuration_request::TimeDeltaTriggerEvent >(
        GetArenaNoVirtual());
  }
  return CollectionConfiguration_.time_delta_trigger_event_;
}
inline ::data_collection_configuration_request::TimeDeltaTriggerEvent* Trigger::mutable_time_delta_trigger_event() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Trigger.time_delta_trigger_event)
  return _internal_mutable_time_delta_trigger_event();
}

// .data_collection_configuration_request.DistanceDeltaTriggerEvent distance_delta_trigger_event = 3;
inline bool Trigger::_internal_has_distance_delta_trigger_event() const {
  return CollectionConfiguration_case() == kDistanceDeltaTriggerEvent;
}
inline bool Trigger::has_distance_delta_trigger_event() const {
  return _internal_has_distance_delta_trigger_event();
}
inline void Trigger::set_has_distance_delta_trigger_event() {
  _oneof_case_[0] = kDistanceDeltaTriggerEvent;
}
inline void Trigger::clear_distance_delta_trigger_event() {
  if (_internal_has_distance_delta_trigger_event()) {
    delete CollectionConfiguration_.distance_delta_trigger_event_;
    clear_has_CollectionConfiguration();
  }
}
inline ::data_collection_configuration_request::DistanceDeltaTriggerEvent* Trigger::release_distance_delta_trigger_event() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Trigger.distance_delta_trigger_event)
  if (_internal_has_distance_delta_trigger_event()) {
    clear_has_CollectionConfiguration();
      ::data_collection_configuration_request::DistanceDeltaTriggerEvent* temp = CollectionConfiguration_.distance_delta_trigger_event_;
    CollectionConfiguration_.distance_delta_trigger_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::data_collection_configuration_request::DistanceDeltaTriggerEvent& Trigger::_internal_distance_delta_trigger_event() const {
  return _internal_has_distance_delta_trigger_event()
      ? *CollectionConfiguration_.distance_delta_trigger_event_
      : *reinterpret_cast< ::data_collection_configuration_request::DistanceDeltaTriggerEvent*>(&::data_collection_configuration_request::_DistanceDeltaTriggerEvent_default_instance_);
}
inline const ::data_collection_configuration_request::DistanceDeltaTriggerEvent& Trigger::distance_delta_trigger_event() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Trigger.distance_delta_trigger_event)
  return _internal_distance_delta_trigger_event();
}
inline ::data_collection_configuration_request::DistanceDeltaTriggerEvent* Trigger::_internal_mutable_distance_delta_trigger_event() {
  if (!_internal_has_distance_delta_trigger_event()) {
    clear_CollectionConfiguration();
    set_has_distance_delta_trigger_event();
    CollectionConfiguration_.distance_delta_trigger_event_ = CreateMaybeMessage< ::data_collection_configuration_request::DistanceDeltaTriggerEvent >(
        GetArenaNoVirtual());
  }
  return CollectionConfiguration_.distance_delta_trigger_event_;
}
inline ::data_collection_configuration_request::DistanceDeltaTriggerEvent* Trigger::mutable_distance_delta_trigger_event() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Trigger.distance_delta_trigger_event)
  return _internal_mutable_distance_delta_trigger_event();
}

// .data_collection_configuration_request.SignalChangeTriggerEvent signal_change_trigger_event = 4;
inline bool Trigger::_internal_has_signal_change_trigger_event() const {
  return CollectionConfiguration_case() == kSignalChangeTriggerEvent;
}
inline bool Trigger::has_signal_change_trigger_event() const {
  return _internal_has_signal_change_trigger_event();
}
inline void Trigger::set_has_signal_change_trigger_event() {
  _oneof_case_[0] = kSignalChangeTriggerEvent;
}
inline void Trigger::clear_signal_change_trigger_event() {
  if (_internal_has_signal_change_trigger_event()) {
    delete CollectionConfiguration_.signal_change_trigger_event_;
    clear_has_CollectionConfiguration();
  }
}
inline ::data_collection_configuration_request::SignalChangeTriggerEvent* Trigger::release_signal_change_trigger_event() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Trigger.signal_change_trigger_event)
  if (_internal_has_signal_change_trigger_event()) {
    clear_has_CollectionConfiguration();
      ::data_collection_configuration_request::SignalChangeTriggerEvent* temp = CollectionConfiguration_.signal_change_trigger_event_;
    CollectionConfiguration_.signal_change_trigger_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::data_collection_configuration_request::SignalChangeTriggerEvent& Trigger::_internal_signal_change_trigger_event() const {
  return _internal_has_signal_change_trigger_event()
      ? *CollectionConfiguration_.signal_change_trigger_event_
      : *reinterpret_cast< ::data_collection_configuration_request::SignalChangeTriggerEvent*>(&::data_collection_configuration_request::_SignalChangeTriggerEvent_default_instance_);
}
inline const ::data_collection_configuration_request::SignalChangeTriggerEvent& Trigger::signal_change_trigger_event() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Trigger.signal_change_trigger_event)
  return _internal_signal_change_trigger_event();
}
inline ::data_collection_configuration_request::SignalChangeTriggerEvent* Trigger::_internal_mutable_signal_change_trigger_event() {
  if (!_internal_has_signal_change_trigger_event()) {
    clear_CollectionConfiguration();
    set_has_signal_change_trigger_event();
    CollectionConfiguration_.signal_change_trigger_event_ = CreateMaybeMessage< ::data_collection_configuration_request::SignalChangeTriggerEvent >(
        GetArenaNoVirtual());
  }
  return CollectionConfiguration_.signal_change_trigger_event_;
}
inline ::data_collection_configuration_request::SignalChangeTriggerEvent* Trigger::mutable_signal_change_trigger_event() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Trigger.signal_change_trigger_event)
  return _internal_mutable_signal_change_trigger_event();
}

// .data_collection_configuration_request.SignalTransitionTriggerEvent signal_transition_trigger_event = 5;
inline bool Trigger::_internal_has_signal_transition_trigger_event() const {
  return CollectionConfiguration_case() == kSignalTransitionTriggerEvent;
}
inline bool Trigger::has_signal_transition_trigger_event() const {
  return _internal_has_signal_transition_trigger_event();
}
inline void Trigger::set_has_signal_transition_trigger_event() {
  _oneof_case_[0] = kSignalTransitionTriggerEvent;
}
inline void Trigger::clear_signal_transition_trigger_event() {
  if (_internal_has_signal_transition_trigger_event()) {
    delete CollectionConfiguration_.signal_transition_trigger_event_;
    clear_has_CollectionConfiguration();
  }
}
inline ::data_collection_configuration_request::SignalTransitionTriggerEvent* Trigger::release_signal_transition_trigger_event() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Trigger.signal_transition_trigger_event)
  if (_internal_has_signal_transition_trigger_event()) {
    clear_has_CollectionConfiguration();
      ::data_collection_configuration_request::SignalTransitionTriggerEvent* temp = CollectionConfiguration_.signal_transition_trigger_event_;
    CollectionConfiguration_.signal_transition_trigger_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::data_collection_configuration_request::SignalTransitionTriggerEvent& Trigger::_internal_signal_transition_trigger_event() const {
  return _internal_has_signal_transition_trigger_event()
      ? *CollectionConfiguration_.signal_transition_trigger_event_
      : *reinterpret_cast< ::data_collection_configuration_request::SignalTransitionTriggerEvent*>(&::data_collection_configuration_request::_SignalTransitionTriggerEvent_default_instance_);
}
inline const ::data_collection_configuration_request::SignalTransitionTriggerEvent& Trigger::signal_transition_trigger_event() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Trigger.signal_transition_trigger_event)
  return _internal_signal_transition_trigger_event();
}
inline ::data_collection_configuration_request::SignalTransitionTriggerEvent* Trigger::_internal_mutable_signal_transition_trigger_event() {
  if (!_internal_has_signal_transition_trigger_event()) {
    clear_CollectionConfiguration();
    set_has_signal_transition_trigger_event();
    CollectionConfiguration_.signal_transition_trigger_event_ = CreateMaybeMessage< ::data_collection_configuration_request::SignalTransitionTriggerEvent >(
        GetArenaNoVirtual());
  }
  return CollectionConfiguration_.signal_transition_trigger_event_;
}
inline ::data_collection_configuration_request::SignalTransitionTriggerEvent* Trigger::mutable_signal_transition_trigger_event() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Trigger.signal_transition_trigger_event)
  return _internal_mutable_signal_transition_trigger_event();
}

// .data_collection_configuration_request.GeoRegionTriggerEvent geo_region_trigger_event = 6;
inline bool Trigger::_internal_has_geo_region_trigger_event() const {
  return CollectionConfiguration_case() == kGeoRegionTriggerEvent;
}
inline bool Trigger::has_geo_region_trigger_event() const {
  return _internal_has_geo_region_trigger_event();
}
inline void Trigger::set_has_geo_region_trigger_event() {
  _oneof_case_[0] = kGeoRegionTriggerEvent;
}
inline void Trigger::clear_geo_region_trigger_event() {
  if (_internal_has_geo_region_trigger_event()) {
    delete CollectionConfiguration_.geo_region_trigger_event_;
    clear_has_CollectionConfiguration();
  }
}
inline ::data_collection_configuration_request::GeoRegionTriggerEvent* Trigger::release_geo_region_trigger_event() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Trigger.geo_region_trigger_event)
  if (_internal_has_geo_region_trigger_event()) {
    clear_has_CollectionConfiguration();
      ::data_collection_configuration_request::GeoRegionTriggerEvent* temp = CollectionConfiguration_.geo_region_trigger_event_;
    CollectionConfiguration_.geo_region_trigger_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::data_collection_configuration_request::GeoRegionTriggerEvent& Trigger::_internal_geo_region_trigger_event() const {
  return _internal_has_geo_region_trigger_event()
      ? *CollectionConfiguration_.geo_region_trigger_event_
      : *reinterpret_cast< ::data_collection_configuration_request::GeoRegionTriggerEvent*>(&::data_collection_configuration_request::_GeoRegionTriggerEvent_default_instance_);
}
inline const ::data_collection_configuration_request::GeoRegionTriggerEvent& Trigger::geo_region_trigger_event() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Trigger.geo_region_trigger_event)
  return _internal_geo_region_trigger_event();
}
inline ::data_collection_configuration_request::GeoRegionTriggerEvent* Trigger::_internal_mutable_geo_region_trigger_event() {
  if (!_internal_has_geo_region_trigger_event()) {
    clear_CollectionConfiguration();
    set_has_geo_region_trigger_event();
    CollectionConfiguration_.geo_region_trigger_event_ = CreateMaybeMessage< ::data_collection_configuration_request::GeoRegionTriggerEvent >(
        GetArenaNoVirtual());
  }
  return CollectionConfiguration_.geo_region_trigger_event_;
}
inline ::data_collection_configuration_request::GeoRegionTriggerEvent* Trigger::mutable_geo_region_trigger_event() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Trigger.geo_region_trigger_event)
  return _internal_mutable_geo_region_trigger_event();
}

// .data_collection_configuration_request.SignalCollectionCount count = 7;
inline bool Trigger::_internal_has_count() const {
  return CollectionConfiguration_case() == kCount;
}
inline bool Trigger::has_count() const {
  return _internal_has_count();
}
inline void Trigger::set_has_count() {
  _oneof_case_[0] = kCount;
}
inline void Trigger::clear_count() {
  if (_internal_has_count()) {
    delete CollectionConfiguration_.count_;
    clear_has_CollectionConfiguration();
  }
}
inline ::data_collection_configuration_request::SignalCollectionCount* Trigger::release_count() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Trigger.count)
  if (_internal_has_count()) {
    clear_has_CollectionConfiguration();
      ::data_collection_configuration_request::SignalCollectionCount* temp = CollectionConfiguration_.count_;
    CollectionConfiguration_.count_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::data_collection_configuration_request::SignalCollectionCount& Trigger::_internal_count() const {
  return _internal_has_count()
      ? *CollectionConfiguration_.count_
      : *reinterpret_cast< ::data_collection_configuration_request::SignalCollectionCount*>(&::data_collection_configuration_request::_SignalCollectionCount_default_instance_);
}
inline const ::data_collection_configuration_request::SignalCollectionCount& Trigger::count() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Trigger.count)
  return _internal_count();
}
inline ::data_collection_configuration_request::SignalCollectionCount* Trigger::_internal_mutable_count() {
  if (!_internal_has_count()) {
    clear_CollectionConfiguration();
    set_has_count();
    CollectionConfiguration_.count_ = CreateMaybeMessage< ::data_collection_configuration_request::SignalCollectionCount >(
        GetArenaNoVirtual());
  }
  return CollectionConfiguration_.count_;
}
inline ::data_collection_configuration_request::SignalCollectionCount* Trigger::mutable_count() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Trigger.count)
  return _internal_mutable_count();
}

// bool signal_collection_native_frequency = 8;
inline bool Trigger::_internal_has_signal_collection_native_frequency() const {
  return CollectionConfiguration_case() == kSignalCollectionNativeFrequency;
}
inline void Trigger::set_has_signal_collection_native_frequency() {
  _oneof_case_[0] = kSignalCollectionNativeFrequency;
}
inline void Trigger::clear_signal_collection_native_frequency() {
  if (_internal_has_signal_collection_native_frequency()) {
    CollectionConfiguration_.signal_collection_native_frequency_ = false;
    clear_has_CollectionConfiguration();
  }
}
inline bool Trigger::_internal_signal_collection_native_frequency() const {
  if (_internal_has_signal_collection_native_frequency()) {
    return CollectionConfiguration_.signal_collection_native_frequency_;
  }
  return false;
}
inline void Trigger::_internal_set_signal_collection_native_frequency(bool value) {
  if (!_internal_has_signal_collection_native_frequency()) {
    clear_CollectionConfiguration();
    set_has_signal_collection_native_frequency();
  }
  CollectionConfiguration_.signal_collection_native_frequency_ = value;
}
inline bool Trigger::signal_collection_native_frequency() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Trigger.signal_collection_native_frequency)
  return _internal_signal_collection_native_frequency();
}
inline void Trigger::set_signal_collection_native_frequency(bool value) {
  _internal_set_signal_collection_native_frequency(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.Trigger.signal_collection_native_frequency)
}

// .data_collection_configuration_request.CollectAfterTriggerEvent collect_after_trigger_event = 9;
inline bool Trigger::_internal_has_collect_after_trigger_event() const {
  return CollectionConfiguration_case() == kCollectAfterTriggerEvent;
}
inline bool Trigger::has_collect_after_trigger_event() const {
  return _internal_has_collect_after_trigger_event();
}
inline void Trigger::set_has_collect_after_trigger_event() {
  _oneof_case_[0] = kCollectAfterTriggerEvent;
}
inline void Trigger::clear_collect_after_trigger_event() {
  if (_internal_has_collect_after_trigger_event()) {
    delete CollectionConfiguration_.collect_after_trigger_event_;
    clear_has_CollectionConfiguration();
  }
}
inline ::data_collection_configuration_request::CollectAfterTriggerEvent* Trigger::release_collect_after_trigger_event() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Trigger.collect_after_trigger_event)
  if (_internal_has_collect_after_trigger_event()) {
    clear_has_CollectionConfiguration();
      ::data_collection_configuration_request::CollectAfterTriggerEvent* temp = CollectionConfiguration_.collect_after_trigger_event_;
    CollectionConfiguration_.collect_after_trigger_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::data_collection_configuration_request::CollectAfterTriggerEvent& Trigger::_internal_collect_after_trigger_event() const {
  return _internal_has_collect_after_trigger_event()
      ? *CollectionConfiguration_.collect_after_trigger_event_
      : *reinterpret_cast< ::data_collection_configuration_request::CollectAfterTriggerEvent*>(&::data_collection_configuration_request::_CollectAfterTriggerEvent_default_instance_);
}
inline const ::data_collection_configuration_request::CollectAfterTriggerEvent& Trigger::collect_after_trigger_event() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Trigger.collect_after_trigger_event)
  return _internal_collect_after_trigger_event();
}
inline ::data_collection_configuration_request::CollectAfterTriggerEvent* Trigger::_internal_mutable_collect_after_trigger_event() {
  if (!_internal_has_collect_after_trigger_event()) {
    clear_CollectionConfiguration();
    set_has_collect_after_trigger_event();
    CollectionConfiguration_.collect_after_trigger_event_ = CreateMaybeMessage< ::data_collection_configuration_request::CollectAfterTriggerEvent >(
        GetArenaNoVirtual());
  }
  return CollectionConfiguration_.collect_after_trigger_event_;
}
inline ::data_collection_configuration_request::CollectAfterTriggerEvent* Trigger::mutable_collect_after_trigger_event() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Trigger.collect_after_trigger_event)
  return _internal_mutable_collect_after_trigger_event();
}

inline bool Trigger::has_CollectionConfiguration() const {
  return CollectionConfiguration_case() != COLLECTIONCONFIGURATION_NOT_SET;
}
inline void Trigger::clear_has_CollectionConfiguration() {
  _oneof_case_[0] = COLLECTIONCONFIGURATION_NOT_SET;
}
inline Trigger::CollectionConfigurationCase Trigger::CollectionConfiguration_case() const {
  return Trigger::CollectionConfigurationCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// CollectionAction

// repeated .data_collection_configuration_request.CollectionTask collection_tasks = 1;
inline int CollectionAction::_internal_collection_tasks_size() const {
  return collection_tasks_.size();
}
inline int CollectionAction::collection_tasks_size() const {
  return _internal_collection_tasks_size();
}
inline void CollectionAction::clear_collection_tasks() {
  collection_tasks_.Clear();
}
inline ::data_collection_configuration_request::CollectionTask* CollectionAction::mutable_collection_tasks(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.CollectionAction.collection_tasks)
  return collection_tasks_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::CollectionTask >*
CollectionAction::mutable_collection_tasks() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.CollectionAction.collection_tasks)
  return &collection_tasks_;
}
inline const ::data_collection_configuration_request::CollectionTask& CollectionAction::_internal_collection_tasks(int index) const {
  return collection_tasks_.Get(index);
}
inline const ::data_collection_configuration_request::CollectionTask& CollectionAction::collection_tasks(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CollectionAction.collection_tasks)
  return _internal_collection_tasks(index);
}
inline ::data_collection_configuration_request::CollectionTask* CollectionAction::_internal_add_collection_tasks() {
  return collection_tasks_.Add();
}
inline ::data_collection_configuration_request::CollectionTask* CollectionAction::add_collection_tasks() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.CollectionAction.collection_tasks)
  return _internal_add_collection_tasks();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::CollectionTask >&
CollectionAction::collection_tasks() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.CollectionAction.collection_tasks)
  return collection_tasks_;
}

// .data_collection_configuration_request.CollectionExtents min_split_frequency = 2;
inline bool CollectionAction::_internal_has_min_split_frequency() const {
  return this != internal_default_instance() && min_split_frequency_ != nullptr;
}
inline bool CollectionAction::has_min_split_frequency() const {
  return _internal_has_min_split_frequency();
}
inline void CollectionAction::clear_min_split_frequency() {
  if (GetArenaNoVirtual() == nullptr && min_split_frequency_ != nullptr) {
    delete min_split_frequency_;
  }
  min_split_frequency_ = nullptr;
}
inline const ::data_collection_configuration_request::CollectionExtents& CollectionAction::_internal_min_split_frequency() const {
  const ::data_collection_configuration_request::CollectionExtents* p = min_split_frequency_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::CollectionExtents*>(
      &::data_collection_configuration_request::_CollectionExtents_default_instance_);
}
inline const ::data_collection_configuration_request::CollectionExtents& CollectionAction::min_split_frequency() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CollectionAction.min_split_frequency)
  return _internal_min_split_frequency();
}
inline ::data_collection_configuration_request::CollectionExtents* CollectionAction::release_min_split_frequency() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.CollectionAction.min_split_frequency)
  
  ::data_collection_configuration_request::CollectionExtents* temp = min_split_frequency_;
  min_split_frequency_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::CollectionExtents* CollectionAction::_internal_mutable_min_split_frequency() {
  
  if (min_split_frequency_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::CollectionExtents>(GetArenaNoVirtual());
    min_split_frequency_ = p;
  }
  return min_split_frequency_;
}
inline ::data_collection_configuration_request::CollectionExtents* CollectionAction::mutable_min_split_frequency() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.CollectionAction.min_split_frequency)
  return _internal_mutable_min_split_frequency();
}
inline void CollectionAction::set_allocated_min_split_frequency(::data_collection_configuration_request::CollectionExtents* min_split_frequency) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete min_split_frequency_;
  }
  if (min_split_frequency) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      min_split_frequency = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, min_split_frequency, submessage_arena);
    }
    
  } else {
    
  }
  min_split_frequency_ = min_split_frequency;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.CollectionAction.min_split_frequency)
}

// .data_collection_configuration_request.CollectionExtents data_packetization_trigger = 3;
inline bool CollectionAction::_internal_has_data_packetization_trigger() const {
  return this != internal_default_instance() && data_packetization_trigger_ != nullptr;
}
inline bool CollectionAction::has_data_packetization_trigger() const {
  return _internal_has_data_packetization_trigger();
}
inline void CollectionAction::clear_data_packetization_trigger() {
  if (GetArenaNoVirtual() == nullptr && data_packetization_trigger_ != nullptr) {
    delete data_packetization_trigger_;
  }
  data_packetization_trigger_ = nullptr;
}
inline const ::data_collection_configuration_request::CollectionExtents& CollectionAction::_internal_data_packetization_trigger() const {
  const ::data_collection_configuration_request::CollectionExtents* p = data_packetization_trigger_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::CollectionExtents*>(
      &::data_collection_configuration_request::_CollectionExtents_default_instance_);
}
inline const ::data_collection_configuration_request::CollectionExtents& CollectionAction::data_packetization_trigger() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CollectionAction.data_packetization_trigger)
  return _internal_data_packetization_trigger();
}
inline ::data_collection_configuration_request::CollectionExtents* CollectionAction::release_data_packetization_trigger() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.CollectionAction.data_packetization_trigger)
  
  ::data_collection_configuration_request::CollectionExtents* temp = data_packetization_trigger_;
  data_packetization_trigger_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::CollectionExtents* CollectionAction::_internal_mutable_data_packetization_trigger() {
  
  if (data_packetization_trigger_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::CollectionExtents>(GetArenaNoVirtual());
    data_packetization_trigger_ = p;
  }
  return data_packetization_trigger_;
}
inline ::data_collection_configuration_request::CollectionExtents* CollectionAction::mutable_data_packetization_trigger() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.CollectionAction.data_packetization_trigger)
  return _internal_mutable_data_packetization_trigger();
}
inline void CollectionAction::set_allocated_data_packetization_trigger(::data_collection_configuration_request::CollectionExtents* data_packetization_trigger) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete data_packetization_trigger_;
  }
  if (data_packetization_trigger) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data_packetization_trigger = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data_packetization_trigger, submessage_arena);
    }
    
  } else {
    
  }
  data_packetization_trigger_ = data_packetization_trigger;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.CollectionAction.data_packetization_trigger)
}

// -------------------------------------------------------------------

// StartUpDelay

// double no_collection_startup_distance_meter_min = 1;
inline void StartUpDelay::clear_no_collection_startup_distance_meter_min() {
  no_collection_startup_distance_meter_min_ = 0;
}
inline double StartUpDelay::_internal_no_collection_startup_distance_meter_min() const {
  return no_collection_startup_distance_meter_min_;
}
inline double StartUpDelay::no_collection_startup_distance_meter_min() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.StartUpDelay.no_collection_startup_distance_meter_min)
  return _internal_no_collection_startup_distance_meter_min();
}
inline void StartUpDelay::_internal_set_no_collection_startup_distance_meter_min(double value) {
  
  no_collection_startup_distance_meter_min_ = value;
}
inline void StartUpDelay::set_no_collection_startup_distance_meter_min(double value) {
  _internal_set_no_collection_startup_distance_meter_min(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.StartUpDelay.no_collection_startup_distance_meter_min)
}

// double no_collection_startup_distance_meter_max = 2;
inline void StartUpDelay::clear_no_collection_startup_distance_meter_max() {
  no_collection_startup_distance_meter_max_ = 0;
}
inline double StartUpDelay::_internal_no_collection_startup_distance_meter_max() const {
  return no_collection_startup_distance_meter_max_;
}
inline double StartUpDelay::no_collection_startup_distance_meter_max() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.StartUpDelay.no_collection_startup_distance_meter_max)
  return _internal_no_collection_startup_distance_meter_max();
}
inline void StartUpDelay::_internal_set_no_collection_startup_distance_meter_max(double value) {
  
  no_collection_startup_distance_meter_max_ = value;
}
inline void StartUpDelay::set_no_collection_startup_distance_meter_max(double value) {
  _internal_set_no_collection_startup_distance_meter_max(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.StartUpDelay.no_collection_startup_distance_meter_max)
}

// double no_collection_startup_time_seconds_min = 3;
inline void StartUpDelay::clear_no_collection_startup_time_seconds_min() {
  no_collection_startup_time_seconds_min_ = 0;
}
inline double StartUpDelay::_internal_no_collection_startup_time_seconds_min() const {
  return no_collection_startup_time_seconds_min_;
}
inline double StartUpDelay::no_collection_startup_time_seconds_min() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.StartUpDelay.no_collection_startup_time_seconds_min)
  return _internal_no_collection_startup_time_seconds_min();
}
inline void StartUpDelay::_internal_set_no_collection_startup_time_seconds_min(double value) {
  
  no_collection_startup_time_seconds_min_ = value;
}
inline void StartUpDelay::set_no_collection_startup_time_seconds_min(double value) {
  _internal_set_no_collection_startup_time_seconds_min(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.StartUpDelay.no_collection_startup_time_seconds_min)
}

// double no_collection_startup_time_seconds_max = 4;
inline void StartUpDelay::clear_no_collection_startup_time_seconds_max() {
  no_collection_startup_time_seconds_max_ = 0;
}
inline double StartUpDelay::_internal_no_collection_startup_time_seconds_max() const {
  return no_collection_startup_time_seconds_max_;
}
inline double StartUpDelay::no_collection_startup_time_seconds_max() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.StartUpDelay.no_collection_startup_time_seconds_max)
  return _internal_no_collection_startup_time_seconds_max();
}
inline void StartUpDelay::_internal_set_no_collection_startup_time_seconds_max(double value) {
  
  no_collection_startup_time_seconds_max_ = value;
}
inline void StartUpDelay::set_no_collection_startup_time_seconds_max(double value) {
  _internal_set_no_collection_startup_time_seconds_max(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.StartUpDelay.no_collection_startup_time_seconds_max)
}

// -------------------------------------------------------------------

// EndPointUncertainty

// double no_collection_end_distance_meter_min = 1;
inline void EndPointUncertainty::clear_no_collection_end_distance_meter_min() {
  no_collection_end_distance_meter_min_ = 0;
}
inline double EndPointUncertainty::_internal_no_collection_end_distance_meter_min() const {
  return no_collection_end_distance_meter_min_;
}
inline double EndPointUncertainty::no_collection_end_distance_meter_min() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.EndPointUncertainty.no_collection_end_distance_meter_min)
  return _internal_no_collection_end_distance_meter_min();
}
inline void EndPointUncertainty::_internal_set_no_collection_end_distance_meter_min(double value) {
  
  no_collection_end_distance_meter_min_ = value;
}
inline void EndPointUncertainty::set_no_collection_end_distance_meter_min(double value) {
  _internal_set_no_collection_end_distance_meter_min(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.EndPointUncertainty.no_collection_end_distance_meter_min)
}

// double no_collection_end_distance_meter_max = 2;
inline void EndPointUncertainty::clear_no_collection_end_distance_meter_max() {
  no_collection_end_distance_meter_max_ = 0;
}
inline double EndPointUncertainty::_internal_no_collection_end_distance_meter_max() const {
  return no_collection_end_distance_meter_max_;
}
inline double EndPointUncertainty::no_collection_end_distance_meter_max() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.EndPointUncertainty.no_collection_end_distance_meter_max)
  return _internal_no_collection_end_distance_meter_max();
}
inline void EndPointUncertainty::_internal_set_no_collection_end_distance_meter_max(double value) {
  
  no_collection_end_distance_meter_max_ = value;
}
inline void EndPointUncertainty::set_no_collection_end_distance_meter_max(double value) {
  _internal_set_no_collection_end_distance_meter_max(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.EndPointUncertainty.no_collection_end_distance_meter_max)
}

// double no_collection_end_time_seconds_min = 3;
inline void EndPointUncertainty::clear_no_collection_end_time_seconds_min() {
  no_collection_end_time_seconds_min_ = 0;
}
inline double EndPointUncertainty::_internal_no_collection_end_time_seconds_min() const {
  return no_collection_end_time_seconds_min_;
}
inline double EndPointUncertainty::no_collection_end_time_seconds_min() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.EndPointUncertainty.no_collection_end_time_seconds_min)
  return _internal_no_collection_end_time_seconds_min();
}
inline void EndPointUncertainty::_internal_set_no_collection_end_time_seconds_min(double value) {
  
  no_collection_end_time_seconds_min_ = value;
}
inline void EndPointUncertainty::set_no_collection_end_time_seconds_min(double value) {
  _internal_set_no_collection_end_time_seconds_min(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.EndPointUncertainty.no_collection_end_time_seconds_min)
}

// double no_collection_end_time_seconds_max = 4;
inline void EndPointUncertainty::clear_no_collection_end_time_seconds_max() {
  no_collection_end_time_seconds_max_ = 0;
}
inline double EndPointUncertainty::_internal_no_collection_end_time_seconds_max() const {
  return no_collection_end_time_seconds_max_;
}
inline double EndPointUncertainty::no_collection_end_time_seconds_max() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.EndPointUncertainty.no_collection_end_time_seconds_max)
  return _internal_no_collection_end_time_seconds_max();
}
inline void EndPointUncertainty::_internal_set_no_collection_end_time_seconds_max(double value) {
  
  no_collection_end_time_seconds_max_ = value;
}
inline void EndPointUncertainty::set_no_collection_end_time_seconds_max(double value) {
  _internal_set_no_collection_end_time_seconds_max(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.EndPointUncertainty.no_collection_end_time_seconds_max)
}

// -------------------------------------------------------------------

// DataRecordingGap

// double data_recording_gap_distance_minimum_meter = 1;
inline void DataRecordingGap::clear_data_recording_gap_distance_minimum_meter() {
  data_recording_gap_distance_minimum_meter_ = 0;
}
inline double DataRecordingGap::_internal_data_recording_gap_distance_minimum_meter() const {
  return data_recording_gap_distance_minimum_meter_;
}
inline double DataRecordingGap::data_recording_gap_distance_minimum_meter() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataRecordingGap.data_recording_gap_distance_minimum_meter)
  return _internal_data_recording_gap_distance_minimum_meter();
}
inline void DataRecordingGap::_internal_set_data_recording_gap_distance_minimum_meter(double value) {
  
  data_recording_gap_distance_minimum_meter_ = value;
}
inline void DataRecordingGap::set_data_recording_gap_distance_minimum_meter(double value) {
  _internal_set_data_recording_gap_distance_minimum_meter(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataRecordingGap.data_recording_gap_distance_minimum_meter)
}

// double data_recording_gap_distance_maximum_meter = 2;
inline void DataRecordingGap::clear_data_recording_gap_distance_maximum_meter() {
  data_recording_gap_distance_maximum_meter_ = 0;
}
inline double DataRecordingGap::_internal_data_recording_gap_distance_maximum_meter() const {
  return data_recording_gap_distance_maximum_meter_;
}
inline double DataRecordingGap::data_recording_gap_distance_maximum_meter() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataRecordingGap.data_recording_gap_distance_maximum_meter)
  return _internal_data_recording_gap_distance_maximum_meter();
}
inline void DataRecordingGap::_internal_set_data_recording_gap_distance_maximum_meter(double value) {
  
  data_recording_gap_distance_maximum_meter_ = value;
}
inline void DataRecordingGap::set_data_recording_gap_distance_maximum_meter(double value) {
  _internal_set_data_recording_gap_distance_maximum_meter(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataRecordingGap.data_recording_gap_distance_maximum_meter)
}

// double data_recording_gap_time_minimum_seconds = 3;
inline void DataRecordingGap::clear_data_recording_gap_time_minimum_seconds() {
  data_recording_gap_time_minimum_seconds_ = 0;
}
inline double DataRecordingGap::_internal_data_recording_gap_time_minimum_seconds() const {
  return data_recording_gap_time_minimum_seconds_;
}
inline double DataRecordingGap::data_recording_gap_time_minimum_seconds() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataRecordingGap.data_recording_gap_time_minimum_seconds)
  return _internal_data_recording_gap_time_minimum_seconds();
}
inline void DataRecordingGap::_internal_set_data_recording_gap_time_minimum_seconds(double value) {
  
  data_recording_gap_time_minimum_seconds_ = value;
}
inline void DataRecordingGap::set_data_recording_gap_time_minimum_seconds(double value) {
  _internal_set_data_recording_gap_time_minimum_seconds(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataRecordingGap.data_recording_gap_time_minimum_seconds)
}

// double data_recording_gap_time_maximum_seconds = 4;
inline void DataRecordingGap::clear_data_recording_gap_time_maximum_seconds() {
  data_recording_gap_time_maximum_seconds_ = 0;
}
inline double DataRecordingGap::_internal_data_recording_gap_time_maximum_seconds() const {
  return data_recording_gap_time_maximum_seconds_;
}
inline double DataRecordingGap::data_recording_gap_time_maximum_seconds() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataRecordingGap.data_recording_gap_time_maximum_seconds)
  return _internal_data_recording_gap_time_maximum_seconds();
}
inline void DataRecordingGap::_internal_set_data_recording_gap_time_maximum_seconds(double value) {
  
  data_recording_gap_time_maximum_seconds_ = value;
}
inline void DataRecordingGap::set_data_recording_gap_time_maximum_seconds(double value) {
  _internal_set_data_recording_gap_time_maximum_seconds(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataRecordingGap.data_recording_gap_time_maximum_seconds)
}

// -------------------------------------------------------------------

// AbsoluteTimeOffset

// int64 absolute_time_offset_minimum_milliseconds = 1;
inline void AbsoluteTimeOffset::clear_absolute_time_offset_minimum_milliseconds() {
  absolute_time_offset_minimum_milliseconds_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AbsoluteTimeOffset::_internal_absolute_time_offset_minimum_milliseconds() const {
  return absolute_time_offset_minimum_milliseconds_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AbsoluteTimeOffset::absolute_time_offset_minimum_milliseconds() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.AbsoluteTimeOffset.absolute_time_offset_minimum_milliseconds)
  return _internal_absolute_time_offset_minimum_milliseconds();
}
inline void AbsoluteTimeOffset::_internal_set_absolute_time_offset_minimum_milliseconds(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  absolute_time_offset_minimum_milliseconds_ = value;
}
inline void AbsoluteTimeOffset::set_absolute_time_offset_minimum_milliseconds(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_absolute_time_offset_minimum_milliseconds(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.AbsoluteTimeOffset.absolute_time_offset_minimum_milliseconds)
}

// int64 absolute_time_offset_maximum_milliseconds = 2;
inline void AbsoluteTimeOffset::clear_absolute_time_offset_maximum_milliseconds() {
  absolute_time_offset_maximum_milliseconds_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AbsoluteTimeOffset::_internal_absolute_time_offset_maximum_milliseconds() const {
  return absolute_time_offset_maximum_milliseconds_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AbsoluteTimeOffset::absolute_time_offset_maximum_milliseconds() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.AbsoluteTimeOffset.absolute_time_offset_maximum_milliseconds)
  return _internal_absolute_time_offset_maximum_milliseconds();
}
inline void AbsoluteTimeOffset::_internal_set_absolute_time_offset_maximum_milliseconds(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  absolute_time_offset_maximum_milliseconds_ = value;
}
inline void AbsoluteTimeOffset::set_absolute_time_offset_maximum_milliseconds(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_absolute_time_offset_maximum_milliseconds(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.AbsoluteTimeOffset.absolute_time_offset_maximum_milliseconds)
}

// -------------------------------------------------------------------

// CollectionTask

// uint32 task_id = 1;
inline void CollectionTask::clear_task_id() {
  task_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CollectionTask::_internal_task_id() const {
  return task_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CollectionTask::task_id() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CollectionTask.task_id)
  return _internal_task_id();
}
inline void CollectionTask::_internal_set_task_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  task_id_ = value;
}
inline void CollectionTask::set_task_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_task_id(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.CollectionTask.task_id)
}

// repeated .data_collection_configuration_request.Datapoint data_points = 2;
inline int CollectionTask::_internal_data_points_size() const {
  return data_points_.size();
}
inline int CollectionTask::data_points_size() const {
  return _internal_data_points_size();
}
inline void CollectionTask::clear_data_points() {
  data_points_.Clear();
}
inline ::data_collection_configuration_request::Datapoint* CollectionTask::mutable_data_points(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.CollectionTask.data_points)
  return data_points_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Datapoint >*
CollectionTask::mutable_data_points() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.CollectionTask.data_points)
  return &data_points_;
}
inline const ::data_collection_configuration_request::Datapoint& CollectionTask::_internal_data_points(int index) const {
  return data_points_.Get(index);
}
inline const ::data_collection_configuration_request::Datapoint& CollectionTask::data_points(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CollectionTask.data_points)
  return _internal_data_points(index);
}
inline ::data_collection_configuration_request::Datapoint* CollectionTask::_internal_add_data_points() {
  return data_points_.Add();
}
inline ::data_collection_configuration_request::Datapoint* CollectionTask::add_data_points() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.CollectionTask.data_points)
  return _internal_add_data_points();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Datapoint >&
CollectionTask::data_points() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.CollectionTask.data_points)
  return data_points_;
}

// .data_collection_configuration_request.DatapointsConfiguration data_points_configuration = 3;
inline bool CollectionTask::_internal_has_data_points_configuration() const {
  return this != internal_default_instance() && data_points_configuration_ != nullptr;
}
inline bool CollectionTask::has_data_points_configuration() const {
  return _internal_has_data_points_configuration();
}
inline void CollectionTask::clear_data_points_configuration() {
  if (GetArenaNoVirtual() == nullptr && data_points_configuration_ != nullptr) {
    delete data_points_configuration_;
  }
  data_points_configuration_ = nullptr;
}
inline const ::data_collection_configuration_request::DatapointsConfiguration& CollectionTask::_internal_data_points_configuration() const {
  const ::data_collection_configuration_request::DatapointsConfiguration* p = data_points_configuration_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::DatapointsConfiguration*>(
      &::data_collection_configuration_request::_DatapointsConfiguration_default_instance_);
}
inline const ::data_collection_configuration_request::DatapointsConfiguration& CollectionTask::data_points_configuration() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.CollectionTask.data_points_configuration)
  return _internal_data_points_configuration();
}
inline ::data_collection_configuration_request::DatapointsConfiguration* CollectionTask::release_data_points_configuration() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.CollectionTask.data_points_configuration)
  
  ::data_collection_configuration_request::DatapointsConfiguration* temp = data_points_configuration_;
  data_points_configuration_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::DatapointsConfiguration* CollectionTask::_internal_mutable_data_points_configuration() {
  
  if (data_points_configuration_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::DatapointsConfiguration>(GetArenaNoVirtual());
    data_points_configuration_ = p;
  }
  return data_points_configuration_;
}
inline ::data_collection_configuration_request::DatapointsConfiguration* CollectionTask::mutable_data_points_configuration() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.CollectionTask.data_points_configuration)
  return _internal_mutable_data_points_configuration();
}
inline void CollectionTask::set_allocated_data_points_configuration(::data_collection_configuration_request::DatapointsConfiguration* data_points_configuration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete data_points_configuration_;
  }
  if (data_points_configuration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data_points_configuration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data_points_configuration, submessage_arena);
    }
    
  } else {
    
  }
  data_points_configuration_ = data_points_configuration;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.CollectionTask.data_points_configuration)
}

// -------------------------------------------------------------------

// ListOfSNA

// repeated .data_collection_configuration_request.ValueRange value_range = 1;
inline int ListOfSNA::_internal_value_range_size() const {
  return value_range_.size();
}
inline int ListOfSNA::value_range_size() const {
  return _internal_value_range_size();
}
inline void ListOfSNA::clear_value_range() {
  value_range_.Clear();
}
inline ::data_collection_configuration_request::ValueRange* ListOfSNA::mutable_value_range(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.ListOfSNA.value_range)
  return value_range_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::ValueRange >*
ListOfSNA::mutable_value_range() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.ListOfSNA.value_range)
  return &value_range_;
}
inline const ::data_collection_configuration_request::ValueRange& ListOfSNA::_internal_value_range(int index) const {
  return value_range_.Get(index);
}
inline const ::data_collection_configuration_request::ValueRange& ListOfSNA::value_range(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.ListOfSNA.value_range)
  return _internal_value_range(index);
}
inline ::data_collection_configuration_request::ValueRange* ListOfSNA::_internal_add_value_range() {
  return value_range_.Add();
}
inline ::data_collection_configuration_request::ValueRange* ListOfSNA::add_value_range() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.ListOfSNA.value_range)
  return _internal_add_value_range();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::ValueRange >&
ListOfSNA::value_range() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.ListOfSNA.value_range)
  return value_range_;
}

// repeated double value_list_SNA = 2;
inline int ListOfSNA::_internal_value_list_sna_size() const {
  return value_list_sna_.size();
}
inline int ListOfSNA::value_list_sna_size() const {
  return _internal_value_list_sna_size();
}
inline void ListOfSNA::clear_value_list_sna() {
  value_list_sna_.Clear();
}
inline double ListOfSNA::_internal_value_list_sna(int index) const {
  return value_list_sna_.Get(index);
}
inline double ListOfSNA::value_list_sna(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.ListOfSNA.value_list_SNA)
  return _internal_value_list_sna(index);
}
inline void ListOfSNA::set_value_list_sna(int index, double value) {
  value_list_sna_.Set(index, value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.ListOfSNA.value_list_SNA)
}
inline void ListOfSNA::_internal_add_value_list_sna(double value) {
  value_list_sna_.Add(value);
}
inline void ListOfSNA::add_value_list_sna(double value) {
  _internal_add_value_list_sna(value);
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.ListOfSNA.value_list_SNA)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ListOfSNA::_internal_value_list_sna() const {
  return value_list_sna_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ListOfSNA::value_list_sna() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.ListOfSNA.value_list_SNA)
  return _internal_value_list_sna();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ListOfSNA::_internal_mutable_value_list_sna() {
  return &value_list_sna_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ListOfSNA::mutable_value_list_sna() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.ListOfSNA.value_list_SNA)
  return _internal_mutable_value_list_sna();
}

// -------------------------------------------------------------------

// RawValueFilter

// repeated .data_collection_configuration_request.ValueRange value_range_custom = 1;
inline int RawValueFilter::_internal_value_range_custom_size() const {
  return value_range_custom_.size();
}
inline int RawValueFilter::value_range_custom_size() const {
  return _internal_value_range_custom_size();
}
inline void RawValueFilter::clear_value_range_custom() {
  value_range_custom_.Clear();
}
inline ::data_collection_configuration_request::ValueRange* RawValueFilter::mutable_value_range_custom(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.RawValueFilter.value_range_custom)
  return value_range_custom_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::ValueRange >*
RawValueFilter::mutable_value_range_custom() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.RawValueFilter.value_range_custom)
  return &value_range_custom_;
}
inline const ::data_collection_configuration_request::ValueRange& RawValueFilter::_internal_value_range_custom(int index) const {
  return value_range_custom_.Get(index);
}
inline const ::data_collection_configuration_request::ValueRange& RawValueFilter::value_range_custom(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.RawValueFilter.value_range_custom)
  return _internal_value_range_custom(index);
}
inline ::data_collection_configuration_request::ValueRange* RawValueFilter::_internal_add_value_range_custom() {
  return value_range_custom_.Add();
}
inline ::data_collection_configuration_request::ValueRange* RawValueFilter::add_value_range_custom() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.RawValueFilter.value_range_custom)
  return _internal_add_value_range_custom();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::ValueRange >&
RawValueFilter::value_range_custom() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.RawValueFilter.value_range_custom)
  return value_range_custom_;
}

// repeated double value_list_custom = 2;
inline int RawValueFilter::_internal_value_list_custom_size() const {
  return value_list_custom_.size();
}
inline int RawValueFilter::value_list_custom_size() const {
  return _internal_value_list_custom_size();
}
inline void RawValueFilter::clear_value_list_custom() {
  value_list_custom_.Clear();
}
inline double RawValueFilter::_internal_value_list_custom(int index) const {
  return value_list_custom_.Get(index);
}
inline double RawValueFilter::value_list_custom(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.RawValueFilter.value_list_custom)
  return _internal_value_list_custom(index);
}
inline void RawValueFilter::set_value_list_custom(int index, double value) {
  value_list_custom_.Set(index, value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.RawValueFilter.value_list_custom)
}
inline void RawValueFilter::_internal_add_value_list_custom(double value) {
  value_list_custom_.Add(value);
}
inline void RawValueFilter::add_value_list_custom(double value) {
  _internal_add_value_list_custom(value);
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.RawValueFilter.value_list_custom)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
RawValueFilter::_internal_value_list_custom() const {
  return value_list_custom_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
RawValueFilter::value_list_custom() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.RawValueFilter.value_list_custom)
  return _internal_value_list_custom();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
RawValueFilter::_internal_mutable_value_list_custom() {
  return &value_list_custom_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
RawValueFilter::mutable_value_list_custom() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.RawValueFilter.value_list_custom)
  return _internal_mutable_value_list_custom();
}

// -------------------------------------------------------------------

// ValueRange

// double less_than_equal_to = 1;
inline bool ValueRange::_internal_has_less_than_equal_to() const {
  return range_case() == kLessThanEqualTo;
}
inline void ValueRange::set_has_less_than_equal_to() {
  _oneof_case_[0] = kLessThanEqualTo;
}
inline void ValueRange::clear_less_than_equal_to() {
  if (_internal_has_less_than_equal_to()) {
    range_.less_than_equal_to_ = 0;
    clear_has_range();
  }
}
inline double ValueRange::_internal_less_than_equal_to() const {
  if (_internal_has_less_than_equal_to()) {
    return range_.less_than_equal_to_;
  }
  return 0;
}
inline void ValueRange::_internal_set_less_than_equal_to(double value) {
  if (!_internal_has_less_than_equal_to()) {
    clear_range();
    set_has_less_than_equal_to();
  }
  range_.less_than_equal_to_ = value;
}
inline double ValueRange::less_than_equal_to() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.ValueRange.less_than_equal_to)
  return _internal_less_than_equal_to();
}
inline void ValueRange::set_less_than_equal_to(double value) {
  _internal_set_less_than_equal_to(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.ValueRange.less_than_equal_to)
}

// double greater_than_equal_to = 2;
inline bool ValueRange::_internal_has_greater_than_equal_to() const {
  return range_case() == kGreaterThanEqualTo;
}
inline void ValueRange::set_has_greater_than_equal_to() {
  _oneof_case_[0] = kGreaterThanEqualTo;
}
inline void ValueRange::clear_greater_than_equal_to() {
  if (_internal_has_greater_than_equal_to()) {
    range_.greater_than_equal_to_ = 0;
    clear_has_range();
  }
}
inline double ValueRange::_internal_greater_than_equal_to() const {
  if (_internal_has_greater_than_equal_to()) {
    return range_.greater_than_equal_to_;
  }
  return 0;
}
inline void ValueRange::_internal_set_greater_than_equal_to(double value) {
  if (!_internal_has_greater_than_equal_to()) {
    clear_range();
    set_has_greater_than_equal_to();
  }
  range_.greater_than_equal_to_ = value;
}
inline double ValueRange::greater_than_equal_to() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.ValueRange.greater_than_equal_to)
  return _internal_greater_than_equal_to();
}
inline void ValueRange::set_greater_than_equal_to(double value) {
  _internal_set_greater_than_equal_to(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.ValueRange.greater_than_equal_to)
}

// .data_collection_configuration_request.ValueInterval value_interval = 3;
inline bool ValueRange::_internal_has_value_interval() const {
  return range_case() == kValueInterval;
}
inline bool ValueRange::has_value_interval() const {
  return _internal_has_value_interval();
}
inline void ValueRange::set_has_value_interval() {
  _oneof_case_[0] = kValueInterval;
}
inline void ValueRange::clear_value_interval() {
  if (_internal_has_value_interval()) {
    delete range_.value_interval_;
    clear_has_range();
  }
}
inline ::data_collection_configuration_request::ValueInterval* ValueRange::release_value_interval() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.ValueRange.value_interval)
  if (_internal_has_value_interval()) {
    clear_has_range();
      ::data_collection_configuration_request::ValueInterval* temp = range_.value_interval_;
    range_.value_interval_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::data_collection_configuration_request::ValueInterval& ValueRange::_internal_value_interval() const {
  return _internal_has_value_interval()
      ? *range_.value_interval_
      : *reinterpret_cast< ::data_collection_configuration_request::ValueInterval*>(&::data_collection_configuration_request::_ValueInterval_default_instance_);
}
inline const ::data_collection_configuration_request::ValueInterval& ValueRange::value_interval() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.ValueRange.value_interval)
  return _internal_value_interval();
}
inline ::data_collection_configuration_request::ValueInterval* ValueRange::_internal_mutable_value_interval() {
  if (!_internal_has_value_interval()) {
    clear_range();
    set_has_value_interval();
    range_.value_interval_ = CreateMaybeMessage< ::data_collection_configuration_request::ValueInterval >(
        GetArenaNoVirtual());
  }
  return range_.value_interval_;
}
inline ::data_collection_configuration_request::ValueInterval* ValueRange::mutable_value_interval() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.ValueRange.value_interval)
  return _internal_mutable_value_interval();
}

inline bool ValueRange::has_range() const {
  return range_case() != RANGE_NOT_SET;
}
inline void ValueRange::clear_has_range() {
  _oneof_case_[0] = RANGE_NOT_SET;
}
inline ValueRange::RangeCase ValueRange::range_case() const {
  return ValueRange::RangeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ValueInterval

// double value_lower_included = 1;
inline void ValueInterval::clear_value_lower_included() {
  value_lower_included_ = 0;
}
inline double ValueInterval::_internal_value_lower_included() const {
  return value_lower_included_;
}
inline double ValueInterval::value_lower_included() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.ValueInterval.value_lower_included)
  return _internal_value_lower_included();
}
inline void ValueInterval::_internal_set_value_lower_included(double value) {
  
  value_lower_included_ = value;
}
inline void ValueInterval::set_value_lower_included(double value) {
  _internal_set_value_lower_included(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.ValueInterval.value_lower_included)
}

// double value_upper_included = 2;
inline void ValueInterval::clear_value_upper_included() {
  value_upper_included_ = 0;
}
inline double ValueInterval::_internal_value_upper_included() const {
  return value_upper_included_;
}
inline double ValueInterval::value_upper_included() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.ValueInterval.value_upper_included)
  return _internal_value_upper_included();
}
inline void ValueInterval::_internal_set_value_upper_included(double value) {
  
  value_upper_included_ = value;
}
inline void ValueInterval::set_value_upper_included(double value) {
  _internal_set_value_upper_included(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.ValueInterval.value_upper_included)
}

// -------------------------------------------------------------------

// Datapoint

// .signal_source_definition.DefaultSource default_signal = 1;
inline bool Datapoint::_internal_has_default_signal() const {
  return signal_definition_case() == kDefaultSignal;
}
inline bool Datapoint::has_default_signal() const {
  return _internal_has_default_signal();
}
inline void Datapoint::set_has_default_signal() {
  _oneof_case_[0] = kDefaultSignal;
}
inline ::signal_source_definition::DefaultSource* Datapoint::release_default_signal() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Datapoint.default_signal)
  if (_internal_has_default_signal()) {
    clear_has_signal_definition();
      ::signal_source_definition::DefaultSource* temp = signal_definition_.default_signal_;
    signal_definition_.default_signal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::signal_source_definition::DefaultSource& Datapoint::_internal_default_signal() const {
  return _internal_has_default_signal()
      ? *signal_definition_.default_signal_
      : *reinterpret_cast< ::signal_source_definition::DefaultSource*>(&::signal_source_definition::_DefaultSource_default_instance_);
}
inline const ::signal_source_definition::DefaultSource& Datapoint::default_signal() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.default_signal)
  return _internal_default_signal();
}
inline ::signal_source_definition::DefaultSource* Datapoint::_internal_mutable_default_signal() {
  if (!_internal_has_default_signal()) {
    clear_signal_definition();
    set_has_default_signal();
    signal_definition_.default_signal_ = CreateMaybeMessage< ::signal_source_definition::DefaultSource >(
        GetArenaNoVirtual());
  }
  return signal_definition_.default_signal_;
}
inline ::signal_source_definition::DefaultSource* Datapoint::mutable_default_signal() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Datapoint.default_signal)
  return _internal_mutable_default_signal();
}

// .signal_source_definition.CanSource can_signal = 2;
inline bool Datapoint::_internal_has_can_signal() const {
  return signal_definition_case() == kCanSignal;
}
inline bool Datapoint::has_can_signal() const {
  return _internal_has_can_signal();
}
inline void Datapoint::set_has_can_signal() {
  _oneof_case_[0] = kCanSignal;
}
inline ::signal_source_definition::CanSource* Datapoint::release_can_signal() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Datapoint.can_signal)
  if (_internal_has_can_signal()) {
    clear_has_signal_definition();
      ::signal_source_definition::CanSource* temp = signal_definition_.can_signal_;
    signal_definition_.can_signal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::signal_source_definition::CanSource& Datapoint::_internal_can_signal() const {
  return _internal_has_can_signal()
      ? *signal_definition_.can_signal_
      : *reinterpret_cast< ::signal_source_definition::CanSource*>(&::signal_source_definition::_CanSource_default_instance_);
}
inline const ::signal_source_definition::CanSource& Datapoint::can_signal() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.can_signal)
  return _internal_can_signal();
}
inline ::signal_source_definition::CanSource* Datapoint::_internal_mutable_can_signal() {
  if (!_internal_has_can_signal()) {
    clear_signal_definition();
    set_has_can_signal();
    signal_definition_.can_signal_ = CreateMaybeMessage< ::signal_source_definition::CanSource >(
        GetArenaNoVirtual());
  }
  return signal_definition_.can_signal_;
}
inline ::signal_source_definition::CanSource* Datapoint::mutable_can_signal() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Datapoint.can_signal)
  return _internal_mutable_can_signal();
}

// .signal_source_definition.LinSource lin_signal = 3;
inline bool Datapoint::_internal_has_lin_signal() const {
  return signal_definition_case() == kLinSignal;
}
inline bool Datapoint::has_lin_signal() const {
  return _internal_has_lin_signal();
}
inline void Datapoint::set_has_lin_signal() {
  _oneof_case_[0] = kLinSignal;
}
inline ::signal_source_definition::LinSource* Datapoint::release_lin_signal() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Datapoint.lin_signal)
  if (_internal_has_lin_signal()) {
    clear_has_signal_definition();
      ::signal_source_definition::LinSource* temp = signal_definition_.lin_signal_;
    signal_definition_.lin_signal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::signal_source_definition::LinSource& Datapoint::_internal_lin_signal() const {
  return _internal_has_lin_signal()
      ? *signal_definition_.lin_signal_
      : *reinterpret_cast< ::signal_source_definition::LinSource*>(&::signal_source_definition::_LinSource_default_instance_);
}
inline const ::signal_source_definition::LinSource& Datapoint::lin_signal() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.lin_signal)
  return _internal_lin_signal();
}
inline ::signal_source_definition::LinSource* Datapoint::_internal_mutable_lin_signal() {
  if (!_internal_has_lin_signal()) {
    clear_signal_definition();
    set_has_lin_signal();
    signal_definition_.lin_signal_ = CreateMaybeMessage< ::signal_source_definition::LinSource >(
        GetArenaNoVirtual());
  }
  return signal_definition_.lin_signal_;
}
inline ::signal_source_definition::LinSource* Datapoint::mutable_lin_signal() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Datapoint.lin_signal)
  return _internal_mutable_lin_signal();
}

// .signal_source_definition.EthernetSource ethernet_signal = 4;
inline bool Datapoint::_internal_has_ethernet_signal() const {
  return signal_definition_case() == kEthernetSignal;
}
inline bool Datapoint::has_ethernet_signal() const {
  return _internal_has_ethernet_signal();
}
inline void Datapoint::set_has_ethernet_signal() {
  _oneof_case_[0] = kEthernetSignal;
}
inline ::signal_source_definition::EthernetSource* Datapoint::release_ethernet_signal() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Datapoint.ethernet_signal)
  if (_internal_has_ethernet_signal()) {
    clear_has_signal_definition();
      ::signal_source_definition::EthernetSource* temp = signal_definition_.ethernet_signal_;
    signal_definition_.ethernet_signal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::signal_source_definition::EthernetSource& Datapoint::_internal_ethernet_signal() const {
  return _internal_has_ethernet_signal()
      ? *signal_definition_.ethernet_signal_
      : *reinterpret_cast< ::signal_source_definition::EthernetSource*>(&::signal_source_definition::_EthernetSource_default_instance_);
}
inline const ::signal_source_definition::EthernetSource& Datapoint::ethernet_signal() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.ethernet_signal)
  return _internal_ethernet_signal();
}
inline ::signal_source_definition::EthernetSource* Datapoint::_internal_mutable_ethernet_signal() {
  if (!_internal_has_ethernet_signal()) {
    clear_signal_definition();
    set_has_ethernet_signal();
    signal_definition_.ethernet_signal_ = CreateMaybeMessage< ::signal_source_definition::EthernetSource >(
        GetArenaNoVirtual());
  }
  return signal_definition_.ethernet_signal_;
}
inline ::signal_source_definition::EthernetSource* Datapoint::mutable_ethernet_signal() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Datapoint.ethernet_signal)
  return _internal_mutable_ethernet_signal();
}

// .signal_source_definition.NetworkSource network_signal = 5;
inline bool Datapoint::_internal_has_network_signal() const {
  return signal_definition_case() == kNetworkSignal;
}
inline bool Datapoint::has_network_signal() const {
  return _internal_has_network_signal();
}
inline void Datapoint::set_has_network_signal() {
  _oneof_case_[0] = kNetworkSignal;
}
inline ::signal_source_definition::NetworkSource* Datapoint::release_network_signal() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Datapoint.network_signal)
  if (_internal_has_network_signal()) {
    clear_has_signal_definition();
      ::signal_source_definition::NetworkSource* temp = signal_definition_.network_signal_;
    signal_definition_.network_signal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::signal_source_definition::NetworkSource& Datapoint::_internal_network_signal() const {
  return _internal_has_network_signal()
      ? *signal_definition_.network_signal_
      : *reinterpret_cast< ::signal_source_definition::NetworkSource*>(&::signal_source_definition::_NetworkSource_default_instance_);
}
inline const ::signal_source_definition::NetworkSource& Datapoint::network_signal() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.network_signal)
  return _internal_network_signal();
}
inline ::signal_source_definition::NetworkSource* Datapoint::_internal_mutable_network_signal() {
  if (!_internal_has_network_signal()) {
    clear_signal_definition();
    set_has_network_signal();
    signal_definition_.network_signal_ = CreateMaybeMessage< ::signal_source_definition::NetworkSource >(
        GetArenaNoVirtual());
  }
  return signal_definition_.network_signal_;
}
inline ::signal_source_definition::NetworkSource* Datapoint::mutable_network_signal() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Datapoint.network_signal)
  return _internal_mutable_network_signal();
}

// .signal_source_definition.InternalSource internal_signal = 6;
inline bool Datapoint::_internal_has_internal_signal() const {
  return signal_definition_case() == kInternalSignal;
}
inline bool Datapoint::has_internal_signal() const {
  return _internal_has_internal_signal();
}
inline void Datapoint::set_has_internal_signal() {
  _oneof_case_[0] = kInternalSignal;
}
inline ::signal_source_definition::InternalSource* Datapoint::release_internal_signal() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Datapoint.internal_signal)
  if (_internal_has_internal_signal()) {
    clear_has_signal_definition();
      ::signal_source_definition::InternalSource* temp = signal_definition_.internal_signal_;
    signal_definition_.internal_signal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::signal_source_definition::InternalSource& Datapoint::_internal_internal_signal() const {
  return _internal_has_internal_signal()
      ? *signal_definition_.internal_signal_
      : *reinterpret_cast< ::signal_source_definition::InternalSource*>(&::signal_source_definition::_InternalSource_default_instance_);
}
inline const ::signal_source_definition::InternalSource& Datapoint::internal_signal() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.internal_signal)
  return _internal_internal_signal();
}
inline ::signal_source_definition::InternalSource* Datapoint::_internal_mutable_internal_signal() {
  if (!_internal_has_internal_signal()) {
    clear_signal_definition();
    set_has_internal_signal();
    signal_definition_.internal_signal_ = CreateMaybeMessage< ::signal_source_definition::InternalSource >(
        GetArenaNoVirtual());
  }
  return signal_definition_.internal_signal_;
}
inline ::signal_source_definition::InternalSource* Datapoint::mutable_internal_signal() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Datapoint.internal_signal)
  return _internal_mutable_internal_signal();
}

// .data_collection_configuration_request.Processing_Toolbox_Definition processing_toolbox_signal = 7;
inline bool Datapoint::_internal_has_processing_toolbox_signal() const {
  return signal_definition_case() == kProcessingToolboxSignal;
}
inline bool Datapoint::has_processing_toolbox_signal() const {
  return _internal_has_processing_toolbox_signal();
}
inline void Datapoint::set_has_processing_toolbox_signal() {
  _oneof_case_[0] = kProcessingToolboxSignal;
}
inline void Datapoint::clear_processing_toolbox_signal() {
  if (_internal_has_processing_toolbox_signal()) {
    delete signal_definition_.processing_toolbox_signal_;
    clear_has_signal_definition();
  }
}
inline ::data_collection_configuration_request::Processing_Toolbox_Definition* Datapoint::release_processing_toolbox_signal() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Datapoint.processing_toolbox_signal)
  if (_internal_has_processing_toolbox_signal()) {
    clear_has_signal_definition();
      ::data_collection_configuration_request::Processing_Toolbox_Definition* temp = signal_definition_.processing_toolbox_signal_;
    signal_definition_.processing_toolbox_signal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::data_collection_configuration_request::Processing_Toolbox_Definition& Datapoint::_internal_processing_toolbox_signal() const {
  return _internal_has_processing_toolbox_signal()
      ? *signal_definition_.processing_toolbox_signal_
      : *reinterpret_cast< ::data_collection_configuration_request::Processing_Toolbox_Definition*>(&::data_collection_configuration_request::_Processing_Toolbox_Definition_default_instance_);
}
inline const ::data_collection_configuration_request::Processing_Toolbox_Definition& Datapoint::processing_toolbox_signal() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.processing_toolbox_signal)
  return _internal_processing_toolbox_signal();
}
inline ::data_collection_configuration_request::Processing_Toolbox_Definition* Datapoint::_internal_mutable_processing_toolbox_signal() {
  if (!_internal_has_processing_toolbox_signal()) {
    clear_signal_definition();
    set_has_processing_toolbox_signal();
    signal_definition_.processing_toolbox_signal_ = CreateMaybeMessage< ::data_collection_configuration_request::Processing_Toolbox_Definition >(
        GetArenaNoVirtual());
  }
  return signal_definition_.processing_toolbox_signal_;
}
inline ::data_collection_configuration_request::Processing_Toolbox_Definition* Datapoint::mutable_processing_toolbox_signal() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Datapoint.processing_toolbox_signal)
  return _internal_mutable_processing_toolbox_signal();
}

// .signal_source_definition.ThriftmeSource thriftme_signal = 8;
inline bool Datapoint::_internal_has_thriftme_signal() const {
  return signal_definition_case() == kThriftmeSignal;
}
inline bool Datapoint::has_thriftme_signal() const {
  return _internal_has_thriftme_signal();
}
inline void Datapoint::set_has_thriftme_signal() {
  _oneof_case_[0] = kThriftmeSignal;
}
inline ::signal_source_definition::ThriftmeSource* Datapoint::release_thriftme_signal() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Datapoint.thriftme_signal)
  if (_internal_has_thriftme_signal()) {
    clear_has_signal_definition();
      ::signal_source_definition::ThriftmeSource* temp = signal_definition_.thriftme_signal_;
    signal_definition_.thriftme_signal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::signal_source_definition::ThriftmeSource& Datapoint::_internal_thriftme_signal() const {
  return _internal_has_thriftme_signal()
      ? *signal_definition_.thriftme_signal_
      : *reinterpret_cast< ::signal_source_definition::ThriftmeSource*>(&::signal_source_definition::_ThriftmeSource_default_instance_);
}
inline const ::signal_source_definition::ThriftmeSource& Datapoint::thriftme_signal() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.thriftme_signal)
  return _internal_thriftme_signal();
}
inline ::signal_source_definition::ThriftmeSource* Datapoint::_internal_mutable_thriftme_signal() {
  if (!_internal_has_thriftme_signal()) {
    clear_signal_definition();
    set_has_thriftme_signal();
    signal_definition_.thriftme_signal_ = CreateMaybeMessage< ::signal_source_definition::ThriftmeSource >(
        GetArenaNoVirtual());
  }
  return signal_definition_.thriftme_signal_;
}
inline ::signal_source_definition::ThriftmeSource* Datapoint::mutable_thriftme_signal() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Datapoint.thriftme_signal)
  return _internal_mutable_thriftme_signal();
}

// .signal_source_definition.CollectdSource collectd = 10;
inline bool Datapoint::_internal_has_collectd() const {
  return signal_definition_case() == kCollectd;
}
inline bool Datapoint::has_collectd() const {
  return _internal_has_collectd();
}
inline void Datapoint::set_has_collectd() {
  _oneof_case_[0] = kCollectd;
}
inline ::signal_source_definition::CollectdSource* Datapoint::release_collectd() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Datapoint.collectd)
  if (_internal_has_collectd()) {
    clear_has_signal_definition();
      ::signal_source_definition::CollectdSource* temp = signal_definition_.collectd_;
    signal_definition_.collectd_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::signal_source_definition::CollectdSource& Datapoint::_internal_collectd() const {
  return _internal_has_collectd()
      ? *signal_definition_.collectd_
      : *reinterpret_cast< ::signal_source_definition::CollectdSource*>(&::signal_source_definition::_CollectdSource_default_instance_);
}
inline const ::signal_source_definition::CollectdSource& Datapoint::collectd() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.collectd)
  return _internal_collectd();
}
inline ::signal_source_definition::CollectdSource* Datapoint::_internal_mutable_collectd() {
  if (!_internal_has_collectd()) {
    clear_signal_definition();
    set_has_collectd();
    signal_definition_.collectd_ = CreateMaybeMessage< ::signal_source_definition::CollectdSource >(
        GetArenaNoVirtual());
  }
  return signal_definition_.collectd_;
}
inline ::signal_source_definition::CollectdSource* Datapoint::mutable_collectd() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Datapoint.collectd)
  return _internal_mutable_collectd();
}

// .signal_source_definition.EELSource eelsource = 19;
inline bool Datapoint::_internal_has_eelsource() const {
  return signal_definition_case() == kEelsource;
}
inline bool Datapoint::has_eelsource() const {
  return _internal_has_eelsource();
}
inline void Datapoint::set_has_eelsource() {
  _oneof_case_[0] = kEelsource;
}
inline ::signal_source_definition::EELSource* Datapoint::release_eelsource() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Datapoint.eelsource)
  if (_internal_has_eelsource()) {
    clear_has_signal_definition();
      ::signal_source_definition::EELSource* temp = signal_definition_.eelsource_;
    signal_definition_.eelsource_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::signal_source_definition::EELSource& Datapoint::_internal_eelsource() const {
  return _internal_has_eelsource()
      ? *signal_definition_.eelsource_
      : *reinterpret_cast< ::signal_source_definition::EELSource*>(&::signal_source_definition::_EELSource_default_instance_);
}
inline const ::signal_source_definition::EELSource& Datapoint::eelsource() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.eelsource)
  return _internal_eelsource();
}
inline ::signal_source_definition::EELSource* Datapoint::_internal_mutable_eelsource() {
  if (!_internal_has_eelsource()) {
    clear_signal_definition();
    set_has_eelsource();
    signal_definition_.eelsource_ = CreateMaybeMessage< ::signal_source_definition::EELSource >(
        GetArenaNoVirtual());
  }
  return signal_definition_.eelsource_;
}
inline ::signal_source_definition::EELSource* Datapoint::mutable_eelsource() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Datapoint.eelsource)
  return _internal_mutable_eelsource();
}

// .signal_source_definition.ThriftmeSourceActive thriftme_active = 23;
inline bool Datapoint::_internal_has_thriftme_active() const {
  return signal_definition_case() == kThriftmeActive;
}
inline bool Datapoint::has_thriftme_active() const {
  return _internal_has_thriftme_active();
}
inline void Datapoint::set_has_thriftme_active() {
  _oneof_case_[0] = kThriftmeActive;
}
inline ::signal_source_definition::ThriftmeSourceActive* Datapoint::release_thriftme_active() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Datapoint.thriftme_active)
  if (_internal_has_thriftme_active()) {
    clear_has_signal_definition();
      ::signal_source_definition::ThriftmeSourceActive* temp = signal_definition_.thriftme_active_;
    signal_definition_.thriftme_active_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::signal_source_definition::ThriftmeSourceActive& Datapoint::_internal_thriftme_active() const {
  return _internal_has_thriftme_active()
      ? *signal_definition_.thriftme_active_
      : *reinterpret_cast< ::signal_source_definition::ThriftmeSourceActive*>(&::signal_source_definition::_ThriftmeSourceActive_default_instance_);
}
inline const ::signal_source_definition::ThriftmeSourceActive& Datapoint::thriftme_active() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.thriftme_active)
  return _internal_thriftme_active();
}
inline ::signal_source_definition::ThriftmeSourceActive* Datapoint::_internal_mutable_thriftme_active() {
  if (!_internal_has_thriftme_active()) {
    clear_signal_definition();
    set_has_thriftme_active();
    signal_definition_.thriftme_active_ = CreateMaybeMessage< ::signal_source_definition::ThriftmeSourceActive >(
        GetArenaNoVirtual());
  }
  return signal_definition_.thriftme_active_;
}
inline ::signal_source_definition::ThriftmeSourceActive* Datapoint::mutable_thriftme_active() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Datapoint.thriftme_active)
  return _internal_mutable_thriftme_active();
}

// bool filter_sna = 13;
inline void Datapoint::clear_filter_sna() {
  filter_sna_ = false;
}
inline bool Datapoint::_internal_filter_sna() const {
  return filter_sna_;
}
inline bool Datapoint::filter_sna() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.filter_sna)
  return _internal_filter_sna();
}
inline void Datapoint::_internal_set_filter_sna(bool value) {
  
  filter_sna_ = value;
}
inline void Datapoint::set_filter_sna(bool value) {
  _internal_set_filter_sna(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.Datapoint.filter_sna)
}

// .data_collection_configuration_request.ListOfSNA list_of_SNA = 20;
inline bool Datapoint::_internal_has_list_of_sna() const {
  return this != internal_default_instance() && list_of_sna_ != nullptr;
}
inline bool Datapoint::has_list_of_sna() const {
  return _internal_has_list_of_sna();
}
inline void Datapoint::clear_list_of_sna() {
  if (GetArenaNoVirtual() == nullptr && list_of_sna_ != nullptr) {
    delete list_of_sna_;
  }
  list_of_sna_ = nullptr;
}
inline const ::data_collection_configuration_request::ListOfSNA& Datapoint::_internal_list_of_sna() const {
  const ::data_collection_configuration_request::ListOfSNA* p = list_of_sna_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::ListOfSNA*>(
      &::data_collection_configuration_request::_ListOfSNA_default_instance_);
}
inline const ::data_collection_configuration_request::ListOfSNA& Datapoint::list_of_sna() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.list_of_SNA)
  return _internal_list_of_sna();
}
inline ::data_collection_configuration_request::ListOfSNA* Datapoint::release_list_of_sna() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Datapoint.list_of_SNA)
  
  ::data_collection_configuration_request::ListOfSNA* temp = list_of_sna_;
  list_of_sna_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::ListOfSNA* Datapoint::_internal_mutable_list_of_sna() {
  
  if (list_of_sna_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::ListOfSNA>(GetArenaNoVirtual());
    list_of_sna_ = p;
  }
  return list_of_sna_;
}
inline ::data_collection_configuration_request::ListOfSNA* Datapoint::mutable_list_of_sna() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Datapoint.list_of_SNA)
  return _internal_mutable_list_of_sna();
}
inline void Datapoint::set_allocated_list_of_sna(::data_collection_configuration_request::ListOfSNA* list_of_sna) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete list_of_sna_;
  }
  if (list_of_sna) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      list_of_sna = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_of_sna, submessage_arena);
    }
    
  } else {
    
  }
  list_of_sna_ = list_of_sna;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.Datapoint.list_of_SNA)
}

// bool filter_raw_value_custom = 21;
inline void Datapoint::clear_filter_raw_value_custom() {
  filter_raw_value_custom_ = false;
}
inline bool Datapoint::_internal_filter_raw_value_custom() const {
  return filter_raw_value_custom_;
}
inline bool Datapoint::filter_raw_value_custom() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.filter_raw_value_custom)
  return _internal_filter_raw_value_custom();
}
inline void Datapoint::_internal_set_filter_raw_value_custom(bool value) {
  
  filter_raw_value_custom_ = value;
}
inline void Datapoint::set_filter_raw_value_custom(bool value) {
  _internal_set_filter_raw_value_custom(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.Datapoint.filter_raw_value_custom)
}

// .data_collection_configuration_request.RawValueFilter raw_value_filter = 22;
inline bool Datapoint::_internal_has_raw_value_filter() const {
  return this != internal_default_instance() && raw_value_filter_ != nullptr;
}
inline bool Datapoint::has_raw_value_filter() const {
  return _internal_has_raw_value_filter();
}
inline void Datapoint::clear_raw_value_filter() {
  if (GetArenaNoVirtual() == nullptr && raw_value_filter_ != nullptr) {
    delete raw_value_filter_;
  }
  raw_value_filter_ = nullptr;
}
inline const ::data_collection_configuration_request::RawValueFilter& Datapoint::_internal_raw_value_filter() const {
  const ::data_collection_configuration_request::RawValueFilter* p = raw_value_filter_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::RawValueFilter*>(
      &::data_collection_configuration_request::_RawValueFilter_default_instance_);
}
inline const ::data_collection_configuration_request::RawValueFilter& Datapoint::raw_value_filter() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.raw_value_filter)
  return _internal_raw_value_filter();
}
inline ::data_collection_configuration_request::RawValueFilter* Datapoint::release_raw_value_filter() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Datapoint.raw_value_filter)
  
  ::data_collection_configuration_request::RawValueFilter* temp = raw_value_filter_;
  raw_value_filter_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::RawValueFilter* Datapoint::_internal_mutable_raw_value_filter() {
  
  if (raw_value_filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::RawValueFilter>(GetArenaNoVirtual());
    raw_value_filter_ = p;
  }
  return raw_value_filter_;
}
inline ::data_collection_configuration_request::RawValueFilter* Datapoint::mutable_raw_value_filter() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Datapoint.raw_value_filter)
  return _internal_mutable_raw_value_filter();
}
inline void Datapoint::set_allocated_raw_value_filter(::data_collection_configuration_request::RawValueFilter* raw_value_filter) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete raw_value_filter_;
  }
  if (raw_value_filter) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      raw_value_filter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, raw_value_filter, submessage_arena);
    }
    
  } else {
    
  }
  raw_value_filter_ = raw_value_filter;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.Datapoint.raw_value_filter)
}

// .data_collection_configuration_request.Datapoint.DataPointValueTypeEnum data_point_field_type = 14;
inline void Datapoint::clear_data_point_field_type() {
  data_point_field_type_ = 0;
}
inline ::data_collection_configuration_request::Datapoint_DataPointValueTypeEnum Datapoint::_internal_data_point_field_type() const {
  return static_cast< ::data_collection_configuration_request::Datapoint_DataPointValueTypeEnum >(data_point_field_type_);
}
inline ::data_collection_configuration_request::Datapoint_DataPointValueTypeEnum Datapoint::data_point_field_type() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.data_point_field_type)
  return _internal_data_point_field_type();
}
inline void Datapoint::_internal_set_data_point_field_type(::data_collection_configuration_request::Datapoint_DataPointValueTypeEnum value) {
  
  data_point_field_type_ = value;
}
inline void Datapoint::set_data_point_field_type(::data_collection_configuration_request::Datapoint_DataPointValueTypeEnum value) {
  _internal_set_data_point_field_type(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.Datapoint.data_point_field_type)
}

// uint32 min_number_of_instances = 16;
inline void Datapoint::clear_min_number_of_instances() {
  min_number_of_instances_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Datapoint::_internal_min_number_of_instances() const {
  return min_number_of_instances_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Datapoint::min_number_of_instances() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.min_number_of_instances)
  return _internal_min_number_of_instances();
}
inline void Datapoint::_internal_set_min_number_of_instances(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  min_number_of_instances_ = value;
}
inline void Datapoint::set_min_number_of_instances(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_min_number_of_instances(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.Datapoint.min_number_of_instances)
}

// .data_collection_configuration_request.Datapoint.RelativeDataValueCaptureEnum relative_data_value_capture = 17;
inline void Datapoint::clear_relative_data_value_capture() {
  relative_data_value_capture_ = 0;
}
inline ::data_collection_configuration_request::Datapoint_RelativeDataValueCaptureEnum Datapoint::_internal_relative_data_value_capture() const {
  return static_cast< ::data_collection_configuration_request::Datapoint_RelativeDataValueCaptureEnum >(relative_data_value_capture_);
}
inline ::data_collection_configuration_request::Datapoint_RelativeDataValueCaptureEnum Datapoint::relative_data_value_capture() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.relative_data_value_capture)
  return _internal_relative_data_value_capture();
}
inline void Datapoint::_internal_set_relative_data_value_capture(::data_collection_configuration_request::Datapoint_RelativeDataValueCaptureEnum value) {
  
  relative_data_value_capture_ = value;
}
inline void Datapoint::set_relative_data_value_capture(::data_collection_configuration_request::Datapoint_RelativeDataValueCaptureEnum value) {
  _internal_set_relative_data_value_capture(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.Datapoint.relative_data_value_capture)
}

// string slug = 18;
inline void Datapoint::clear_slug() {
  slug_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Datapoint::slug() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Datapoint.slug)
  return _internal_slug();
}
inline void Datapoint::set_slug(const std::string& value) {
  _internal_set_slug(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.Datapoint.slug)
}
inline std::string* Datapoint::mutable_slug() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Datapoint.slug)
  return _internal_mutable_slug();
}
inline const std::string& Datapoint::_internal_slug() const {
  return slug_.GetNoArena();
}
inline void Datapoint::_internal_set_slug(const std::string& value) {
  
  slug_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Datapoint::set_slug(std::string&& value) {
  
  slug_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:data_collection_configuration_request.Datapoint.slug)
}
inline void Datapoint::set_slug(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  slug_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_collection_configuration_request.Datapoint.slug)
}
inline void Datapoint::set_slug(const char* value, size_t size) {
  
  slug_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_collection_configuration_request.Datapoint.slug)
}
inline std::string* Datapoint::_internal_mutable_slug() {
  
  return slug_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Datapoint::release_slug() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Datapoint.slug)
  
  return slug_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Datapoint::set_allocated_slug(std::string* slug) {
  if (slug != nullptr) {
    
  } else {
    
  }
  slug_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), slug);
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.Datapoint.slug)
}

inline bool Datapoint::has_signal_definition() const {
  return signal_definition_case() != SIGNAL_DEFINITION_NOT_SET;
}
inline void Datapoint::clear_has_signal_definition() {
  _oneof_case_[0] = SIGNAL_DEFINITION_NOT_SET;
}
inline Datapoint::SignalDefinitionCase Datapoint::signal_definition_case() const {
  return Datapoint::SignalDefinitionCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Processing_Toolbox_Definition

// .signal_source_definition.ProcessingToolboxSource processing_toolbox_signal_def = 1;
inline bool Processing_Toolbox_Definition::_internal_has_processing_toolbox_signal_def() const {
  return this != internal_default_instance() && processing_toolbox_signal_def_ != nullptr;
}
inline bool Processing_Toolbox_Definition::has_processing_toolbox_signal_def() const {
  return _internal_has_processing_toolbox_signal_def();
}
inline const ::signal_source_definition::ProcessingToolboxSource& Processing_Toolbox_Definition::_internal_processing_toolbox_signal_def() const {
  const ::signal_source_definition::ProcessingToolboxSource* p = processing_toolbox_signal_def_;
  return p != nullptr ? *p : *reinterpret_cast<const ::signal_source_definition::ProcessingToolboxSource*>(
      &::signal_source_definition::_ProcessingToolboxSource_default_instance_);
}
inline const ::signal_source_definition::ProcessingToolboxSource& Processing_Toolbox_Definition::processing_toolbox_signal_def() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Processing_Toolbox_Definition.processing_toolbox_signal_def)
  return _internal_processing_toolbox_signal_def();
}
inline ::signal_source_definition::ProcessingToolboxSource* Processing_Toolbox_Definition::release_processing_toolbox_signal_def() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.Processing_Toolbox_Definition.processing_toolbox_signal_def)
  
  ::signal_source_definition::ProcessingToolboxSource* temp = processing_toolbox_signal_def_;
  processing_toolbox_signal_def_ = nullptr;
  return temp;
}
inline ::signal_source_definition::ProcessingToolboxSource* Processing_Toolbox_Definition::_internal_mutable_processing_toolbox_signal_def() {
  
  if (processing_toolbox_signal_def_ == nullptr) {
    auto* p = CreateMaybeMessage<::signal_source_definition::ProcessingToolboxSource>(GetArenaNoVirtual());
    processing_toolbox_signal_def_ = p;
  }
  return processing_toolbox_signal_def_;
}
inline ::signal_source_definition::ProcessingToolboxSource* Processing_Toolbox_Definition::mutable_processing_toolbox_signal_def() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Processing_Toolbox_Definition.processing_toolbox_signal_def)
  return _internal_mutable_processing_toolbox_signal_def();
}
inline void Processing_Toolbox_Definition::set_allocated_processing_toolbox_signal_def(::signal_source_definition::ProcessingToolboxSource* processing_toolbox_signal_def) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(processing_toolbox_signal_def_);
  }
  if (processing_toolbox_signal_def) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      processing_toolbox_signal_def = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, processing_toolbox_signal_def, submessage_arena);
    }
    
  } else {
    
  }
  processing_toolbox_signal_def_ = processing_toolbox_signal_def;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.Processing_Toolbox_Definition.processing_toolbox_signal_def)
}

// repeated .data_collection_configuration_request.ToolInputParameter tool_input_parameter = 2;
inline int Processing_Toolbox_Definition::_internal_tool_input_parameter_size() const {
  return tool_input_parameter_.size();
}
inline int Processing_Toolbox_Definition::tool_input_parameter_size() const {
  return _internal_tool_input_parameter_size();
}
inline void Processing_Toolbox_Definition::clear_tool_input_parameter() {
  tool_input_parameter_.Clear();
}
inline ::data_collection_configuration_request::ToolInputParameter* Processing_Toolbox_Definition::mutable_tool_input_parameter(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.Processing_Toolbox_Definition.tool_input_parameter)
  return tool_input_parameter_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::ToolInputParameter >*
Processing_Toolbox_Definition::mutable_tool_input_parameter() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.Processing_Toolbox_Definition.tool_input_parameter)
  return &tool_input_parameter_;
}
inline const ::data_collection_configuration_request::ToolInputParameter& Processing_Toolbox_Definition::_internal_tool_input_parameter(int index) const {
  return tool_input_parameter_.Get(index);
}
inline const ::data_collection_configuration_request::ToolInputParameter& Processing_Toolbox_Definition::tool_input_parameter(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.Processing_Toolbox_Definition.tool_input_parameter)
  return _internal_tool_input_parameter(index);
}
inline ::data_collection_configuration_request::ToolInputParameter* Processing_Toolbox_Definition::_internal_add_tool_input_parameter() {
  return tool_input_parameter_.Add();
}
inline ::data_collection_configuration_request::ToolInputParameter* Processing_Toolbox_Definition::add_tool_input_parameter() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.Processing_Toolbox_Definition.tool_input_parameter)
  return _internal_add_tool_input_parameter();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::ToolInputParameter >&
Processing_Toolbox_Definition::tool_input_parameter() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.Processing_Toolbox_Definition.tool_input_parameter)
  return tool_input_parameter_;
}

// -------------------------------------------------------------------

// ToolInputParameter

// .data_collection_configuration_request.Datapoint input = 1;
inline bool ToolInputParameter::_internal_has_input() const {
  return this != internal_default_instance() && input_ != nullptr;
}
inline bool ToolInputParameter::has_input() const {
  return _internal_has_input();
}
inline void ToolInputParameter::clear_input() {
  if (GetArenaNoVirtual() == nullptr && input_ != nullptr) {
    delete input_;
  }
  input_ = nullptr;
}
inline const ::data_collection_configuration_request::Datapoint& ToolInputParameter::_internal_input() const {
  const ::data_collection_configuration_request::Datapoint* p = input_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::Datapoint*>(
      &::data_collection_configuration_request::_Datapoint_default_instance_);
}
inline const ::data_collection_configuration_request::Datapoint& ToolInputParameter::input() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.ToolInputParameter.input)
  return _internal_input();
}
inline ::data_collection_configuration_request::Datapoint* ToolInputParameter::release_input() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.ToolInputParameter.input)
  
  ::data_collection_configuration_request::Datapoint* temp = input_;
  input_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::Datapoint* ToolInputParameter::_internal_mutable_input() {
  
  if (input_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::Datapoint>(GetArenaNoVirtual());
    input_ = p;
  }
  return input_;
}
inline ::data_collection_configuration_request::Datapoint* ToolInputParameter::mutable_input() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.ToolInputParameter.input)
  return _internal_mutable_input();
}
inline void ToolInputParameter::set_allocated_input(::data_collection_configuration_request::Datapoint* input) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete input_;
  }
  if (input) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      input = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, input, submessage_arena);
    }
    
  } else {
    
  }
  input_ = input;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.ToolInputParameter.input)
}

// int32 dpi_type = 2;
inline void ToolInputParameter::clear_dpi_type() {
  dpi_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ToolInputParameter::_internal_dpi_type() const {
  return dpi_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ToolInputParameter::dpi_type() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.ToolInputParameter.dpi_type)
  return _internal_dpi_type();
}
inline void ToolInputParameter::_internal_set_dpi_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  dpi_type_ = value;
}
inline void ToolInputParameter::set_dpi_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dpi_type(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.ToolInputParameter.dpi_type)
}

// string dpr = 3;
inline void ToolInputParameter::clear_dpr() {
  dpr_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ToolInputParameter::dpr() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.ToolInputParameter.dpr)
  return _internal_dpr();
}
inline void ToolInputParameter::set_dpr(const std::string& value) {
  _internal_set_dpr(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.ToolInputParameter.dpr)
}
inline std::string* ToolInputParameter::mutable_dpr() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.ToolInputParameter.dpr)
  return _internal_mutable_dpr();
}
inline const std::string& ToolInputParameter::_internal_dpr() const {
  return dpr_.GetNoArena();
}
inline void ToolInputParameter::_internal_set_dpr(const std::string& value) {
  
  dpr_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ToolInputParameter::set_dpr(std::string&& value) {
  
  dpr_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:data_collection_configuration_request.ToolInputParameter.dpr)
}
inline void ToolInputParameter::set_dpr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  dpr_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_collection_configuration_request.ToolInputParameter.dpr)
}
inline void ToolInputParameter::set_dpr(const char* value, size_t size) {
  
  dpr_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_collection_configuration_request.ToolInputParameter.dpr)
}
inline std::string* ToolInputParameter::_internal_mutable_dpr() {
  
  return dpr_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ToolInputParameter::release_dpr() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.ToolInputParameter.dpr)
  
  return dpr_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ToolInputParameter::set_allocated_dpr(std::string* dpr) {
  if (dpr != nullptr) {
    
  } else {
    
  }
  dpr_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), dpr);
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.ToolInputParameter.dpr)
}

// .data_collection_configuration_request.DatapointsConfiguration data_points_configuration = 4;
inline bool ToolInputParameter::_internal_has_data_points_configuration() const {
  return this != internal_default_instance() && data_points_configuration_ != nullptr;
}
inline bool ToolInputParameter::has_data_points_configuration() const {
  return _internal_has_data_points_configuration();
}
inline void ToolInputParameter::clear_data_points_configuration() {
  if (GetArenaNoVirtual() == nullptr && data_points_configuration_ != nullptr) {
    delete data_points_configuration_;
  }
  data_points_configuration_ = nullptr;
}
inline const ::data_collection_configuration_request::DatapointsConfiguration& ToolInputParameter::_internal_data_points_configuration() const {
  const ::data_collection_configuration_request::DatapointsConfiguration* p = data_points_configuration_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::DatapointsConfiguration*>(
      &::data_collection_configuration_request::_DatapointsConfiguration_default_instance_);
}
inline const ::data_collection_configuration_request::DatapointsConfiguration& ToolInputParameter::data_points_configuration() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.ToolInputParameter.data_points_configuration)
  return _internal_data_points_configuration();
}
inline ::data_collection_configuration_request::DatapointsConfiguration* ToolInputParameter::release_data_points_configuration() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.ToolInputParameter.data_points_configuration)
  
  ::data_collection_configuration_request::DatapointsConfiguration* temp = data_points_configuration_;
  data_points_configuration_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::DatapointsConfiguration* ToolInputParameter::_internal_mutable_data_points_configuration() {
  
  if (data_points_configuration_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::DatapointsConfiguration>(GetArenaNoVirtual());
    data_points_configuration_ = p;
  }
  return data_points_configuration_;
}
inline ::data_collection_configuration_request::DatapointsConfiguration* ToolInputParameter::mutable_data_points_configuration() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.ToolInputParameter.data_points_configuration)
  return _internal_mutable_data_points_configuration();
}
inline void ToolInputParameter::set_allocated_data_points_configuration(::data_collection_configuration_request::DatapointsConfiguration* data_points_configuration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete data_points_configuration_;
  }
  if (data_points_configuration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data_points_configuration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data_points_configuration, submessage_arena);
    }
    
  } else {
    
  }
  data_points_configuration_ = data_points_configuration;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.ToolInputParameter.data_points_configuration)
}

// -------------------------------------------------------------------

// DatapointsConfiguration

// repeated .data_collection_configuration_request.Trigger event_trigger = 1;
inline int DatapointsConfiguration::_internal_event_trigger_size() const {
  return event_trigger_.size();
}
inline int DatapointsConfiguration::event_trigger_size() const {
  return _internal_event_trigger_size();
}
inline void DatapointsConfiguration::clear_event_trigger() {
  event_trigger_.Clear();
}
inline ::data_collection_configuration_request::Trigger* DatapointsConfiguration::mutable_event_trigger(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.DatapointsConfiguration.event_trigger)
  return event_trigger_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Trigger >*
DatapointsConfiguration::mutable_event_trigger() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.DatapointsConfiguration.event_trigger)
  return &event_trigger_;
}
inline const ::data_collection_configuration_request::Trigger& DatapointsConfiguration::_internal_event_trigger(int index) const {
  return event_trigger_.Get(index);
}
inline const ::data_collection_configuration_request::Trigger& DatapointsConfiguration::event_trigger(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DatapointsConfiguration.event_trigger)
  return _internal_event_trigger(index);
}
inline ::data_collection_configuration_request::Trigger* DatapointsConfiguration::_internal_add_event_trigger() {
  return event_trigger_.Add();
}
inline ::data_collection_configuration_request::Trigger* DatapointsConfiguration::add_event_trigger() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.DatapointsConfiguration.event_trigger)
  return _internal_add_event_trigger();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::data_collection_configuration_request::Trigger >&
DatapointsConfiguration::event_trigger() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.DatapointsConfiguration.event_trigger)
  return event_trigger_;
}

// .data_collection_configuration_request.LogicalOperatorEnum collection_trigger_operator = 2;
inline void DatapointsConfiguration::clear_collection_trigger_operator() {
  collection_trigger_operator_ = 0;
}
inline ::data_collection_configuration_request::LogicalOperatorEnum DatapointsConfiguration::_internal_collection_trigger_operator() const {
  return static_cast< ::data_collection_configuration_request::LogicalOperatorEnum >(collection_trigger_operator_);
}
inline ::data_collection_configuration_request::LogicalOperatorEnum DatapointsConfiguration::collection_trigger_operator() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DatapointsConfiguration.collection_trigger_operator)
  return _internal_collection_trigger_operator();
}
inline void DatapointsConfiguration::_internal_set_collection_trigger_operator(::data_collection_configuration_request::LogicalOperatorEnum value) {
  
  collection_trigger_operator_ = value;
}
inline void DatapointsConfiguration::set_collection_trigger_operator(::data_collection_configuration_request::LogicalOperatorEnum value) {
  _internal_set_collection_trigger_operator(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DatapointsConfiguration.collection_trigger_operator)
}

// -------------------------------------------------------------------

// RvidEffectivePeriod

// uint32 rvid_effective_period_range_min_seconds = 1;
inline void RvidEffectivePeriod::clear_rvid_effective_period_range_min_seconds() {
  rvid_effective_period_range_min_seconds_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RvidEffectivePeriod::_internal_rvid_effective_period_range_min_seconds() const {
  return rvid_effective_period_range_min_seconds_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RvidEffectivePeriod::rvid_effective_period_range_min_seconds() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.RvidEffectivePeriod.rvid_effective_period_range_min_seconds)
  return _internal_rvid_effective_period_range_min_seconds();
}
inline void RvidEffectivePeriod::_internal_set_rvid_effective_period_range_min_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rvid_effective_period_range_min_seconds_ = value;
}
inline void RvidEffectivePeriod::set_rvid_effective_period_range_min_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rvid_effective_period_range_min_seconds(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.RvidEffectivePeriod.rvid_effective_period_range_min_seconds)
}

// uint32 rvid_effective_period_range_max_seconds = 2;
inline void RvidEffectivePeriod::clear_rvid_effective_period_range_max_seconds() {
  rvid_effective_period_range_max_seconds_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RvidEffectivePeriod::_internal_rvid_effective_period_range_max_seconds() const {
  return rvid_effective_period_range_max_seconds_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RvidEffectivePeriod::rvid_effective_period_range_max_seconds() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.RvidEffectivePeriod.rvid_effective_period_range_max_seconds)
  return _internal_rvid_effective_period_range_max_seconds();
}
inline void RvidEffectivePeriod::_internal_set_rvid_effective_period_range_max_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rvid_effective_period_range_max_seconds_ = value;
}
inline void RvidEffectivePeriod::set_rvid_effective_period_range_max_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rvid_effective_period_range_max_seconds(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.RvidEffectivePeriod.rvid_effective_period_range_max_seconds)
}

// -------------------------------------------------------------------

// DataPackageTimeToLive

// uint32 data_package_time_to_live_min_s = 1;
inline void DataPackageTimeToLive::clear_data_package_time_to_live_min_s() {
  data_package_time_to_live_min_s_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataPackageTimeToLive::_internal_data_package_time_to_live_min_s() const {
  return data_package_time_to_live_min_s_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataPackageTimeToLive::data_package_time_to_live_min_s() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataPackageTimeToLive.data_package_time_to_live_min_s)
  return _internal_data_package_time_to_live_min_s();
}
inline void DataPackageTimeToLive::_internal_set_data_package_time_to_live_min_s(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_package_time_to_live_min_s_ = value;
}
inline void DataPackageTimeToLive::set_data_package_time_to_live_min_s(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_package_time_to_live_min_s(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataPackageTimeToLive.data_package_time_to_live_min_s)
}

// uint32 data_package_time_to_live_max_s = 2;
inline void DataPackageTimeToLive::clear_data_package_time_to_live_max_s() {
  data_package_time_to_live_max_s_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataPackageTimeToLive::_internal_data_package_time_to_live_max_s() const {
  return data_package_time_to_live_max_s_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataPackageTimeToLive::data_package_time_to_live_max_s() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataPackageTimeToLive.data_package_time_to_live_max_s)
  return _internal_data_package_time_to_live_max_s();
}
inline void DataPackageTimeToLive::_internal_set_data_package_time_to_live_max_s(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_package_time_to_live_max_s_ = value;
}
inline void DataPackageTimeToLive::set_data_package_time_to_live_max_s(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_package_time_to_live_max_s(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataPackageTimeToLive.data_package_time_to_live_max_s)
}

// -------------------------------------------------------------------

// DataCollectionJob_JobConfig

// string job_uuid = 1;
inline void DataCollectionJob_JobConfig::clear_job_uuid() {
  job_uuid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DataCollectionJob_JobConfig::job_uuid() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.job_uuid)
  return _internal_job_uuid();
}
inline void DataCollectionJob_JobConfig::set_job_uuid(const std::string& value) {
  _internal_set_job_uuid(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.job_uuid)
}
inline std::string* DataCollectionJob_JobConfig::mutable_job_uuid() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.DataCollectionJob.JobConfig.job_uuid)
  return _internal_mutable_job_uuid();
}
inline const std::string& DataCollectionJob_JobConfig::_internal_job_uuid() const {
  return job_uuid_.GetNoArena();
}
inline void DataCollectionJob_JobConfig::_internal_set_job_uuid(const std::string& value) {
  
  job_uuid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DataCollectionJob_JobConfig::set_job_uuid(std::string&& value) {
  
  job_uuid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:data_collection_configuration_request.DataCollectionJob.JobConfig.job_uuid)
}
inline void DataCollectionJob_JobConfig::set_job_uuid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  job_uuid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_collection_configuration_request.DataCollectionJob.JobConfig.job_uuid)
}
inline void DataCollectionJob_JobConfig::set_job_uuid(const char* value, size_t size) {
  
  job_uuid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_collection_configuration_request.DataCollectionJob.JobConfig.job_uuid)
}
inline std::string* DataCollectionJob_JobConfig::_internal_mutable_job_uuid() {
  
  return job_uuid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DataCollectionJob_JobConfig::release_job_uuid() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.DataCollectionJob.JobConfig.job_uuid)
  
  return job_uuid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DataCollectionJob_JobConfig::set_allocated_job_uuid(std::string* job_uuid) {
  if (job_uuid != nullptr) {
    
  } else {
    
  }
  job_uuid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), job_uuid);
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.DataCollectionJob.JobConfig.job_uuid)
}

// .data_collection_configuration_request.RvidEffectivePeriod rvid_effective_period_range = 2;
inline bool DataCollectionJob_JobConfig::_internal_has_rvid_effective_period_range() const {
  return this != internal_default_instance() && rvid_effective_period_range_ != nullptr;
}
inline bool DataCollectionJob_JobConfig::has_rvid_effective_period_range() const {
  return _internal_has_rvid_effective_period_range();
}
inline void DataCollectionJob_JobConfig::clear_rvid_effective_period_range() {
  if (GetArenaNoVirtual() == nullptr && rvid_effective_period_range_ != nullptr) {
    delete rvid_effective_period_range_;
  }
  rvid_effective_period_range_ = nullptr;
}
inline const ::data_collection_configuration_request::RvidEffectivePeriod& DataCollectionJob_JobConfig::_internal_rvid_effective_period_range() const {
  const ::data_collection_configuration_request::RvidEffectivePeriod* p = rvid_effective_period_range_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::RvidEffectivePeriod*>(
      &::data_collection_configuration_request::_RvidEffectivePeriod_default_instance_);
}
inline const ::data_collection_configuration_request::RvidEffectivePeriod& DataCollectionJob_JobConfig::rvid_effective_period_range() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.rvid_effective_period_range)
  return _internal_rvid_effective_period_range();
}
inline ::data_collection_configuration_request::RvidEffectivePeriod* DataCollectionJob_JobConfig::release_rvid_effective_period_range() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.DataCollectionJob.JobConfig.rvid_effective_period_range)
  
  ::data_collection_configuration_request::RvidEffectivePeriod* temp = rvid_effective_period_range_;
  rvid_effective_period_range_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::RvidEffectivePeriod* DataCollectionJob_JobConfig::_internal_mutable_rvid_effective_period_range() {
  
  if (rvid_effective_period_range_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::RvidEffectivePeriod>(GetArenaNoVirtual());
    rvid_effective_period_range_ = p;
  }
  return rvid_effective_period_range_;
}
inline ::data_collection_configuration_request::RvidEffectivePeriod* DataCollectionJob_JobConfig::mutable_rvid_effective_period_range() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.DataCollectionJob.JobConfig.rvid_effective_period_range)
  return _internal_mutable_rvid_effective_period_range();
}
inline void DataCollectionJob_JobConfig::set_allocated_rvid_effective_period_range(::data_collection_configuration_request::RvidEffectivePeriod* rvid_effective_period_range) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete rvid_effective_period_range_;
  }
  if (rvid_effective_period_range) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rvid_effective_period_range = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rvid_effective_period_range, submessage_arena);
    }
    
  } else {
    
  }
  rvid_effective_period_range_ = rvid_effective_period_range;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.DataCollectionJob.JobConfig.rvid_effective_period_range)
}

// uint32 nossg_allowed = 3;
inline void DataCollectionJob_JobConfig::clear_nossg_allowed() {
  nossg_allowed_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataCollectionJob_JobConfig::_internal_nossg_allowed() const {
  return nossg_allowed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataCollectionJob_JobConfig::nossg_allowed() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.nossg_allowed)
  return _internal_nossg_allowed();
}
inline void DataCollectionJob_JobConfig::_internal_set_nossg_allowed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  nossg_allowed_ = value;
}
inline void DataCollectionJob_JobConfig::set_nossg_allowed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_nossg_allowed(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.nossg_allowed)
}

// bool enable_active_thrift = 4;
inline void DataCollectionJob_JobConfig::clear_enable_active_thrift() {
  enable_active_thrift_ = false;
}
inline bool DataCollectionJob_JobConfig::_internal_enable_active_thrift() const {
  return enable_active_thrift_;
}
inline bool DataCollectionJob_JobConfig::enable_active_thrift() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.enable_active_thrift)
  return _internal_enable_active_thrift();
}
inline void DataCollectionJob_JobConfig::_internal_set_enable_active_thrift(bool value) {
  
  enable_active_thrift_ = value;
}
inline void DataCollectionJob_JobConfig::set_enable_active_thrift(bool value) {
  _internal_set_enable_active_thrift(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.enable_active_thrift)
}

// uint32 active_thrift_interval_ms = 5;
inline void DataCollectionJob_JobConfig::clear_active_thrift_interval_ms() {
  active_thrift_interval_ms_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataCollectionJob_JobConfig::_internal_active_thrift_interval_ms() const {
  return active_thrift_interval_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataCollectionJob_JobConfig::active_thrift_interval_ms() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.active_thrift_interval_ms)
  return _internal_active_thrift_interval_ms();
}
inline void DataCollectionJob_JobConfig::_internal_set_active_thrift_interval_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  active_thrift_interval_ms_ = value;
}
inline void DataCollectionJob_JobConfig::set_active_thrift_interval_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_active_thrift_interval_ms(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.active_thrift_interval_ms)
}

// uint32 active_thrift_retry_ms = 6;
inline void DataCollectionJob_JobConfig::clear_active_thrift_retry_ms() {
  active_thrift_retry_ms_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataCollectionJob_JobConfig::_internal_active_thrift_retry_ms() const {
  return active_thrift_retry_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataCollectionJob_JobConfig::active_thrift_retry_ms() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.active_thrift_retry_ms)
  return _internal_active_thrift_retry_ms();
}
inline void DataCollectionJob_JobConfig::_internal_set_active_thrift_retry_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  active_thrift_retry_ms_ = value;
}
inline void DataCollectionJob_JobConfig::set_active_thrift_retry_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_active_thrift_retry_ms(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.active_thrift_retry_ms)
}

// uint32 active_thrift_connect_timeout_ms = 7;
inline void DataCollectionJob_JobConfig::clear_active_thrift_connect_timeout_ms() {
  active_thrift_connect_timeout_ms_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataCollectionJob_JobConfig::_internal_active_thrift_connect_timeout_ms() const {
  return active_thrift_connect_timeout_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataCollectionJob_JobConfig::active_thrift_connect_timeout_ms() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.active_thrift_connect_timeout_ms)
  return _internal_active_thrift_connect_timeout_ms();
}
inline void DataCollectionJob_JobConfig::_internal_set_active_thrift_connect_timeout_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  active_thrift_connect_timeout_ms_ = value;
}
inline void DataCollectionJob_JobConfig::set_active_thrift_connect_timeout_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_active_thrift_connect_timeout_ms(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.active_thrift_connect_timeout_ms)
}

// uint32 active_thrift_response_timeout_ms = 8;
inline void DataCollectionJob_JobConfig::clear_active_thrift_response_timeout_ms() {
  active_thrift_response_timeout_ms_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataCollectionJob_JobConfig::_internal_active_thrift_response_timeout_ms() const {
  return active_thrift_response_timeout_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataCollectionJob_JobConfig::active_thrift_response_timeout_ms() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.active_thrift_response_timeout_ms)
  return _internal_active_thrift_response_timeout_ms();
}
inline void DataCollectionJob_JobConfig::_internal_set_active_thrift_response_timeout_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  active_thrift_response_timeout_ms_ = value;
}
inline void DataCollectionJob_JobConfig::set_active_thrift_response_timeout_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_active_thrift_response_timeout_ms(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.active_thrift_response_timeout_ms)
}

// uint32 upload_interval = 9;
inline void DataCollectionJob_JobConfig::clear_upload_interval() {
  upload_interval_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataCollectionJob_JobConfig::_internal_upload_interval() const {
  return upload_interval_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataCollectionJob_JobConfig::upload_interval() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.upload_interval)
  return _internal_upload_interval();
}
inline void DataCollectionJob_JobConfig::_internal_set_upload_interval(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  upload_interval_ = value;
}
inline void DataCollectionJob_JobConfig::set_upload_interval(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_upload_interval(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.upload_interval)
}

// uint32 stf_buffer_size = 10;
inline void DataCollectionJob_JobConfig::clear_stf_buffer_size() {
  stf_buffer_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataCollectionJob_JobConfig::_internal_stf_buffer_size() const {
  return stf_buffer_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataCollectionJob_JobConfig::stf_buffer_size() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.stf_buffer_size)
  return _internal_stf_buffer_size();
}
inline void DataCollectionJob_JobConfig::_internal_set_stf_buffer_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  stf_buffer_size_ = value;
}
inline void DataCollectionJob_JobConfig::set_stf_buffer_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stf_buffer_size(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.stf_buffer_size)
}

// bool record_vin = 11;
inline void DataCollectionJob_JobConfig::clear_record_vin() {
  record_vin_ = false;
}
inline bool DataCollectionJob_JobConfig::_internal_record_vin() const {
  return record_vin_;
}
inline bool DataCollectionJob_JobConfig::record_vin() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.record_vin)
  return _internal_record_vin();
}
inline void DataCollectionJob_JobConfig::_internal_set_record_vin(bool value) {
  
  record_vin_ = value;
}
inline void DataCollectionJob_JobConfig::set_record_vin(bool value) {
  _internal_set_record_vin(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.record_vin)
}

// bool persist_request = 12;
inline void DataCollectionJob_JobConfig::clear_persist_request() {
  persist_request_ = false;
}
inline bool DataCollectionJob_JobConfig::_internal_persist_request() const {
  return persist_request_;
}
inline bool DataCollectionJob_JobConfig::persist_request() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.persist_request)
  return _internal_persist_request();
}
inline void DataCollectionJob_JobConfig::_internal_set_persist_request(bool value) {
  
  persist_request_ = value;
}
inline void DataCollectionJob_JobConfig::set_persist_request(bool value) {
  _internal_set_persist_request(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.persist_request)
}

// .data_collection_configuration_request.StartUpDelay startup_delay = 13;
inline bool DataCollectionJob_JobConfig::_internal_has_startup_delay() const {
  return this != internal_default_instance() && startup_delay_ != nullptr;
}
inline bool DataCollectionJob_JobConfig::has_startup_delay() const {
  return _internal_has_startup_delay();
}
inline void DataCollectionJob_JobConfig::clear_startup_delay() {
  if (GetArenaNoVirtual() == nullptr && startup_delay_ != nullptr) {
    delete startup_delay_;
  }
  startup_delay_ = nullptr;
}
inline const ::data_collection_configuration_request::StartUpDelay& DataCollectionJob_JobConfig::_internal_startup_delay() const {
  const ::data_collection_configuration_request::StartUpDelay* p = startup_delay_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::StartUpDelay*>(
      &::data_collection_configuration_request::_StartUpDelay_default_instance_);
}
inline const ::data_collection_configuration_request::StartUpDelay& DataCollectionJob_JobConfig::startup_delay() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.startup_delay)
  return _internal_startup_delay();
}
inline ::data_collection_configuration_request::StartUpDelay* DataCollectionJob_JobConfig::release_startup_delay() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.DataCollectionJob.JobConfig.startup_delay)
  
  ::data_collection_configuration_request::StartUpDelay* temp = startup_delay_;
  startup_delay_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::StartUpDelay* DataCollectionJob_JobConfig::_internal_mutable_startup_delay() {
  
  if (startup_delay_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::StartUpDelay>(GetArenaNoVirtual());
    startup_delay_ = p;
  }
  return startup_delay_;
}
inline ::data_collection_configuration_request::StartUpDelay* DataCollectionJob_JobConfig::mutable_startup_delay() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.DataCollectionJob.JobConfig.startup_delay)
  return _internal_mutable_startup_delay();
}
inline void DataCollectionJob_JobConfig::set_allocated_startup_delay(::data_collection_configuration_request::StartUpDelay* startup_delay) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete startup_delay_;
  }
  if (startup_delay) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      startup_delay = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, startup_delay, submessage_arena);
    }
    
  } else {
    
  }
  startup_delay_ = startup_delay;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.DataCollectionJob.JobConfig.startup_delay)
}

// .data_collection_configuration_request.EndPointUncertainty end_point_uncertainity = 14;
inline bool DataCollectionJob_JobConfig::_internal_has_end_point_uncertainity() const {
  return this != internal_default_instance() && end_point_uncertainity_ != nullptr;
}
inline bool DataCollectionJob_JobConfig::has_end_point_uncertainity() const {
  return _internal_has_end_point_uncertainity();
}
inline void DataCollectionJob_JobConfig::clear_end_point_uncertainity() {
  if (GetArenaNoVirtual() == nullptr && end_point_uncertainity_ != nullptr) {
    delete end_point_uncertainity_;
  }
  end_point_uncertainity_ = nullptr;
}
inline const ::data_collection_configuration_request::EndPointUncertainty& DataCollectionJob_JobConfig::_internal_end_point_uncertainity() const {
  const ::data_collection_configuration_request::EndPointUncertainty* p = end_point_uncertainity_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::EndPointUncertainty*>(
      &::data_collection_configuration_request::_EndPointUncertainty_default_instance_);
}
inline const ::data_collection_configuration_request::EndPointUncertainty& DataCollectionJob_JobConfig::end_point_uncertainity() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.end_point_uncertainity)
  return _internal_end_point_uncertainity();
}
inline ::data_collection_configuration_request::EndPointUncertainty* DataCollectionJob_JobConfig::release_end_point_uncertainity() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.DataCollectionJob.JobConfig.end_point_uncertainity)
  
  ::data_collection_configuration_request::EndPointUncertainty* temp = end_point_uncertainity_;
  end_point_uncertainity_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::EndPointUncertainty* DataCollectionJob_JobConfig::_internal_mutable_end_point_uncertainity() {
  
  if (end_point_uncertainity_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::EndPointUncertainty>(GetArenaNoVirtual());
    end_point_uncertainity_ = p;
  }
  return end_point_uncertainity_;
}
inline ::data_collection_configuration_request::EndPointUncertainty* DataCollectionJob_JobConfig::mutable_end_point_uncertainity() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.DataCollectionJob.JobConfig.end_point_uncertainity)
  return _internal_mutable_end_point_uncertainity();
}
inline void DataCollectionJob_JobConfig::set_allocated_end_point_uncertainity(::data_collection_configuration_request::EndPointUncertainty* end_point_uncertainity) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete end_point_uncertainity_;
  }
  if (end_point_uncertainity) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      end_point_uncertainity = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, end_point_uncertainity, submessage_arena);
    }
    
  } else {
    
  }
  end_point_uncertainity_ = end_point_uncertainity;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.DataCollectionJob.JobConfig.end_point_uncertainity)
}

// .data_collection_configuration_request.DataRecordingGap data_recording_gap = 15;
inline bool DataCollectionJob_JobConfig::_internal_has_data_recording_gap() const {
  return this != internal_default_instance() && data_recording_gap_ != nullptr;
}
inline bool DataCollectionJob_JobConfig::has_data_recording_gap() const {
  return _internal_has_data_recording_gap();
}
inline void DataCollectionJob_JobConfig::clear_data_recording_gap() {
  if (GetArenaNoVirtual() == nullptr && data_recording_gap_ != nullptr) {
    delete data_recording_gap_;
  }
  data_recording_gap_ = nullptr;
}
inline const ::data_collection_configuration_request::DataRecordingGap& DataCollectionJob_JobConfig::_internal_data_recording_gap() const {
  const ::data_collection_configuration_request::DataRecordingGap* p = data_recording_gap_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::DataRecordingGap*>(
      &::data_collection_configuration_request::_DataRecordingGap_default_instance_);
}
inline const ::data_collection_configuration_request::DataRecordingGap& DataCollectionJob_JobConfig::data_recording_gap() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.data_recording_gap)
  return _internal_data_recording_gap();
}
inline ::data_collection_configuration_request::DataRecordingGap* DataCollectionJob_JobConfig::release_data_recording_gap() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.DataCollectionJob.JobConfig.data_recording_gap)
  
  ::data_collection_configuration_request::DataRecordingGap* temp = data_recording_gap_;
  data_recording_gap_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::DataRecordingGap* DataCollectionJob_JobConfig::_internal_mutable_data_recording_gap() {
  
  if (data_recording_gap_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::DataRecordingGap>(GetArenaNoVirtual());
    data_recording_gap_ = p;
  }
  return data_recording_gap_;
}
inline ::data_collection_configuration_request::DataRecordingGap* DataCollectionJob_JobConfig::mutable_data_recording_gap() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.DataCollectionJob.JobConfig.data_recording_gap)
  return _internal_mutable_data_recording_gap();
}
inline void DataCollectionJob_JobConfig::set_allocated_data_recording_gap(::data_collection_configuration_request::DataRecordingGap* data_recording_gap) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete data_recording_gap_;
  }
  if (data_recording_gap) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data_recording_gap = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data_recording_gap, submessage_arena);
    }
    
  } else {
    
  }
  data_recording_gap_ = data_recording_gap;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.DataCollectionJob.JobConfig.data_recording_gap)
}

// .data_collection_configuration_request.AbsoluteTimeOffset absolute_time_offset = 16;
inline bool DataCollectionJob_JobConfig::_internal_has_absolute_time_offset() const {
  return this != internal_default_instance() && absolute_time_offset_ != nullptr;
}
inline bool DataCollectionJob_JobConfig::has_absolute_time_offset() const {
  return _internal_has_absolute_time_offset();
}
inline void DataCollectionJob_JobConfig::clear_absolute_time_offset() {
  if (GetArenaNoVirtual() == nullptr && absolute_time_offset_ != nullptr) {
    delete absolute_time_offset_;
  }
  absolute_time_offset_ = nullptr;
}
inline const ::data_collection_configuration_request::AbsoluteTimeOffset& DataCollectionJob_JobConfig::_internal_absolute_time_offset() const {
  const ::data_collection_configuration_request::AbsoluteTimeOffset* p = absolute_time_offset_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::AbsoluteTimeOffset*>(
      &::data_collection_configuration_request::_AbsoluteTimeOffset_default_instance_);
}
inline const ::data_collection_configuration_request::AbsoluteTimeOffset& DataCollectionJob_JobConfig::absolute_time_offset() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.absolute_time_offset)
  return _internal_absolute_time_offset();
}
inline ::data_collection_configuration_request::AbsoluteTimeOffset* DataCollectionJob_JobConfig::release_absolute_time_offset() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.DataCollectionJob.JobConfig.absolute_time_offset)
  
  ::data_collection_configuration_request::AbsoluteTimeOffset* temp = absolute_time_offset_;
  absolute_time_offset_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::AbsoluteTimeOffset* DataCollectionJob_JobConfig::_internal_mutable_absolute_time_offset() {
  
  if (absolute_time_offset_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::AbsoluteTimeOffset>(GetArenaNoVirtual());
    absolute_time_offset_ = p;
  }
  return absolute_time_offset_;
}
inline ::data_collection_configuration_request::AbsoluteTimeOffset* DataCollectionJob_JobConfig::mutable_absolute_time_offset() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.DataCollectionJob.JobConfig.absolute_time_offset)
  return _internal_mutable_absolute_time_offset();
}
inline void DataCollectionJob_JobConfig::set_allocated_absolute_time_offset(::data_collection_configuration_request::AbsoluteTimeOffset* absolute_time_offset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete absolute_time_offset_;
  }
  if (absolute_time_offset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      absolute_time_offset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, absolute_time_offset, submessage_arena);
    }
    
  } else {
    
  }
  absolute_time_offset_ = absolute_time_offset;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.DataCollectionJob.JobConfig.absolute_time_offset)
}

// .data_collection_configuration_request.Version job_format_version = 17;
inline bool DataCollectionJob_JobConfig::_internal_has_job_format_version() const {
  return this != internal_default_instance() && job_format_version_ != nullptr;
}
inline bool DataCollectionJob_JobConfig::has_job_format_version() const {
  return _internal_has_job_format_version();
}
inline void DataCollectionJob_JobConfig::clear_job_format_version() {
  if (GetArenaNoVirtual() == nullptr && job_format_version_ != nullptr) {
    delete job_format_version_;
  }
  job_format_version_ = nullptr;
}
inline const ::data_collection_configuration_request::Version& DataCollectionJob_JobConfig::_internal_job_format_version() const {
  const ::data_collection_configuration_request::Version* p = job_format_version_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::Version*>(
      &::data_collection_configuration_request::_Version_default_instance_);
}
inline const ::data_collection_configuration_request::Version& DataCollectionJob_JobConfig::job_format_version() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.job_format_version)
  return _internal_job_format_version();
}
inline ::data_collection_configuration_request::Version* DataCollectionJob_JobConfig::release_job_format_version() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.DataCollectionJob.JobConfig.job_format_version)
  
  ::data_collection_configuration_request::Version* temp = job_format_version_;
  job_format_version_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::Version* DataCollectionJob_JobConfig::_internal_mutable_job_format_version() {
  
  if (job_format_version_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::Version>(GetArenaNoVirtual());
    job_format_version_ = p;
  }
  return job_format_version_;
}
inline ::data_collection_configuration_request::Version* DataCollectionJob_JobConfig::mutable_job_format_version() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.DataCollectionJob.JobConfig.job_format_version)
  return _internal_mutable_job_format_version();
}
inline void DataCollectionJob_JobConfig::set_allocated_job_format_version(::data_collection_configuration_request::Version* job_format_version) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete job_format_version_;
  }
  if (job_format_version) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      job_format_version = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, job_format_version, submessage_arena);
    }
    
  } else {
    
  }
  job_format_version_ = job_format_version;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.DataCollectionJob.JobConfig.job_format_version)
}

// .data_collection_configuration_request.RelativeTimeStampCaptureEnum relative_time_stamp_capture = 18;
inline void DataCollectionJob_JobConfig::clear_relative_time_stamp_capture() {
  relative_time_stamp_capture_ = 0;
}
inline ::data_collection_configuration_request::RelativeTimeStampCaptureEnum DataCollectionJob_JobConfig::_internal_relative_time_stamp_capture() const {
  return static_cast< ::data_collection_configuration_request::RelativeTimeStampCaptureEnum >(relative_time_stamp_capture_);
}
inline ::data_collection_configuration_request::RelativeTimeStampCaptureEnum DataCollectionJob_JobConfig::relative_time_stamp_capture() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.relative_time_stamp_capture)
  return _internal_relative_time_stamp_capture();
}
inline void DataCollectionJob_JobConfig::_internal_set_relative_time_stamp_capture(::data_collection_configuration_request::RelativeTimeStampCaptureEnum value) {
  
  relative_time_stamp_capture_ = value;
}
inline void DataCollectionJob_JobConfig::set_relative_time_stamp_capture(::data_collection_configuration_request::RelativeTimeStampCaptureEnum value) {
  _internal_set_relative_time_stamp_capture(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.relative_time_stamp_capture)
}

// bool record_tzoffset = 19;
inline void DataCollectionJob_JobConfig::clear_record_tzoffset() {
  record_tzoffset_ = false;
}
inline bool DataCollectionJob_JobConfig::_internal_record_tzoffset() const {
  return record_tzoffset_;
}
inline bool DataCollectionJob_JobConfig::record_tzoffset() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.record_tzoffset)
  return _internal_record_tzoffset();
}
inline void DataCollectionJob_JobConfig::_internal_set_record_tzoffset(bool value) {
  
  record_tzoffset_ = value;
}
inline void DataCollectionJob_JobConfig::set_record_tzoffset(bool value) {
  _internal_set_record_tzoffset(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.record_tzoffset)
}

// bool record_file_counter = 20;
inline void DataCollectionJob_JobConfig::clear_record_file_counter() {
  record_file_counter_ = false;
}
inline bool DataCollectionJob_JobConfig::_internal_record_file_counter() const {
  return record_file_counter_;
}
inline bool DataCollectionJob_JobConfig::record_file_counter() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.record_file_counter)
  return _internal_record_file_counter();
}
inline void DataCollectionJob_JobConfig::_internal_set_record_file_counter(bool value) {
  
  record_file_counter_ = value;
}
inline void DataCollectionJob_JobConfig::set_record_file_counter(bool value) {
  _internal_set_record_file_counter(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.record_file_counter)
}

// bool record_session_id = 21;
inline void DataCollectionJob_JobConfig::clear_record_session_id() {
  record_session_id_ = false;
}
inline bool DataCollectionJob_JobConfig::_internal_record_session_id() const {
  return record_session_id_;
}
inline bool DataCollectionJob_JobConfig::record_session_id() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.record_session_id)
  return _internal_record_session_id();
}
inline void DataCollectionJob_JobConfig::_internal_set_record_session_id(bool value) {
  
  record_session_id_ = value;
}
inline void DataCollectionJob_JobConfig::set_record_session_id(bool value) {
  _internal_set_record_session_id(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.record_session_id)
}

// bool record_rvid = 22;
inline void DataCollectionJob_JobConfig::clear_record_rvid() {
  record_rvid_ = false;
}
inline bool DataCollectionJob_JobConfig::_internal_record_rvid() const {
  return record_rvid_;
}
inline bool DataCollectionJob_JobConfig::record_rvid() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.record_rvid)
  return _internal_record_rvid();
}
inline void DataCollectionJob_JobConfig::_internal_set_record_rvid(bool value) {
  
  record_rvid_ = value;
}
inline void DataCollectionJob_JobConfig::set_record_rvid(bool value) {
  _internal_set_record_rvid(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.record_rvid)
}

// bool record_ecu_info = 23;
inline void DataCollectionJob_JobConfig::clear_record_ecu_info() {
  record_ecu_info_ = false;
}
inline bool DataCollectionJob_JobConfig::_internal_record_ecu_info() const {
  return record_ecu_info_;
}
inline bool DataCollectionJob_JobConfig::record_ecu_info() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.record_ecu_info)
  return _internal_record_ecu_info();
}
inline void DataCollectionJob_JobConfig::_internal_set_record_ecu_info(bool value) {
  
  record_ecu_info_ = value;
}
inline void DataCollectionJob_JobConfig::set_record_ecu_info(bool value) {
  _internal_set_record_ecu_info(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.record_ecu_info)
}

// bool record_market_info = 24;
inline void DataCollectionJob_JobConfig::clear_record_market_info() {
  record_market_info_ = false;
}
inline bool DataCollectionJob_JobConfig::_internal_record_market_info() const {
  return record_market_info_;
}
inline bool DataCollectionJob_JobConfig::record_market_info() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.record_market_info)
  return _internal_record_market_info();
}
inline void DataCollectionJob_JobConfig::_internal_set_record_market_info(bool value) {
  
  record_market_info_ = value;
}
inline void DataCollectionJob_JobConfig::set_record_market_info(bool value) {
  _internal_set_record_market_info(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.record_market_info)
}

// uint32 job_priority = 25;
inline void DataCollectionJob_JobConfig::clear_job_priority() {
  job_priority_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataCollectionJob_JobConfig::_internal_job_priority() const {
  return job_priority_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataCollectionJob_JobConfig::job_priority() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.job_priority)
  return _internal_job_priority();
}
inline void DataCollectionJob_JobConfig::_internal_set_job_priority(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  job_priority_ = value;
}
inline void DataCollectionJob_JobConfig::set_job_priority(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_job_priority(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.job_priority)
}

// repeated .request_format.data_types.KeyValuePair device_properties = 26;
inline int DataCollectionJob_JobConfig::_internal_device_properties_size() const {
  return device_properties_.size();
}
inline int DataCollectionJob_JobConfig::device_properties_size() const {
  return _internal_device_properties_size();
}
inline ::request_format::data_types::KeyValuePair* DataCollectionJob_JobConfig::mutable_device_properties(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.DataCollectionJob.JobConfig.device_properties)
  return device_properties_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::request_format::data_types::KeyValuePair >*
DataCollectionJob_JobConfig::mutable_device_properties() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.DataCollectionJob.JobConfig.device_properties)
  return &device_properties_;
}
inline const ::request_format::data_types::KeyValuePair& DataCollectionJob_JobConfig::_internal_device_properties(int index) const {
  return device_properties_.Get(index);
}
inline const ::request_format::data_types::KeyValuePair& DataCollectionJob_JobConfig::device_properties(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.device_properties)
  return _internal_device_properties(index);
}
inline ::request_format::data_types::KeyValuePair* DataCollectionJob_JobConfig::_internal_add_device_properties() {
  return device_properties_.Add();
}
inline ::request_format::data_types::KeyValuePair* DataCollectionJob_JobConfig::add_device_properties() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.DataCollectionJob.JobConfig.device_properties)
  return _internal_add_device_properties();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::request_format::data_types::KeyValuePair >&
DataCollectionJob_JobConfig::device_properties() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.DataCollectionJob.JobConfig.device_properties)
  return device_properties_;
}

// repeated .request_format.data_types.KeyValuePair debug_information = 27;
inline int DataCollectionJob_JobConfig::_internal_debug_information_size() const {
  return debug_information_.size();
}
inline int DataCollectionJob_JobConfig::debug_information_size() const {
  return _internal_debug_information_size();
}
inline ::request_format::data_types::KeyValuePair* DataCollectionJob_JobConfig::mutable_debug_information(int index) {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.DataCollectionJob.JobConfig.debug_information)
  return debug_information_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::request_format::data_types::KeyValuePair >*
DataCollectionJob_JobConfig::mutable_debug_information() {
  // @@protoc_insertion_point(field_mutable_list:data_collection_configuration_request.DataCollectionJob.JobConfig.debug_information)
  return &debug_information_;
}
inline const ::request_format::data_types::KeyValuePair& DataCollectionJob_JobConfig::_internal_debug_information(int index) const {
  return debug_information_.Get(index);
}
inline const ::request_format::data_types::KeyValuePair& DataCollectionJob_JobConfig::debug_information(int index) const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.debug_information)
  return _internal_debug_information(index);
}
inline ::request_format::data_types::KeyValuePair* DataCollectionJob_JobConfig::_internal_add_debug_information() {
  return debug_information_.Add();
}
inline ::request_format::data_types::KeyValuePair* DataCollectionJob_JobConfig::add_debug_information() {
  // @@protoc_insertion_point(field_add:data_collection_configuration_request.DataCollectionJob.JobConfig.debug_information)
  return _internal_add_debug_information();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::request_format::data_types::KeyValuePair >&
DataCollectionJob_JobConfig::debug_information() const {
  // @@protoc_insertion_point(field_list:data_collection_configuration_request.DataCollectionJob.JobConfig.debug_information)
  return debug_information_;
}

// .data_collection_configuration_request.DataPackageTimeToLive data_package_time_to_live_s = 28;
inline bool DataCollectionJob_JobConfig::_internal_has_data_package_time_to_live_s() const {
  return this != internal_default_instance() && data_package_time_to_live_s_ != nullptr;
}
inline bool DataCollectionJob_JobConfig::has_data_package_time_to_live_s() const {
  return _internal_has_data_package_time_to_live_s();
}
inline void DataCollectionJob_JobConfig::clear_data_package_time_to_live_s() {
  if (GetArenaNoVirtual() == nullptr && data_package_time_to_live_s_ != nullptr) {
    delete data_package_time_to_live_s_;
  }
  data_package_time_to_live_s_ = nullptr;
}
inline const ::data_collection_configuration_request::DataPackageTimeToLive& DataCollectionJob_JobConfig::_internal_data_package_time_to_live_s() const {
  const ::data_collection_configuration_request::DataPackageTimeToLive* p = data_package_time_to_live_s_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::DataPackageTimeToLive*>(
      &::data_collection_configuration_request::_DataPackageTimeToLive_default_instance_);
}
inline const ::data_collection_configuration_request::DataPackageTimeToLive& DataCollectionJob_JobConfig::data_package_time_to_live_s() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.data_package_time_to_live_s)
  return _internal_data_package_time_to_live_s();
}
inline ::data_collection_configuration_request::DataPackageTimeToLive* DataCollectionJob_JobConfig::release_data_package_time_to_live_s() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.DataCollectionJob.JobConfig.data_package_time_to_live_s)
  
  ::data_collection_configuration_request::DataPackageTimeToLive* temp = data_package_time_to_live_s_;
  data_package_time_to_live_s_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::DataPackageTimeToLive* DataCollectionJob_JobConfig::_internal_mutable_data_package_time_to_live_s() {
  
  if (data_package_time_to_live_s_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::DataPackageTimeToLive>(GetArenaNoVirtual());
    data_package_time_to_live_s_ = p;
  }
  return data_package_time_to_live_s_;
}
inline ::data_collection_configuration_request::DataPackageTimeToLive* DataCollectionJob_JobConfig::mutable_data_package_time_to_live_s() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.DataCollectionJob.JobConfig.data_package_time_to_live_s)
  return _internal_mutable_data_package_time_to_live_s();
}
inline void DataCollectionJob_JobConfig::set_allocated_data_package_time_to_live_s(::data_collection_configuration_request::DataPackageTimeToLive* data_package_time_to_live_s) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete data_package_time_to_live_s_;
  }
  if (data_package_time_to_live_s) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data_package_time_to_live_s = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data_package_time_to_live_s, submessage_arena);
    }
    
  } else {
    
  }
  data_package_time_to_live_s_ = data_package_time_to_live_s;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.DataCollectionJob.JobConfig.data_package_time_to_live_s)
}

// .data_collection_configuration_request.UploadChannel upload_channel = 29;
inline void DataCollectionJob_JobConfig::clear_upload_channel() {
  upload_channel_ = 0;
}
inline ::data_collection_configuration_request::UploadChannel DataCollectionJob_JobConfig::_internal_upload_channel() const {
  return static_cast< ::data_collection_configuration_request::UploadChannel >(upload_channel_);
}
inline ::data_collection_configuration_request::UploadChannel DataCollectionJob_JobConfig::upload_channel() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.JobConfig.upload_channel)
  return _internal_upload_channel();
}
inline void DataCollectionJob_JobConfig::_internal_set_upload_channel(::data_collection_configuration_request::UploadChannel value) {
  
  upload_channel_ = value;
}
inline void DataCollectionJob_JobConfig::set_upload_channel(::data_collection_configuration_request::UploadChannel value) {
  _internal_set_upload_channel(value);
  // @@protoc_insertion_point(field_set:data_collection_configuration_request.DataCollectionJob.JobConfig.upload_channel)
}

// -------------------------------------------------------------------

// DataCollectionJob

// .data_collection_configuration_request.DataCollectionJob.JobConfig job_config = 1;
inline bool DataCollectionJob::_internal_has_job_config() const {
  return this != internal_default_instance() && job_config_ != nullptr;
}
inline bool DataCollectionJob::has_job_config() const {
  return _internal_has_job_config();
}
inline void DataCollectionJob::clear_job_config() {
  if (GetArenaNoVirtual() == nullptr && job_config_ != nullptr) {
    delete job_config_;
  }
  job_config_ = nullptr;
}
inline const ::data_collection_configuration_request::DataCollectionJob_JobConfig& DataCollectionJob::_internal_job_config() const {
  const ::data_collection_configuration_request::DataCollectionJob_JobConfig* p = job_config_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::DataCollectionJob_JobConfig*>(
      &::data_collection_configuration_request::_DataCollectionJob_JobConfig_default_instance_);
}
inline const ::data_collection_configuration_request::DataCollectionJob_JobConfig& DataCollectionJob::job_config() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.job_config)
  return _internal_job_config();
}
inline ::data_collection_configuration_request::DataCollectionJob_JobConfig* DataCollectionJob::release_job_config() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.DataCollectionJob.job_config)
  
  ::data_collection_configuration_request::DataCollectionJob_JobConfig* temp = job_config_;
  job_config_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::DataCollectionJob_JobConfig* DataCollectionJob::_internal_mutable_job_config() {
  
  if (job_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::DataCollectionJob_JobConfig>(GetArenaNoVirtual());
    job_config_ = p;
  }
  return job_config_;
}
inline ::data_collection_configuration_request::DataCollectionJob_JobConfig* DataCollectionJob::mutable_job_config() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.DataCollectionJob.job_config)
  return _internal_mutable_job_config();
}
inline void DataCollectionJob::set_allocated_job_config(::data_collection_configuration_request::DataCollectionJob_JobConfig* job_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete job_config_;
  }
  if (job_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      job_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, job_config, submessage_arena);
    }
    
  } else {
    
  }
  job_config_ = job_config;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.DataCollectionJob.job_config)
}

// .data_collection_configuration_request.JobValidityRestrictions validity_restrictions = 2;
inline bool DataCollectionJob::_internal_has_validity_restrictions() const {
  return this != internal_default_instance() && validity_restrictions_ != nullptr;
}
inline bool DataCollectionJob::has_validity_restrictions() const {
  return _internal_has_validity_restrictions();
}
inline void DataCollectionJob::clear_validity_restrictions() {
  if (GetArenaNoVirtual() == nullptr && validity_restrictions_ != nullptr) {
    delete validity_restrictions_;
  }
  validity_restrictions_ = nullptr;
}
inline const ::data_collection_configuration_request::JobValidityRestrictions& DataCollectionJob::_internal_validity_restrictions() const {
  const ::data_collection_configuration_request::JobValidityRestrictions* p = validity_restrictions_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::JobValidityRestrictions*>(
      &::data_collection_configuration_request::_JobValidityRestrictions_default_instance_);
}
inline const ::data_collection_configuration_request::JobValidityRestrictions& DataCollectionJob::validity_restrictions() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.validity_restrictions)
  return _internal_validity_restrictions();
}
inline ::data_collection_configuration_request::JobValidityRestrictions* DataCollectionJob::release_validity_restrictions() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.DataCollectionJob.validity_restrictions)
  
  ::data_collection_configuration_request::JobValidityRestrictions* temp = validity_restrictions_;
  validity_restrictions_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::JobValidityRestrictions* DataCollectionJob::_internal_mutable_validity_restrictions() {
  
  if (validity_restrictions_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::JobValidityRestrictions>(GetArenaNoVirtual());
    validity_restrictions_ = p;
  }
  return validity_restrictions_;
}
inline ::data_collection_configuration_request::JobValidityRestrictions* DataCollectionJob::mutable_validity_restrictions() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.DataCollectionJob.validity_restrictions)
  return _internal_mutable_validity_restrictions();
}
inline void DataCollectionJob::set_allocated_validity_restrictions(::data_collection_configuration_request::JobValidityRestrictions* validity_restrictions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete validity_restrictions_;
  }
  if (validity_restrictions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      validity_restrictions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, validity_restrictions, submessage_arena);
    }
    
  } else {
    
  }
  validity_restrictions_ = validity_restrictions;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.DataCollectionJob.validity_restrictions)
}

// .data_collection_configuration_request.CollectionAction action = 3;
inline bool DataCollectionJob::_internal_has_action() const {
  return this != internal_default_instance() && action_ != nullptr;
}
inline bool DataCollectionJob::has_action() const {
  return _internal_has_action();
}
inline void DataCollectionJob::clear_action() {
  if (GetArenaNoVirtual() == nullptr && action_ != nullptr) {
    delete action_;
  }
  action_ = nullptr;
}
inline const ::data_collection_configuration_request::CollectionAction& DataCollectionJob::_internal_action() const {
  const ::data_collection_configuration_request::CollectionAction* p = action_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::CollectionAction*>(
      &::data_collection_configuration_request::_CollectionAction_default_instance_);
}
inline const ::data_collection_configuration_request::CollectionAction& DataCollectionJob::action() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.action)
  return _internal_action();
}
inline ::data_collection_configuration_request::CollectionAction* DataCollectionJob::release_action() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.DataCollectionJob.action)
  
  ::data_collection_configuration_request::CollectionAction* temp = action_;
  action_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::CollectionAction* DataCollectionJob::_internal_mutable_action() {
  
  if (action_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::CollectionAction>(GetArenaNoVirtual());
    action_ = p;
  }
  return action_;
}
inline ::data_collection_configuration_request::CollectionAction* DataCollectionJob::mutable_action() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.DataCollectionJob.action)
  return _internal_mutable_action();
}
inline void DataCollectionJob::set_allocated_action(::data_collection_configuration_request::CollectionAction* action) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_;
  }
  if (action) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, action, submessage_arena);
    }
    
  } else {
    
  }
  action_ = action;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.DataCollectionJob.action)
}

// .data_collection_configuration_request.JobTerminationConditions termination_conditions = 4;
inline bool DataCollectionJob::_internal_has_termination_conditions() const {
  return this != internal_default_instance() && termination_conditions_ != nullptr;
}
inline bool DataCollectionJob::has_termination_conditions() const {
  return _internal_has_termination_conditions();
}
inline void DataCollectionJob::clear_termination_conditions() {
  if (GetArenaNoVirtual() == nullptr && termination_conditions_ != nullptr) {
    delete termination_conditions_;
  }
  termination_conditions_ = nullptr;
}
inline const ::data_collection_configuration_request::JobTerminationConditions& DataCollectionJob::_internal_termination_conditions() const {
  const ::data_collection_configuration_request::JobTerminationConditions* p = termination_conditions_;
  return p != nullptr ? *p : *reinterpret_cast<const ::data_collection_configuration_request::JobTerminationConditions*>(
      &::data_collection_configuration_request::_JobTerminationConditions_default_instance_);
}
inline const ::data_collection_configuration_request::JobTerminationConditions& DataCollectionJob::termination_conditions() const {
  // @@protoc_insertion_point(field_get:data_collection_configuration_request.DataCollectionJob.termination_conditions)
  return _internal_termination_conditions();
}
inline ::data_collection_configuration_request::JobTerminationConditions* DataCollectionJob::release_termination_conditions() {
  // @@protoc_insertion_point(field_release:data_collection_configuration_request.DataCollectionJob.termination_conditions)
  
  ::data_collection_configuration_request::JobTerminationConditions* temp = termination_conditions_;
  termination_conditions_ = nullptr;
  return temp;
}
inline ::data_collection_configuration_request::JobTerminationConditions* DataCollectionJob::_internal_mutable_termination_conditions() {
  
  if (termination_conditions_ == nullptr) {
    auto* p = CreateMaybeMessage<::data_collection_configuration_request::JobTerminationConditions>(GetArenaNoVirtual());
    termination_conditions_ = p;
  }
  return termination_conditions_;
}
inline ::data_collection_configuration_request::JobTerminationConditions* DataCollectionJob::mutable_termination_conditions() {
  // @@protoc_insertion_point(field_mutable:data_collection_configuration_request.DataCollectionJob.termination_conditions)
  return _internal_mutable_termination_conditions();
}
inline void DataCollectionJob::set_allocated_termination_conditions(::data_collection_configuration_request::JobTerminationConditions* termination_conditions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete termination_conditions_;
  }
  if (termination_conditions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      termination_conditions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, termination_conditions, submessage_arena);
    }
    
  } else {
    
  }
  termination_conditions_ = termination_conditions;
  // @@protoc_insertion_point(field_set_allocated:data_collection_configuration_request.DataCollectionJob.termination_conditions)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace data_collection_configuration_request

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::data_collection_configuration_request::CompositeTimeRange_WeekdayEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::data_collection_configuration_request::CompositeTimeRange_WeekdayEnum>() {
  return ::data_collection_configuration_request::CompositeTimeRange_WeekdayEnum_descriptor();
}
template <> struct is_proto_enum< ::data_collection_configuration_request::MapRestriction_RoadAttributeEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::data_collection_configuration_request::MapRestriction_RoadAttributeEnum>() {
  return ::data_collection_configuration_request::MapRestriction_RoadAttributeEnum_descriptor();
}
template <> struct is_proto_enum< ::data_collection_configuration_request::TimeDeltaTriggerEvent_TimeTriggerType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::data_collection_configuration_request::TimeDeltaTriggerEvent_TimeTriggerType>() {
  return ::data_collection_configuration_request::TimeDeltaTriggerEvent_TimeTriggerType_descriptor();
}
template <> struct is_proto_enum< ::data_collection_configuration_request::Datapoint_DataPointValueTypeEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::data_collection_configuration_request::Datapoint_DataPointValueTypeEnum>() {
  return ::data_collection_configuration_request::Datapoint_DataPointValueTypeEnum_descriptor();
}
template <> struct is_proto_enum< ::data_collection_configuration_request::Datapoint_RelativeDataValueCaptureEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::data_collection_configuration_request::Datapoint_RelativeDataValueCaptureEnum>() {
  return ::data_collection_configuration_request::Datapoint_RelativeDataValueCaptureEnum_descriptor();
}
template <> struct is_proto_enum< ::data_collection_configuration_request::LogicalOperatorEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::data_collection_configuration_request::LogicalOperatorEnum>() {
  return ::data_collection_configuration_request::LogicalOperatorEnum_descriptor();
}
template <> struct is_proto_enum< ::data_collection_configuration_request::System_States> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::data_collection_configuration_request::System_States>() {
  return ::data_collection_configuration_request::System_States_descriptor();
}
template <> struct is_proto_enum< ::data_collection_configuration_request::RelativeTimeStampCaptureEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::data_collection_configuration_request::RelativeTimeStampCaptureEnum>() {
  return ::data_collection_configuration_request::RelativeTimeStampCaptureEnum_descriptor();
}
template <> struct is_proto_enum< ::data_collection_configuration_request::UploadChannel> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::data_collection_configuration_request::UploadChannel>() {
  return ::data_collection_configuration_request::UploadChannel_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_data_5fcollection_5fconfiguration_5frequest_2eproto
