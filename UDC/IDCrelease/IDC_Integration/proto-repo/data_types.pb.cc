// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_types.proto

#include "data_types.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_data_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AggregatedMetaData_data_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_data_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BasicArray_data_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_data_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BasicValue_data_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_data_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_KeyValueArray_data_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_data_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_KeyValuePair_data_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_data_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ThriftmeMetaData_data_5ftypes_2eproto;
namespace request_format {
namespace data_types {
class KeyValuePairDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<KeyValuePair> _instance;
} _KeyValuePair_default_instance_;
class BasicValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BasicValue> _instance;
  double double_value_;
  float float_value_;
  ::PROTOBUF_NAMESPACE_ID::int32 int32_value_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64_value_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uint32_value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uint64_value_;
  ::PROTOBUF_NAMESPACE_ID::int32 sint32_value_;
  ::PROTOBUF_NAMESPACE_ID::int64 sint64_value_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fixed32_value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 fixed64_value_;
  ::PROTOBUF_NAMESPACE_ID::int32 sfixed32_value_;
  ::PROTOBUF_NAMESPACE_ID::int64 sfixed64_value_;
  bool bool_value_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_value_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bytes_value_;
} _BasicValue_default_instance_;
class BasicArrayDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BasicArray> _instance;
} _BasicArray_default_instance_;
class KeyValueArrayDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<KeyValueArray> _instance;
} _KeyValueArray_default_instance_;
class AggregatedMetaDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AggregatedMetaData> _instance;
} _AggregatedMetaData_default_instance_;
class AggregatedDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AggregatedData> _instance;
  const ::request_format::data_types::BasicValue* value_scalar_;
  const ::request_format::data_types::BasicArray* value_arr_;
  const ::request_format::data_types::KeyValuePair* value_pair_;
  const ::request_format::data_types::KeyValueArray* value_pair_arr_;
} _AggregatedData_default_instance_;
class ThriftmeMetaDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ThriftmeMetaData> _instance;
} _ThriftmeMetaData_default_instance_;
class MetaDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MetaData> _instance;
  const ::request_format::data_types::ThriftmeMetaData* thriftme_metadata_;
  const ::request_format::data_types::AggregatedMetaData* aggregated_metadata_;
} _MetaData_default_instance_;
}  // namespace data_types
}  // namespace request_format
static void InitDefaultsscc_info_AggregatedData_data_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_format::data_types::_AggregatedData_default_instance_;
    new (ptr) ::request_format::data_types::AggregatedData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_format::data_types::AggregatedData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_AggregatedData_data_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_AggregatedData_data_5ftypes_2eproto}, {
      &scc_info_BasicValue_data_5ftypes_2eproto.base,
      &scc_info_BasicArray_data_5ftypes_2eproto.base,
      &scc_info_KeyValuePair_data_5ftypes_2eproto.base,
      &scc_info_KeyValueArray_data_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_AggregatedMetaData_data_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_format::data_types::_AggregatedMetaData_default_instance_;
    new (ptr) ::request_format::data_types::AggregatedMetaData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_format::data_types::AggregatedMetaData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AggregatedMetaData_data_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AggregatedMetaData_data_5ftypes_2eproto}, {}};

static void InitDefaultsscc_info_BasicArray_data_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_format::data_types::_BasicArray_default_instance_;
    new (ptr) ::request_format::data_types::BasicArray();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_format::data_types::BasicArray::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BasicArray_data_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_BasicArray_data_5ftypes_2eproto}, {
      &scc_info_BasicValue_data_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_BasicValue_data_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_format::data_types::_BasicValue_default_instance_;
    new (ptr) ::request_format::data_types::BasicValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_format::data_types::BasicValue::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BasicValue_data_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BasicValue_data_5ftypes_2eproto}, {}};

static void InitDefaultsscc_info_KeyValueArray_data_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_format::data_types::_KeyValueArray_default_instance_;
    new (ptr) ::request_format::data_types::KeyValueArray();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_format::data_types::KeyValueArray::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_KeyValueArray_data_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_KeyValueArray_data_5ftypes_2eproto}, {
      &scc_info_KeyValuePair_data_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_KeyValuePair_data_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_format::data_types::_KeyValuePair_default_instance_;
    new (ptr) ::request_format::data_types::KeyValuePair();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_format::data_types::KeyValuePair::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_KeyValuePair_data_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_KeyValuePair_data_5ftypes_2eproto}, {}};

static void InitDefaultsscc_info_MetaData_data_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_format::data_types::_MetaData_default_instance_;
    new (ptr) ::request_format::data_types::MetaData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_format::data_types::MetaData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_MetaData_data_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_MetaData_data_5ftypes_2eproto}, {
      &scc_info_ThriftmeMetaData_data_5ftypes_2eproto.base,
      &scc_info_AggregatedMetaData_data_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_ThriftmeMetaData_data_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_format::data_types::_ThriftmeMetaData_default_instance_;
    new (ptr) ::request_format::data_types::ThriftmeMetaData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_format::data_types::ThriftmeMetaData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ThriftmeMetaData_data_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ThriftmeMetaData_data_5ftypes_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_data_5ftypes_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_data_5ftypes_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_data_5ftypes_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_data_5ftypes_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::KeyValuePair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::KeyValuePair, key_),
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::KeyValuePair, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::BasicValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::BasicValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::request_format::data_types::BasicValueDefaultTypeInternal, double_value_),
  offsetof(::request_format::data_types::BasicValueDefaultTypeInternal, float_value_),
  offsetof(::request_format::data_types::BasicValueDefaultTypeInternal, int32_value_),
  offsetof(::request_format::data_types::BasicValueDefaultTypeInternal, int64_value_),
  offsetof(::request_format::data_types::BasicValueDefaultTypeInternal, uint32_value_),
  offsetof(::request_format::data_types::BasicValueDefaultTypeInternal, uint64_value_),
  offsetof(::request_format::data_types::BasicValueDefaultTypeInternal, sint32_value_),
  offsetof(::request_format::data_types::BasicValueDefaultTypeInternal, sint64_value_),
  offsetof(::request_format::data_types::BasicValueDefaultTypeInternal, fixed32_value_),
  offsetof(::request_format::data_types::BasicValueDefaultTypeInternal, fixed64_value_),
  offsetof(::request_format::data_types::BasicValueDefaultTypeInternal, sfixed32_value_),
  offsetof(::request_format::data_types::BasicValueDefaultTypeInternal, sfixed64_value_),
  offsetof(::request_format::data_types::BasicValueDefaultTypeInternal, bool_value_),
  offsetof(::request_format::data_types::BasicValueDefaultTypeInternal, string_value_),
  offsetof(::request_format::data_types::BasicValueDefaultTypeInternal, bytes_value_),
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::BasicValue, data_field_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::BasicArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::BasicArray, arr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::KeyValueArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::KeyValueArray, arr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::AggregatedMetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::AggregatedMetaData, start_timestamp_),
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::AggregatedMetaData, end_timestamp_),
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::AggregatedMetaData, num_datapoints_),
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::AggregatedMetaData, comment_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::AggregatedData, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::AggregatedData, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::request_format::data_types::AggregatedDataDefaultTypeInternal, value_scalar_),
  offsetof(::request_format::data_types::AggregatedDataDefaultTypeInternal, value_arr_),
  offsetof(::request_format::data_types::AggregatedDataDefaultTypeInternal, value_pair_),
  offsetof(::request_format::data_types::AggregatedDataDefaultTypeInternal, value_pair_arr_),
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::AggregatedData, data_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::ThriftmeMetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::ThriftmeMetaData, uri_),
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::ThriftmeMetaData, service_id_),
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::ThriftmeMetaData, sequence_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::MetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::MetaData, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::request_format::data_types::MetaDataDefaultTypeInternal, thriftme_metadata_),
  offsetof(::request_format::data_types::MetaDataDefaultTypeInternal, aggregated_metadata_),
  PROTOBUF_FIELD_OFFSET(::request_format::data_types::MetaData, metadata_value_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::request_format::data_types::KeyValuePair)},
  { 7, -1, sizeof(::request_format::data_types::BasicValue)},
  { 28, -1, sizeof(::request_format::data_types::BasicArray)},
  { 34, -1, sizeof(::request_format::data_types::KeyValueArray)},
  { 40, -1, sizeof(::request_format::data_types::AggregatedMetaData)},
  { 49, -1, sizeof(::request_format::data_types::AggregatedData)},
  { 59, -1, sizeof(::request_format::data_types::ThriftmeMetaData)},
  { 67, -1, sizeof(::request_format::data_types::MetaData)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::request_format::data_types::_KeyValuePair_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::request_format::data_types::_BasicValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::request_format::data_types::_BasicArray_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::request_format::data_types::_KeyValueArray_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::request_format::data_types::_AggregatedMetaData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::request_format::data_types::_AggregatedData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::request_format::data_types::_ThriftmeMetaData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::request_format::data_types::_MetaData_default_instance_),
};

const char descriptor_table_protodef_data_5ftypes_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020data_types.proto\022\031request_format.data_"
  "types\"*\n\014KeyValuePair\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
  "lue\030\002 \001(\t\"\210\003\n\nBasicValue\022\026\n\014double_value"
  "\030\001 \001(\001H\000\022\025\n\013float_value\030\002 \001(\002H\000\022\025\n\013int32"
  "_value\030\003 \001(\005H\000\022\025\n\013int64_value\030\004 \001(\003H\000\022\026\n"
  "\014uint32_value\030\005 \001(\rH\000\022\026\n\014uint64_value\030\006 "
  "\001(\004H\000\022\026\n\014sint32_value\030\007 \001(\021H\000\022\026\n\014sint64_"
  "value\030\010 \001(\022H\000\022\027\n\rfixed32_value\030\t \001(\007H\000\022\027"
  "\n\rfixed64_value\030\n \001(\006H\000\022\030\n\016sfixed32_valu"
  "e\030\013 \001(\017H\000\022\030\n\016sfixed64_value\030\014 \001(\020H\000\022\024\n\nb"
  "ool_value\030\r \001(\010H\000\022\026\n\014string_value\030\016 \001(\tH"
  "\000\022\025\n\013bytes_value\030\017 \001(\014H\000B\022\n\020data_field_v"
  "alue\"@\n\nBasicArray\0222\n\003arr\030\001 \003(\0132%.reques"
  "t_format.data_types.BasicValue\"E\n\rKeyVal"
  "ueArray\0224\n\003arr\030\001 \003(\0132\'.request_format.da"
  "ta_types.KeyValuePair\"m\n\022AggregatedMetaD"
  "ata\022\027\n\017start_timestamp\030\001 \001(\005\022\025\n\rend_time"
  "stamp\030\002 \001(\005\022\026\n\016num_datapoints\030\003 \001(\004\022\017\n\007c"
  "omment\030\004 \001(\t\"\234\002\n\016AggregatedData\022=\n\014value"
  "_scalar\030\001 \001(\0132%.request_format.data_type"
  "s.BasicValueH\000\022:\n\tvalue_arr\030\002 \001(\0132%.requ"
  "est_format.data_types.BasicArrayH\000\022=\n\nva"
  "lue_pair\030\003 \001(\0132\'.request_format.data_typ"
  "es.KeyValuePairH\000\022B\n\016value_pair_arr\030\004 \001("
  "\0132(.request_format.data_types.KeyValueAr"
  "rayH\000B\014\n\ndata_value\"H\n\020ThriftmeMetaData\022"
  "\013\n\003uri\030\001 \003(\t\022\022\n\nservice_id\030\002 \001(\r\022\023\n\013sequ"
  "ence_id\030\003 \001(\005\"\264\001\n\010MetaData\022H\n\021thriftme_m"
  "etadata\030\001 \001(\0132+.request_format.data_type"
  "s.ThriftmeMetaDataH\000\022L\n\023aggregated_metad"
  "ata\030\002 \001(\0132-.request_format.data_types.Ag"
  "gregatedMetaDataH\000B\020\n\016metadata_valueb\006pr"
  "oto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_data_5ftypes_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_data_5ftypes_2eproto_sccs[8] = {
  &scc_info_AggregatedData_data_5ftypes_2eproto.base,
  &scc_info_AggregatedMetaData_data_5ftypes_2eproto.base,
  &scc_info_BasicArray_data_5ftypes_2eproto.base,
  &scc_info_BasicValue_data_5ftypes_2eproto.base,
  &scc_info_KeyValueArray_data_5ftypes_2eproto.base,
  &scc_info_KeyValuePair_data_5ftypes_2eproto.base,
  &scc_info_MetaData_data_5ftypes_2eproto.base,
  &scc_info_ThriftmeMetaData_data_5ftypes_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_data_5ftypes_2eproto_once;
static bool descriptor_table_data_5ftypes_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_data_5ftypes_2eproto = {
  &descriptor_table_data_5ftypes_2eproto_initialized, descriptor_table_protodef_data_5ftypes_2eproto, "data_types.proto", 1284,
  &descriptor_table_data_5ftypes_2eproto_once, descriptor_table_data_5ftypes_2eproto_sccs, descriptor_table_data_5ftypes_2eproto_deps, 8, 0,
  schemas, file_default_instances, TableStruct_data_5ftypes_2eproto::offsets,
  file_level_metadata_data_5ftypes_2eproto, 8, file_level_enum_descriptors_data_5ftypes_2eproto, file_level_service_descriptors_data_5ftypes_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_data_5ftypes_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_data_5ftypes_2eproto), true);
namespace request_format {
namespace data_types {

// ===================================================================

void KeyValuePair::InitAsDefaultInstance() {
}
class KeyValuePair::_Internal {
 public:
};

KeyValuePair::KeyValuePair()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_format.data_types.KeyValuePair)
}
KeyValuePair::KeyValuePair(const KeyValuePair& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:request_format.data_types.KeyValuePair)
}

void KeyValuePair::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_KeyValuePair_data_5ftypes_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

KeyValuePair::~KeyValuePair() {
  // @@protoc_insertion_point(destructor:request_format.data_types.KeyValuePair)
  SharedDtor();
}

void KeyValuePair::SharedDtor() {
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void KeyValuePair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KeyValuePair& KeyValuePair::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_KeyValuePair_data_5ftypes_2eproto.base);
  return *internal_default_instance();
}


void KeyValuePair::Clear() {
// @@protoc_insertion_point(message_clear_start:request_format.data_types.KeyValuePair)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* KeyValuePair::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "request_format.data_types.KeyValuePair.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "request_format.data_types.KeyValuePair.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* KeyValuePair::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_format.data_types.KeyValuePair)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "request_format.data_types.KeyValuePair.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "request_format.data_types.KeyValuePair.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_format.data_types.KeyValuePair)
  return target;
}

size_t KeyValuePair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_format.data_types.KeyValuePair)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyValuePair::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_format.data_types.KeyValuePair)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValuePair* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KeyValuePair>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_format.data_types.KeyValuePair)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_format.data_types.KeyValuePair)
    MergeFrom(*source);
  }
}

void KeyValuePair::MergeFrom(const KeyValuePair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_format.data_types.KeyValuePair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void KeyValuePair::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_format.data_types.KeyValuePair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValuePair::CopyFrom(const KeyValuePair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_format.data_types.KeyValuePair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValuePair::IsInitialized() const {
  return true;
}

void KeyValuePair::InternalSwap(KeyValuePair* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyValuePair::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BasicValue::InitAsDefaultInstance() {
  ::request_format::data_types::_BasicValue_default_instance_.double_value_ = 0;
  ::request_format::data_types::_BasicValue_default_instance_.float_value_ = 0;
  ::request_format::data_types::_BasicValue_default_instance_.int32_value_ = 0;
  ::request_format::data_types::_BasicValue_default_instance_.int64_value_ = PROTOBUF_LONGLONG(0);
  ::request_format::data_types::_BasicValue_default_instance_.uint32_value_ = 0u;
  ::request_format::data_types::_BasicValue_default_instance_.uint64_value_ = PROTOBUF_ULONGLONG(0);
  ::request_format::data_types::_BasicValue_default_instance_.sint32_value_ = 0;
  ::request_format::data_types::_BasicValue_default_instance_.sint64_value_ = PROTOBUF_LONGLONG(0);
  ::request_format::data_types::_BasicValue_default_instance_.fixed32_value_ = 0u;
  ::request_format::data_types::_BasicValue_default_instance_.fixed64_value_ = PROTOBUF_ULONGLONG(0);
  ::request_format::data_types::_BasicValue_default_instance_.sfixed32_value_ = 0;
  ::request_format::data_types::_BasicValue_default_instance_.sfixed64_value_ = PROTOBUF_LONGLONG(0);
  ::request_format::data_types::_BasicValue_default_instance_.bool_value_ = false;
  ::request_format::data_types::_BasicValue_default_instance_.string_value_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::request_format::data_types::_BasicValue_default_instance_.bytes_value_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
class BasicValue::_Internal {
 public:
};

BasicValue::BasicValue()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_format.data_types.BasicValue)
}
BasicValue::BasicValue(const BasicValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_data_field_value();
  switch (from.data_field_value_case()) {
    case kDoubleValue: {
      _internal_set_double_value(from._internal_double_value());
      break;
    }
    case kFloatValue: {
      _internal_set_float_value(from._internal_float_value());
      break;
    }
    case kInt32Value: {
      _internal_set_int32_value(from._internal_int32_value());
      break;
    }
    case kInt64Value: {
      _internal_set_int64_value(from._internal_int64_value());
      break;
    }
    case kUint32Value: {
      _internal_set_uint32_value(from._internal_uint32_value());
      break;
    }
    case kUint64Value: {
      _internal_set_uint64_value(from._internal_uint64_value());
      break;
    }
    case kSint32Value: {
      _internal_set_sint32_value(from._internal_sint32_value());
      break;
    }
    case kSint64Value: {
      _internal_set_sint64_value(from._internal_sint64_value());
      break;
    }
    case kFixed32Value: {
      _internal_set_fixed32_value(from._internal_fixed32_value());
      break;
    }
    case kFixed64Value: {
      _internal_set_fixed64_value(from._internal_fixed64_value());
      break;
    }
    case kSfixed32Value: {
      _internal_set_sfixed32_value(from._internal_sfixed32_value());
      break;
    }
    case kSfixed64Value: {
      _internal_set_sfixed64_value(from._internal_sfixed64_value());
      break;
    }
    case kBoolValue: {
      _internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kStringValue: {
      _internal_set_string_value(from._internal_string_value());
      break;
    }
    case kBytesValue: {
      _internal_set_bytes_value(from._internal_bytes_value());
      break;
    }
    case DATA_FIELD_VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:request_format.data_types.BasicValue)
}

void BasicValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BasicValue_data_5ftypes_2eproto.base);
  clear_has_data_field_value();
}

BasicValue::~BasicValue() {
  // @@protoc_insertion_point(destructor:request_format.data_types.BasicValue)
  SharedDtor();
}

void BasicValue::SharedDtor() {
  if (has_data_field_value()) {
    clear_data_field_value();
  }
}

void BasicValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BasicValue& BasicValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BasicValue_data_5ftypes_2eproto.base);
  return *internal_default_instance();
}


void BasicValue::clear_data_field_value() {
// @@protoc_insertion_point(one_of_clear_start:request_format.data_types.BasicValue)
  switch (data_field_value_case()) {
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kFloatValue: {
      // No need to clear
      break;
    }
    case kInt32Value: {
      // No need to clear
      break;
    }
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kUint32Value: {
      // No need to clear
      break;
    }
    case kUint64Value: {
      // No need to clear
      break;
    }
    case kSint32Value: {
      // No need to clear
      break;
    }
    case kSint64Value: {
      // No need to clear
      break;
    }
    case kFixed32Value: {
      // No need to clear
      break;
    }
    case kFixed64Value: {
      // No need to clear
      break;
    }
    case kSfixed32Value: {
      // No need to clear
      break;
    }
    case kSfixed64Value: {
      // No need to clear
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      data_field_value_.string_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBytesValue: {
      data_field_value_.bytes_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case DATA_FIELD_VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_FIELD_VALUE_NOT_SET;
}


void BasicValue::Clear() {
// @@protoc_insertion_point(message_clear_start:request_format.data_types.BasicValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data_field_value();
  _internal_metadata_.Clear();
}

const char* BasicValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double double_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _internal_set_double_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // float float_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          _internal_set_float_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 int32_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _internal_set_int32_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 int64_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _internal_set_int64_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 uint32_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _internal_set_uint32_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 uint64_value = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _internal_set_uint64_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 sint32_value = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _internal_set_sint32_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint64 sint64_value = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _internal_set_sint64_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // fixed32 fixed32_value = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 77)) {
          _internal_set_fixed32_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr));
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // fixed64 fixed64_value = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 81)) {
          _internal_set_fixed64_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr));
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // sfixed32 sfixed32_value = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 93)) {
          _internal_set_sfixed32_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::int32>(ptr));
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::int32);
        } else goto handle_unusual;
        continue;
      // sfixed64 sfixed64_value = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 97)) {
          _internal_set_sfixed64_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::int64>(ptr));
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::int64);
        } else goto handle_unusual;
        continue;
      // bool bool_value = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _internal_set_bool_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string string_value = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_string_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "request_format.data_types.BasicValue.string_value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes bytes_value = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_bytes_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BasicValue::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_format.data_types.BasicValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double double_value = 1;
  if (_internal_has_double_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_double_value(), target);
  }

  // float float_value = 2;
  if (_internal_has_float_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_float_value(), target);
  }

  // int32 int32_value = 3;
  if (_internal_has_int32_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_int32_value(), target);
  }

  // int64 int64_value = 4;
  if (_internal_has_int64_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_int64_value(), target);
  }

  // uint32 uint32_value = 5;
  if (_internal_has_uint32_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_uint32_value(), target);
  }

  // uint64 uint64_value = 6;
  if (_internal_has_uint64_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_uint64_value(), target);
  }

  // sint32 sint32_value = 7;
  if (_internal_has_sint32_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(7, this->_internal_sint32_value(), target);
  }

  // sint64 sint64_value = 8;
  if (_internal_has_sint64_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt64ToArray(8, this->_internal_sint64_value(), target);
  }

  // fixed32 fixed32_value = 9;
  if (_internal_has_fixed32_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(9, this->_internal_fixed32_value(), target);
  }

  // fixed64 fixed64_value = 10;
  if (_internal_has_fixed64_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(10, this->_internal_fixed64_value(), target);
  }

  // sfixed32 sfixed32_value = 11;
  if (_internal_has_sfixed32_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSFixed32ToArray(11, this->_internal_sfixed32_value(), target);
  }

  // sfixed64 sfixed64_value = 12;
  if (_internal_has_sfixed64_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSFixed64ToArray(12, this->_internal_sfixed64_value(), target);
  }

  // bool bool_value = 13;
  if (_internal_has_bool_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(13, this->_internal_bool_value(), target);
  }

  // string string_value = 14;
  if (_internal_has_string_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_value().data(), static_cast<int>(this->_internal_string_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "request_format.data_types.BasicValue.string_value");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_string_value(), target);
  }

  // bytes bytes_value = 15;
  if (_internal_has_bytes_value()) {
    target = stream->WriteBytesMaybeAliased(
        15, this->_internal_bytes_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_format.data_types.BasicValue)
  return target;
}

size_t BasicValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_format.data_types.BasicValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (data_field_value_case()) {
    // double double_value = 1;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // float float_value = 2;
    case kFloatValue: {
      total_size += 1 + 4;
      break;
    }
    // int32 int32_value = 3;
    case kInt32Value: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_int32_value());
      break;
    }
    // int64 int64_value = 4;
    case kInt64Value: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_int64_value());
      break;
    }
    // uint32 uint32_value = 5;
    case kUint32Value: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_uint32_value());
      break;
    }
    // uint64 uint64_value = 6;
    case kUint64Value: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_uint64_value());
      break;
    }
    // sint32 sint32_value = 7;
    case kSint32Value: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
          this->_internal_sint32_value());
      break;
    }
    // sint64 sint64_value = 8;
    case kSint64Value: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt64Size(
          this->_internal_sint64_value());
      break;
    }
    // fixed32 fixed32_value = 9;
    case kFixed32Value: {
      total_size += 1 + 4;
      break;
    }
    // fixed64 fixed64_value = 10;
    case kFixed64Value: {
      total_size += 1 + 8;
      break;
    }
    // sfixed32 sfixed32_value = 11;
    case kSfixed32Value: {
      total_size += 1 + 4;
      break;
    }
    // sfixed64 sfixed64_value = 12;
    case kSfixed64Value: {
      total_size += 1 + 8;
      break;
    }
    // bool bool_value = 13;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // string string_value = 14;
    case kStringValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_value());
      break;
    }
    // bytes bytes_value = 15;
    case kBytesValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_bytes_value());
      break;
    }
    case DATA_FIELD_VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BasicValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_format.data_types.BasicValue)
  GOOGLE_DCHECK_NE(&from, this);
  const BasicValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BasicValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_format.data_types.BasicValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_format.data_types.BasicValue)
    MergeFrom(*source);
  }
}

void BasicValue::MergeFrom(const BasicValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_format.data_types.BasicValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_field_value_case()) {
    case kDoubleValue: {
      _internal_set_double_value(from._internal_double_value());
      break;
    }
    case kFloatValue: {
      _internal_set_float_value(from._internal_float_value());
      break;
    }
    case kInt32Value: {
      _internal_set_int32_value(from._internal_int32_value());
      break;
    }
    case kInt64Value: {
      _internal_set_int64_value(from._internal_int64_value());
      break;
    }
    case kUint32Value: {
      _internal_set_uint32_value(from._internal_uint32_value());
      break;
    }
    case kUint64Value: {
      _internal_set_uint64_value(from._internal_uint64_value());
      break;
    }
    case kSint32Value: {
      _internal_set_sint32_value(from._internal_sint32_value());
      break;
    }
    case kSint64Value: {
      _internal_set_sint64_value(from._internal_sint64_value());
      break;
    }
    case kFixed32Value: {
      _internal_set_fixed32_value(from._internal_fixed32_value());
      break;
    }
    case kFixed64Value: {
      _internal_set_fixed64_value(from._internal_fixed64_value());
      break;
    }
    case kSfixed32Value: {
      _internal_set_sfixed32_value(from._internal_sfixed32_value());
      break;
    }
    case kSfixed64Value: {
      _internal_set_sfixed64_value(from._internal_sfixed64_value());
      break;
    }
    case kBoolValue: {
      _internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kStringValue: {
      _internal_set_string_value(from._internal_string_value());
      break;
    }
    case kBytesValue: {
      _internal_set_bytes_value(from._internal_bytes_value());
      break;
    }
    case DATA_FIELD_VALUE_NOT_SET: {
      break;
    }
  }
}

void BasicValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_format.data_types.BasicValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicValue::CopyFrom(const BasicValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_format.data_types.BasicValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicValue::IsInitialized() const {
  return true;
}

void BasicValue::InternalSwap(BasicValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(data_field_value_, other->data_field_value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata BasicValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BasicArray::InitAsDefaultInstance() {
}
class BasicArray::_Internal {
 public:
};

BasicArray::BasicArray()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_format.data_types.BasicArray)
}
BasicArray::BasicArray(const BasicArray& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      arr_(from.arr_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:request_format.data_types.BasicArray)
}

void BasicArray::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BasicArray_data_5ftypes_2eproto.base);
}

BasicArray::~BasicArray() {
  // @@protoc_insertion_point(destructor:request_format.data_types.BasicArray)
  SharedDtor();
}

void BasicArray::SharedDtor() {
}

void BasicArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BasicArray& BasicArray::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BasicArray_data_5ftypes_2eproto.base);
  return *internal_default_instance();
}


void BasicArray::Clear() {
// @@protoc_insertion_point(message_clear_start:request_format.data_types.BasicArray)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arr_.Clear();
  _internal_metadata_.Clear();
}

const char* BasicArray::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .request_format.data_types.BasicValue arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_arr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BasicArray::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_format.data_types.BasicArray)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .request_format.data_types.BasicValue arr = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_arr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_arr(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_format.data_types.BasicArray)
  return target;
}

size_t BasicArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_format.data_types.BasicArray)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .request_format.data_types.BasicValue arr = 1;
  total_size += 1UL * this->_internal_arr_size();
  for (const auto& msg : this->arr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BasicArray::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_format.data_types.BasicArray)
  GOOGLE_DCHECK_NE(&from, this);
  const BasicArray* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BasicArray>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_format.data_types.BasicArray)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_format.data_types.BasicArray)
    MergeFrom(*source);
  }
}

void BasicArray::MergeFrom(const BasicArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_format.data_types.BasicArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arr_.MergeFrom(from.arr_);
}

void BasicArray::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_format.data_types.BasicArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicArray::CopyFrom(const BasicArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_format.data_types.BasicArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicArray::IsInitialized() const {
  return true;
}

void BasicArray::InternalSwap(BasicArray* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  arr_.InternalSwap(&other->arr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BasicArray::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void KeyValueArray::InitAsDefaultInstance() {
}
class KeyValueArray::_Internal {
 public:
};

KeyValueArray::KeyValueArray()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_format.data_types.KeyValueArray)
}
KeyValueArray::KeyValueArray(const KeyValueArray& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      arr_(from.arr_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:request_format.data_types.KeyValueArray)
}

void KeyValueArray::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_KeyValueArray_data_5ftypes_2eproto.base);
}

KeyValueArray::~KeyValueArray() {
  // @@protoc_insertion_point(destructor:request_format.data_types.KeyValueArray)
  SharedDtor();
}

void KeyValueArray::SharedDtor() {
}

void KeyValueArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KeyValueArray& KeyValueArray::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_KeyValueArray_data_5ftypes_2eproto.base);
  return *internal_default_instance();
}


void KeyValueArray::Clear() {
// @@protoc_insertion_point(message_clear_start:request_format.data_types.KeyValueArray)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arr_.Clear();
  _internal_metadata_.Clear();
}

const char* KeyValueArray::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .request_format.data_types.KeyValuePair arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_arr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* KeyValueArray::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_format.data_types.KeyValueArray)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .request_format.data_types.KeyValuePair arr = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_arr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_arr(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_format.data_types.KeyValueArray)
  return target;
}

size_t KeyValueArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_format.data_types.KeyValueArray)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .request_format.data_types.KeyValuePair arr = 1;
  total_size += 1UL * this->_internal_arr_size();
  for (const auto& msg : this->arr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyValueArray::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_format.data_types.KeyValueArray)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValueArray* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KeyValueArray>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_format.data_types.KeyValueArray)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_format.data_types.KeyValueArray)
    MergeFrom(*source);
  }
}

void KeyValueArray::MergeFrom(const KeyValueArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_format.data_types.KeyValueArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arr_.MergeFrom(from.arr_);
}

void KeyValueArray::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_format.data_types.KeyValueArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValueArray::CopyFrom(const KeyValueArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_format.data_types.KeyValueArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValueArray::IsInitialized() const {
  return true;
}

void KeyValueArray::InternalSwap(KeyValueArray* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  arr_.InternalSwap(&other->arr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyValueArray::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AggregatedMetaData::InitAsDefaultInstance() {
}
class AggregatedMetaData::_Internal {
 public:
};

AggregatedMetaData::AggregatedMetaData()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_format.data_types.AggregatedMetaData)
}
AggregatedMetaData::AggregatedMetaData(const AggregatedMetaData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  comment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_comment().empty()) {
    comment_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  ::memcpy(&start_timestamp_, &from.start_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_datapoints_) -
    reinterpret_cast<char*>(&start_timestamp_)) + sizeof(num_datapoints_));
  // @@protoc_insertion_point(copy_constructor:request_format.data_types.AggregatedMetaData)
}

void AggregatedMetaData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AggregatedMetaData_data_5ftypes_2eproto.base);
  comment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_datapoints_) -
      reinterpret_cast<char*>(&start_timestamp_)) + sizeof(num_datapoints_));
}

AggregatedMetaData::~AggregatedMetaData() {
  // @@protoc_insertion_point(destructor:request_format.data_types.AggregatedMetaData)
  SharedDtor();
}

void AggregatedMetaData::SharedDtor() {
  comment_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AggregatedMetaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AggregatedMetaData& AggregatedMetaData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AggregatedMetaData_data_5ftypes_2eproto.base);
  return *internal_default_instance();
}


void AggregatedMetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:request_format.data_types.AggregatedMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  comment_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_datapoints_) -
      reinterpret_cast<char*>(&start_timestamp_)) + sizeof(num_datapoints_));
  _internal_metadata_.Clear();
}

const char* AggregatedMetaData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 start_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          start_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 end_timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          end_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 num_datapoints = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          num_datapoints_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string comment = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_comment();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "request_format.data_types.AggregatedMetaData.comment"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AggregatedMetaData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_format.data_types.AggregatedMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 start_timestamp = 1;
  if (this->start_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_start_timestamp(), target);
  }

  // int32 end_timestamp = 2;
  if (this->end_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_end_timestamp(), target);
  }

  // uint64 num_datapoints = 3;
  if (this->num_datapoints() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_num_datapoints(), target);
  }

  // string comment = 4;
  if (this->comment().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_comment().data(), static_cast<int>(this->_internal_comment().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "request_format.data_types.AggregatedMetaData.comment");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_comment(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_format.data_types.AggregatedMetaData)
  return target;
}

size_t AggregatedMetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_format.data_types.AggregatedMetaData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string comment = 4;
  if (this->comment().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_comment());
  }

  // int32 start_timestamp = 1;
  if (this->start_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_start_timestamp());
  }

  // int32 end_timestamp = 2;
  if (this->end_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_end_timestamp());
  }

  // uint64 num_datapoints = 3;
  if (this->num_datapoints() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_num_datapoints());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AggregatedMetaData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_format.data_types.AggregatedMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  const AggregatedMetaData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AggregatedMetaData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_format.data_types.AggregatedMetaData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_format.data_types.AggregatedMetaData)
    MergeFrom(*source);
  }
}

void AggregatedMetaData::MergeFrom(const AggregatedMetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_format.data_types.AggregatedMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.comment().size() > 0) {

    comment_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.start_timestamp() != 0) {
    _internal_set_start_timestamp(from._internal_start_timestamp());
  }
  if (from.end_timestamp() != 0) {
    _internal_set_end_timestamp(from._internal_end_timestamp());
  }
  if (from.num_datapoints() != 0) {
    _internal_set_num_datapoints(from._internal_num_datapoints());
  }
}

void AggregatedMetaData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_format.data_types.AggregatedMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AggregatedMetaData::CopyFrom(const AggregatedMetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_format.data_types.AggregatedMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AggregatedMetaData::IsInitialized() const {
  return true;
}

void AggregatedMetaData::InternalSwap(AggregatedMetaData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  comment_.Swap(&other->comment_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_timestamp_, other->start_timestamp_);
  swap(end_timestamp_, other->end_timestamp_);
  swap(num_datapoints_, other->num_datapoints_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AggregatedMetaData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AggregatedData::InitAsDefaultInstance() {
  ::request_format::data_types::_AggregatedData_default_instance_.value_scalar_ = const_cast< ::request_format::data_types::BasicValue*>(
      ::request_format::data_types::BasicValue::internal_default_instance());
  ::request_format::data_types::_AggregatedData_default_instance_.value_arr_ = const_cast< ::request_format::data_types::BasicArray*>(
      ::request_format::data_types::BasicArray::internal_default_instance());
  ::request_format::data_types::_AggregatedData_default_instance_.value_pair_ = const_cast< ::request_format::data_types::KeyValuePair*>(
      ::request_format::data_types::KeyValuePair::internal_default_instance());
  ::request_format::data_types::_AggregatedData_default_instance_.value_pair_arr_ = const_cast< ::request_format::data_types::KeyValueArray*>(
      ::request_format::data_types::KeyValueArray::internal_default_instance());
}
class AggregatedData::_Internal {
 public:
  static const ::request_format::data_types::BasicValue& value_scalar(const AggregatedData* msg);
  static const ::request_format::data_types::BasicArray& value_arr(const AggregatedData* msg);
  static const ::request_format::data_types::KeyValuePair& value_pair(const AggregatedData* msg);
  static const ::request_format::data_types::KeyValueArray& value_pair_arr(const AggregatedData* msg);
};

const ::request_format::data_types::BasicValue&
AggregatedData::_Internal::value_scalar(const AggregatedData* msg) {
  return *msg->data_value_.value_scalar_;
}
const ::request_format::data_types::BasicArray&
AggregatedData::_Internal::value_arr(const AggregatedData* msg) {
  return *msg->data_value_.value_arr_;
}
const ::request_format::data_types::KeyValuePair&
AggregatedData::_Internal::value_pair(const AggregatedData* msg) {
  return *msg->data_value_.value_pair_;
}
const ::request_format::data_types::KeyValueArray&
AggregatedData::_Internal::value_pair_arr(const AggregatedData* msg) {
  return *msg->data_value_.value_pair_arr_;
}
void AggregatedData::set_allocated_value_scalar(::request_format::data_types::BasicValue* value_scalar) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_data_value();
  if (value_scalar) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value_scalar = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value_scalar, submessage_arena);
    }
    set_has_value_scalar();
    data_value_.value_scalar_ = value_scalar;
  }
  // @@protoc_insertion_point(field_set_allocated:request_format.data_types.AggregatedData.value_scalar)
}
void AggregatedData::set_allocated_value_arr(::request_format::data_types::BasicArray* value_arr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_data_value();
  if (value_arr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value_arr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value_arr, submessage_arena);
    }
    set_has_value_arr();
    data_value_.value_arr_ = value_arr;
  }
  // @@protoc_insertion_point(field_set_allocated:request_format.data_types.AggregatedData.value_arr)
}
void AggregatedData::set_allocated_value_pair(::request_format::data_types::KeyValuePair* value_pair) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_data_value();
  if (value_pair) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value_pair = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value_pair, submessage_arena);
    }
    set_has_value_pair();
    data_value_.value_pair_ = value_pair;
  }
  // @@protoc_insertion_point(field_set_allocated:request_format.data_types.AggregatedData.value_pair)
}
void AggregatedData::set_allocated_value_pair_arr(::request_format::data_types::KeyValueArray* value_pair_arr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_data_value();
  if (value_pair_arr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value_pair_arr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value_pair_arr, submessage_arena);
    }
    set_has_value_pair_arr();
    data_value_.value_pair_arr_ = value_pair_arr;
  }
  // @@protoc_insertion_point(field_set_allocated:request_format.data_types.AggregatedData.value_pair_arr)
}
AggregatedData::AggregatedData()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_format.data_types.AggregatedData)
}
AggregatedData::AggregatedData(const AggregatedData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_data_value();
  switch (from.data_value_case()) {
    case kValueScalar: {
      _internal_mutable_value_scalar()->::request_format::data_types::BasicValue::MergeFrom(from._internal_value_scalar());
      break;
    }
    case kValueArr: {
      _internal_mutable_value_arr()->::request_format::data_types::BasicArray::MergeFrom(from._internal_value_arr());
      break;
    }
    case kValuePair: {
      _internal_mutable_value_pair()->::request_format::data_types::KeyValuePair::MergeFrom(from._internal_value_pair());
      break;
    }
    case kValuePairArr: {
      _internal_mutable_value_pair_arr()->::request_format::data_types::KeyValueArray::MergeFrom(from._internal_value_pair_arr());
      break;
    }
    case DATA_VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:request_format.data_types.AggregatedData)
}

void AggregatedData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AggregatedData_data_5ftypes_2eproto.base);
  clear_has_data_value();
}

AggregatedData::~AggregatedData() {
  // @@protoc_insertion_point(destructor:request_format.data_types.AggregatedData)
  SharedDtor();
}

void AggregatedData::SharedDtor() {
  if (has_data_value()) {
    clear_data_value();
  }
}

void AggregatedData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AggregatedData& AggregatedData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AggregatedData_data_5ftypes_2eproto.base);
  return *internal_default_instance();
}


void AggregatedData::clear_data_value() {
// @@protoc_insertion_point(one_of_clear_start:request_format.data_types.AggregatedData)
  switch (data_value_case()) {
    case kValueScalar: {
      delete data_value_.value_scalar_;
      break;
    }
    case kValueArr: {
      delete data_value_.value_arr_;
      break;
    }
    case kValuePair: {
      delete data_value_.value_pair_;
      break;
    }
    case kValuePairArr: {
      delete data_value_.value_pair_arr_;
      break;
    }
    case DATA_VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_VALUE_NOT_SET;
}


void AggregatedData::Clear() {
// @@protoc_insertion_point(message_clear_start:request_format.data_types.AggregatedData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data_value();
  _internal_metadata_.Clear();
}

const char* AggregatedData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .request_format.data_types.BasicValue value_scalar = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_scalar(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .request_format.data_types.BasicArray value_arr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_arr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .request_format.data_types.KeyValuePair value_pair = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_pair(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .request_format.data_types.KeyValueArray value_pair_arr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_pair_arr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AggregatedData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_format.data_types.AggregatedData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .request_format.data_types.BasicValue value_scalar = 1;
  if (_internal_has_value_scalar()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::value_scalar(this), target, stream);
  }

  // .request_format.data_types.BasicArray value_arr = 2;
  if (_internal_has_value_arr()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value_arr(this), target, stream);
  }

  // .request_format.data_types.KeyValuePair value_pair = 3;
  if (_internal_has_value_pair()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::value_pair(this), target, stream);
  }

  // .request_format.data_types.KeyValueArray value_pair_arr = 4;
  if (_internal_has_value_pair_arr()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::value_pair_arr(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_format.data_types.AggregatedData)
  return target;
}

size_t AggregatedData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_format.data_types.AggregatedData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (data_value_case()) {
    // .request_format.data_types.BasicValue value_scalar = 1;
    case kValueScalar: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_value_.value_scalar_);
      break;
    }
    // .request_format.data_types.BasicArray value_arr = 2;
    case kValueArr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_value_.value_arr_);
      break;
    }
    // .request_format.data_types.KeyValuePair value_pair = 3;
    case kValuePair: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_value_.value_pair_);
      break;
    }
    // .request_format.data_types.KeyValueArray value_pair_arr = 4;
    case kValuePairArr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_value_.value_pair_arr_);
      break;
    }
    case DATA_VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AggregatedData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_format.data_types.AggregatedData)
  GOOGLE_DCHECK_NE(&from, this);
  const AggregatedData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AggregatedData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_format.data_types.AggregatedData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_format.data_types.AggregatedData)
    MergeFrom(*source);
  }
}

void AggregatedData::MergeFrom(const AggregatedData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_format.data_types.AggregatedData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_value_case()) {
    case kValueScalar: {
      _internal_mutable_value_scalar()->::request_format::data_types::BasicValue::MergeFrom(from._internal_value_scalar());
      break;
    }
    case kValueArr: {
      _internal_mutable_value_arr()->::request_format::data_types::BasicArray::MergeFrom(from._internal_value_arr());
      break;
    }
    case kValuePair: {
      _internal_mutable_value_pair()->::request_format::data_types::KeyValuePair::MergeFrom(from._internal_value_pair());
      break;
    }
    case kValuePairArr: {
      _internal_mutable_value_pair_arr()->::request_format::data_types::KeyValueArray::MergeFrom(from._internal_value_pair_arr());
      break;
    }
    case DATA_VALUE_NOT_SET: {
      break;
    }
  }
}

void AggregatedData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_format.data_types.AggregatedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AggregatedData::CopyFrom(const AggregatedData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_format.data_types.AggregatedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AggregatedData::IsInitialized() const {
  return true;
}

void AggregatedData::InternalSwap(AggregatedData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(data_value_, other->data_value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata AggregatedData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ThriftmeMetaData::InitAsDefaultInstance() {
}
class ThriftmeMetaData::_Internal {
 public:
};

ThriftmeMetaData::ThriftmeMetaData()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_format.data_types.ThriftmeMetaData)
}
ThriftmeMetaData::ThriftmeMetaData(const ThriftmeMetaData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      uri_(from.uri_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&service_id_, &from.service_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&sequence_id_) -
    reinterpret_cast<char*>(&service_id_)) + sizeof(sequence_id_));
  // @@protoc_insertion_point(copy_constructor:request_format.data_types.ThriftmeMetaData)
}

void ThriftmeMetaData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ThriftmeMetaData_data_5ftypes_2eproto.base);
  ::memset(&service_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequence_id_) -
      reinterpret_cast<char*>(&service_id_)) + sizeof(sequence_id_));
}

ThriftmeMetaData::~ThriftmeMetaData() {
  // @@protoc_insertion_point(destructor:request_format.data_types.ThriftmeMetaData)
  SharedDtor();
}

void ThriftmeMetaData::SharedDtor() {
}

void ThriftmeMetaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ThriftmeMetaData& ThriftmeMetaData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ThriftmeMetaData_data_5ftypes_2eproto.base);
  return *internal_default_instance();
}


void ThriftmeMetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:request_format.data_types.ThriftmeMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.Clear();
  ::memset(&service_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequence_id_) -
      reinterpret_cast<char*>(&service_id_)) + sizeof(sequence_id_));
  _internal_metadata_.Clear();
}

const char* ThriftmeMetaData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_uri();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "request_format.data_types.ThriftmeMetaData.uri"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // uint32 service_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          service_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sequence_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          sequence_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ThriftmeMetaData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_format.data_types.ThriftmeMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string uri = 1;
  for (int i = 0, n = this->_internal_uri_size(); i < n; i++) {
    const auto& s = this->_internal_uri(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "request_format.data_types.ThriftmeMetaData.uri");
    target = stream->WriteString(1, s, target);
  }

  // uint32 service_id = 2;
  if (this->service_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_service_id(), target);
  }

  // int32 sequence_id = 3;
  if (this->sequence_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_sequence_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_format.data_types.ThriftmeMetaData)
  return target;
}

size_t ThriftmeMetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_format.data_types.ThriftmeMetaData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string uri = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(uri_.size());
  for (int i = 0, n = uri_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      uri_.Get(i));
  }

  // uint32 service_id = 2;
  if (this->service_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_service_id());
  }

  // int32 sequence_id = 3;
  if (this->sequence_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sequence_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ThriftmeMetaData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_format.data_types.ThriftmeMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  const ThriftmeMetaData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ThriftmeMetaData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_format.data_types.ThriftmeMetaData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_format.data_types.ThriftmeMetaData)
    MergeFrom(*source);
  }
}

void ThriftmeMetaData::MergeFrom(const ThriftmeMetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_format.data_types.ThriftmeMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uri_.MergeFrom(from.uri_);
  if (from.service_id() != 0) {
    _internal_set_service_id(from._internal_service_id());
  }
  if (from.sequence_id() != 0) {
    _internal_set_sequence_id(from._internal_sequence_id());
  }
}

void ThriftmeMetaData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_format.data_types.ThriftmeMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThriftmeMetaData::CopyFrom(const ThriftmeMetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_format.data_types.ThriftmeMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThriftmeMetaData::IsInitialized() const {
  return true;
}

void ThriftmeMetaData::InternalSwap(ThriftmeMetaData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  uri_.InternalSwap(&other->uri_);
  swap(service_id_, other->service_id_);
  swap(sequence_id_, other->sequence_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ThriftmeMetaData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MetaData::InitAsDefaultInstance() {
  ::request_format::data_types::_MetaData_default_instance_.thriftme_metadata_ = const_cast< ::request_format::data_types::ThriftmeMetaData*>(
      ::request_format::data_types::ThriftmeMetaData::internal_default_instance());
  ::request_format::data_types::_MetaData_default_instance_.aggregated_metadata_ = const_cast< ::request_format::data_types::AggregatedMetaData*>(
      ::request_format::data_types::AggregatedMetaData::internal_default_instance());
}
class MetaData::_Internal {
 public:
  static const ::request_format::data_types::ThriftmeMetaData& thriftme_metadata(const MetaData* msg);
  static const ::request_format::data_types::AggregatedMetaData& aggregated_metadata(const MetaData* msg);
};

const ::request_format::data_types::ThriftmeMetaData&
MetaData::_Internal::thriftme_metadata(const MetaData* msg) {
  return *msg->metadata_value_.thriftme_metadata_;
}
const ::request_format::data_types::AggregatedMetaData&
MetaData::_Internal::aggregated_metadata(const MetaData* msg) {
  return *msg->metadata_value_.aggregated_metadata_;
}
void MetaData::set_allocated_thriftme_metadata(::request_format::data_types::ThriftmeMetaData* thriftme_metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_metadata_value();
  if (thriftme_metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      thriftme_metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, thriftme_metadata, submessage_arena);
    }
    set_has_thriftme_metadata();
    metadata_value_.thriftme_metadata_ = thriftme_metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:request_format.data_types.MetaData.thriftme_metadata)
}
void MetaData::set_allocated_aggregated_metadata(::request_format::data_types::AggregatedMetaData* aggregated_metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_metadata_value();
  if (aggregated_metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      aggregated_metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, aggregated_metadata, submessage_arena);
    }
    set_has_aggregated_metadata();
    metadata_value_.aggregated_metadata_ = aggregated_metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:request_format.data_types.MetaData.aggregated_metadata)
}
MetaData::MetaData()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_format.data_types.MetaData)
}
MetaData::MetaData(const MetaData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_metadata_value();
  switch (from.metadata_value_case()) {
    case kThriftmeMetadata: {
      _internal_mutable_thriftme_metadata()->::request_format::data_types::ThriftmeMetaData::MergeFrom(from._internal_thriftme_metadata());
      break;
    }
    case kAggregatedMetadata: {
      _internal_mutable_aggregated_metadata()->::request_format::data_types::AggregatedMetaData::MergeFrom(from._internal_aggregated_metadata());
      break;
    }
    case METADATA_VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:request_format.data_types.MetaData)
}

void MetaData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MetaData_data_5ftypes_2eproto.base);
  clear_has_metadata_value();
}

MetaData::~MetaData() {
  // @@protoc_insertion_point(destructor:request_format.data_types.MetaData)
  SharedDtor();
}

void MetaData::SharedDtor() {
  if (has_metadata_value()) {
    clear_metadata_value();
  }
}

void MetaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetaData& MetaData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MetaData_data_5ftypes_2eproto.base);
  return *internal_default_instance();
}


void MetaData::clear_metadata_value() {
// @@protoc_insertion_point(one_of_clear_start:request_format.data_types.MetaData)
  switch (metadata_value_case()) {
    case kThriftmeMetadata: {
      delete metadata_value_.thriftme_metadata_;
      break;
    }
    case kAggregatedMetadata: {
      delete metadata_value_.aggregated_metadata_;
      break;
    }
    case METADATA_VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = METADATA_VALUE_NOT_SET;
}


void MetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:request_format.data_types.MetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_metadata_value();
  _internal_metadata_.Clear();
}

const char* MetaData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .request_format.data_types.ThriftmeMetaData thriftme_metadata = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_thriftme_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .request_format.data_types.AggregatedMetaData aggregated_metadata = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_aggregated_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MetaData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_format.data_types.MetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .request_format.data_types.ThriftmeMetaData thriftme_metadata = 1;
  if (_internal_has_thriftme_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::thriftme_metadata(this), target, stream);
  }

  // .request_format.data_types.AggregatedMetaData aggregated_metadata = 2;
  if (_internal_has_aggregated_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::aggregated_metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_format.data_types.MetaData)
  return target;
}

size_t MetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_format.data_types.MetaData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (metadata_value_case()) {
    // .request_format.data_types.ThriftmeMetaData thriftme_metadata = 1;
    case kThriftmeMetadata: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *metadata_value_.thriftme_metadata_);
      break;
    }
    // .request_format.data_types.AggregatedMetaData aggregated_metadata = 2;
    case kAggregatedMetadata: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *metadata_value_.aggregated_metadata_);
      break;
    }
    case METADATA_VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetaData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_format.data_types.MetaData)
  GOOGLE_DCHECK_NE(&from, this);
  const MetaData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MetaData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_format.data_types.MetaData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_format.data_types.MetaData)
    MergeFrom(*source);
  }
}

void MetaData::MergeFrom(const MetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_format.data_types.MetaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.metadata_value_case()) {
    case kThriftmeMetadata: {
      _internal_mutable_thriftme_metadata()->::request_format::data_types::ThriftmeMetaData::MergeFrom(from._internal_thriftme_metadata());
      break;
    }
    case kAggregatedMetadata: {
      _internal_mutable_aggregated_metadata()->::request_format::data_types::AggregatedMetaData::MergeFrom(from._internal_aggregated_metadata());
      break;
    }
    case METADATA_VALUE_NOT_SET: {
      break;
    }
  }
}

void MetaData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_format.data_types.MetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetaData::CopyFrom(const MetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_format.data_types.MetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetaData::IsInitialized() const {
  return true;
}

void MetaData::InternalSwap(MetaData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(metadata_value_, other->metadata_value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MetaData::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace data_types
}  // namespace request_format
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::request_format::data_types::KeyValuePair* Arena::CreateMaybeMessage< ::request_format::data_types::KeyValuePair >(Arena* arena) {
  return Arena::CreateInternal< ::request_format::data_types::KeyValuePair >(arena);
}
template<> PROTOBUF_NOINLINE ::request_format::data_types::BasicValue* Arena::CreateMaybeMessage< ::request_format::data_types::BasicValue >(Arena* arena) {
  return Arena::CreateInternal< ::request_format::data_types::BasicValue >(arena);
}
template<> PROTOBUF_NOINLINE ::request_format::data_types::BasicArray* Arena::CreateMaybeMessage< ::request_format::data_types::BasicArray >(Arena* arena) {
  return Arena::CreateInternal< ::request_format::data_types::BasicArray >(arena);
}
template<> PROTOBUF_NOINLINE ::request_format::data_types::KeyValueArray* Arena::CreateMaybeMessage< ::request_format::data_types::KeyValueArray >(Arena* arena) {
  return Arena::CreateInternal< ::request_format::data_types::KeyValueArray >(arena);
}
template<> PROTOBUF_NOINLINE ::request_format::data_types::AggregatedMetaData* Arena::CreateMaybeMessage< ::request_format::data_types::AggregatedMetaData >(Arena* arena) {
  return Arena::CreateInternal< ::request_format::data_types::AggregatedMetaData >(arena);
}
template<> PROTOBUF_NOINLINE ::request_format::data_types::AggregatedData* Arena::CreateMaybeMessage< ::request_format::data_types::AggregatedData >(Arena* arena) {
  return Arena::CreateInternal< ::request_format::data_types::AggregatedData >(arena);
}
template<> PROTOBUF_NOINLINE ::request_format::data_types::ThriftmeMetaData* Arena::CreateMaybeMessage< ::request_format::data_types::ThriftmeMetaData >(Arena* arena) {
  return Arena::CreateInternal< ::request_format::data_types::ThriftmeMetaData >(arena);
}
template<> PROTOBUF_NOINLINE ::request_format::data_types::MetaData* Arena::CreateMaybeMessage< ::request_format::data_types::MetaData >(Arena* arena) {
  return Arena::CreateInternal< ::request_format::data_types::MetaData >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
